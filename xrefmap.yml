### YamlMime:XRefMap
sorted: true
references:
- uid: Aviant.DDD.Application.ApplicationEvents
  name: Aviant.DDD.Application.ApplicationEvents
  href: api/Aviant.DDD.Application.ApplicationEvents.html
  commentId: N:Aviant.DDD.Application.ApplicationEvents
  fullName: Aviant.DDD.Application.ApplicationEvents
  nameWithType: Aviant.DDD.Application.ApplicationEvents
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEvent
  name: ApplicationEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.html
  commentId: T:Aviant.DDD.Application.ApplicationEvents.ApplicationEvent
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEvent
  nameWithType: ApplicationEvent
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.Occured
  name: Occured
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEvent_Occured
  commentId: P:Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.Occured
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.Occured
  nameWithType: ApplicationEvent.Occured
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.Occured*
  name: Occured
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEvent_Occured_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.Occured
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.Occured
  nameWithType: ApplicationEvent.Occured
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher
  name: ApplicationEventDispatcher
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html
  commentId: T:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher
  nameWithType: ApplicationEventDispatcher
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.#ctor(IMediator,Aviant.DDD.Application.Services.IDateTimeService)
  name: ApplicationEventDispatcher(IMediator, IDateTimeService)
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher__ctor_IMediator_Aviant_DDD_Application_Services_IDateTimeService_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.#ctor(IMediator,Aviant.DDD.Application.Services.IDateTimeService)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.ApplicationEventDispatcher(IMediator, Aviant.DDD.Application.Services.IDateTimeService)
  nameWithType: ApplicationEventDispatcher.ApplicationEventDispatcher(IMediator, IDateTimeService)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.#ctor*
  name: ApplicationEventDispatcher
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher__ctor_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.ApplicationEventDispatcher
  nameWithType: ApplicationEventDispatcher.ApplicationEventDispatcher
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  name: AddPostCommitEvent(IApplicationEvent)
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_AddPostCommitEvent_Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  nameWithType: ApplicationEventDispatcher.AddPostCommitEvent(IApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPostCommitEvent*
  name: AddPostCommitEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_AddPostCommitEvent_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPostCommitEvent
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPostCommitEvent
  nameWithType: ApplicationEventDispatcher.AddPostCommitEvent
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  name: AddPreCommitEvent(IApplicationEvent)
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_AddPreCommitEvent_Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  nameWithType: ApplicationEventDispatcher.AddPreCommitEvent(IApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPreCommitEvent*
  name: AddPreCommitEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_AddPreCommitEvent_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPreCommitEvent
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.AddPreCommitEvent
  nameWithType: ApplicationEventDispatcher.AddPreCommitEvent
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePostCommitEventsAsync(CancellationToken)
  name: FirePostCommitEventsAsync(CancellationToken)
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_FirePostCommitEventsAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePostCommitEventsAsync(CancellationToken)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePostCommitEventsAsync(CancellationToken)
  nameWithType: ApplicationEventDispatcher.FirePostCommitEventsAsync(CancellationToken)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePostCommitEventsAsync*
  name: FirePostCommitEventsAsync
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_FirePostCommitEventsAsync_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePostCommitEventsAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePostCommitEventsAsync
  nameWithType: ApplicationEventDispatcher.FirePostCommitEventsAsync
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePreCommitEventsAsync(CancellationToken)
  name: FirePreCommitEventsAsync(CancellationToken)
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_FirePreCommitEventsAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePreCommitEventsAsync(CancellationToken)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePreCommitEventsAsync(CancellationToken)
  nameWithType: ApplicationEventDispatcher.FirePreCommitEventsAsync(CancellationToken)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePreCommitEventsAsync*
  name: FirePreCommitEventsAsync
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_FirePreCommitEventsAsync_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePreCommitEventsAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.FirePreCommitEventsAsync
  nameWithType: ApplicationEventDispatcher.FirePreCommitEventsAsync
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPostCommitEvents
  name: GetPostCommitEvents()
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_GetPostCommitEvents
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPostCommitEvents
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPostCommitEvents()
  nameWithType: ApplicationEventDispatcher.GetPostCommitEvents()
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPostCommitEvents*
  name: GetPostCommitEvents
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_GetPostCommitEvents_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPostCommitEvents
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPostCommitEvents
  nameWithType: ApplicationEventDispatcher.GetPostCommitEvents
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPreCommitEvents
  name: GetPreCommitEvents()
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_GetPreCommitEvents
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPreCommitEvents
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPreCommitEvents()
  nameWithType: ApplicationEventDispatcher.GetPreCommitEvents()
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPreCommitEvents*
  name: GetPreCommitEvents
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_GetPreCommitEvents_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPreCommitEvents
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.GetPreCommitEvents
  nameWithType: ApplicationEventDispatcher.GetPreCommitEvents
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  name: RemovePostCommitEvent(IApplicationEvent)
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_RemovePostCommitEvent_Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  nameWithType: ApplicationEventDispatcher.RemovePostCommitEvent(IApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePostCommitEvent*
  name: RemovePostCommitEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_RemovePostCommitEvent_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePostCommitEvent
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePostCommitEvent
  nameWithType: ApplicationEventDispatcher.RemovePostCommitEvent
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  name: RemovePreCommitEvent(IApplicationEvent)
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_RemovePreCommitEvent_Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  nameWithType: ApplicationEventDispatcher.RemovePreCommitEvent(IApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePreCommitEvent*
  name: RemovePreCommitEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventDispatcher_RemovePreCommitEvent_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePreCommitEvent
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.RemovePreCommitEvent
  nameWithType: ApplicationEventDispatcher.RemovePreCommitEvent
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1
  name: ApplicationEventHandler<TApplicationEvent>
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler-1.html
  commentId: T:Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1
  name.vb: ApplicationEventHandler(Of TApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler<TApplicationEvent>
  fullName.vb: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler(Of TApplicationEvent)
  nameWithType: ApplicationEventHandler<TApplicationEvent>
  nameWithType.vb: ApplicationEventHandler(Of TApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1.Handle(`0,CancellationToken)
  name: Handle(TApplicationEvent, CancellationToken)
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler-1.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventHandler_1_Handle__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1.Handle(`0,CancellationToken)
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler<TApplicationEvent>.Handle(TApplicationEvent, CancellationToken)
  fullName.vb: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler(Of TApplicationEvent).Handle(TApplicationEvent, CancellationToken)
  nameWithType: ApplicationEventHandler<TApplicationEvent>.Handle(TApplicationEvent, CancellationToken)
  nameWithType.vb: ApplicationEventHandler(Of TApplicationEvent).Handle(TApplicationEvent, CancellationToken)
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler-1.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventHandler_1_Handle_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler<TApplicationEvent>.Handle
  fullName.vb: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler(Of TApplicationEvent).Handle
  nameWithType: ApplicationEventHandler<TApplicationEvent>.Handle
  nameWithType.vb: ApplicationEventHandler(Of TApplicationEvent).Handle
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1.RetryPolicy
  name: RetryPolicy()
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler-1.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventHandler_1_RetryPolicy
  commentId: M:Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1.RetryPolicy
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler<TApplicationEvent>.RetryPolicy()
  fullName.vb: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler(Of TApplicationEvent).RetryPolicy()
  nameWithType: ApplicationEventHandler<TApplicationEvent>.RetryPolicy()
  nameWithType.vb: ApplicationEventHandler(Of TApplicationEvent).RetryPolicy()
- uid: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1.RetryPolicy*
  name: RetryPolicy
  href: api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler-1.html#Aviant_DDD_Application_ApplicationEvents_ApplicationEventHandler_1_RetryPolicy_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler`1.RetryPolicy
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler<TApplicationEvent>.RetryPolicy
  fullName.vb: Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler(Of TApplicationEvent).RetryPolicy
  nameWithType: ApplicationEventHandler<TApplicationEvent>.RetryPolicy
  nameWithType.vb: ApplicationEventHandler(Of TApplicationEvent).RetryPolicy
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEvent
  name: IApplicationEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.html
  commentId: T:Aviant.DDD.Application.ApplicationEvents.IApplicationEvent
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEvent
  nameWithType: IApplicationEvent
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.Occured
  name: Occured
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_Occured
  commentId: P:Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.Occured
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.Occured
  nameWithType: IApplicationEvent.Occured
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.Occured*
  name: Occured
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_Occured_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.Occured
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.Occured
  nameWithType: IApplicationEvent.Occured
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher
  name: IApplicationEventDispatcher
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html
  commentId: T:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher
  nameWithType: IApplicationEventDispatcher
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  name: AddPostCommitEvent(IApplicationEvent)
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_AddPostCommitEvent_Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  nameWithType: IApplicationEventDispatcher.AddPostCommitEvent(IApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPostCommitEvent*
  name: AddPostCommitEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_AddPostCommitEvent_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPostCommitEvent
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPostCommitEvent
  nameWithType: IApplicationEventDispatcher.AddPostCommitEvent
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  name: AddPreCommitEvent(IApplicationEvent)
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_AddPreCommitEvent_Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  nameWithType: IApplicationEventDispatcher.AddPreCommitEvent(IApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPreCommitEvent*
  name: AddPreCommitEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_AddPreCommitEvent_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPreCommitEvent
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.AddPreCommitEvent
  nameWithType: IApplicationEventDispatcher.AddPreCommitEvent
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePostCommitEventsAsync(CancellationToken)
  name: FirePostCommitEventsAsync(CancellationToken)
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_FirePostCommitEventsAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePostCommitEventsAsync(CancellationToken)
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePostCommitEventsAsync(CancellationToken)
  nameWithType: IApplicationEventDispatcher.FirePostCommitEventsAsync(CancellationToken)
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePostCommitEventsAsync*
  name: FirePostCommitEventsAsync
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_FirePostCommitEventsAsync_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePostCommitEventsAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePostCommitEventsAsync
  nameWithType: IApplicationEventDispatcher.FirePostCommitEventsAsync
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePreCommitEventsAsync(CancellationToken)
  name: FirePreCommitEventsAsync(CancellationToken)
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_FirePreCommitEventsAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePreCommitEventsAsync(CancellationToken)
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePreCommitEventsAsync(CancellationToken)
  nameWithType: IApplicationEventDispatcher.FirePreCommitEventsAsync(CancellationToken)
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePreCommitEventsAsync*
  name: FirePreCommitEventsAsync
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_FirePreCommitEventsAsync_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePreCommitEventsAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.FirePreCommitEventsAsync
  nameWithType: IApplicationEventDispatcher.FirePreCommitEventsAsync
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPostCommitEvents
  name: GetPostCommitEvents()
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_GetPostCommitEvents
  commentId: M:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPostCommitEvents
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPostCommitEvents()
  nameWithType: IApplicationEventDispatcher.GetPostCommitEvents()
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPostCommitEvents*
  name: GetPostCommitEvents
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_GetPostCommitEvents_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPostCommitEvents
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPostCommitEvents
  nameWithType: IApplicationEventDispatcher.GetPostCommitEvents
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPreCommitEvents
  name: GetPreCommitEvents()
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_GetPreCommitEvents
  commentId: M:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPreCommitEvents
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPreCommitEvents()
  nameWithType: IApplicationEventDispatcher.GetPreCommitEvents()
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPreCommitEvents*
  name: GetPreCommitEvents
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_GetPreCommitEvents_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPreCommitEvents
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.GetPreCommitEvents
  nameWithType: IApplicationEventDispatcher.GetPreCommitEvents
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  name: RemovePostCommitEvent(IApplicationEvent)
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_RemovePostCommitEvent_Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePostCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  nameWithType: IApplicationEventDispatcher.RemovePostCommitEvent(IApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePostCommitEvent*
  name: RemovePostCommitEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_RemovePostCommitEvent_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePostCommitEvent
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePostCommitEvent
  nameWithType: IApplicationEventDispatcher.RemovePostCommitEvent
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  name: RemovePreCommitEvent(IApplicationEvent)
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_RemovePreCommitEvent_Aviant_DDD_Application_ApplicationEvents_IApplicationEvent_
  commentId: M:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePreCommitEvent(Aviant.DDD.Application.ApplicationEvents.IApplicationEvent)
  nameWithType: IApplicationEventDispatcher.RemovePreCommitEvent(IApplicationEvent)
- uid: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePreCommitEvent*
  name: RemovePreCommitEvent
  href: api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html#Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_RemovePreCommitEvent_
  commentId: Overload:Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePreCommitEvent
  isSpec: "True"
  fullName: Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.RemovePreCommitEvent
  nameWithType: IApplicationEventDispatcher.RemovePreCommitEvent
- uid: Aviant.DDD.Application.Behaviours
  name: Aviant.DDD.Application.Behaviours
  href: api/Aviant.DDD.Application.Behaviours.html
  commentId: N:Aviant.DDD.Application.Behaviours
  fullName: Aviant.DDD.Application.Behaviours
  nameWithType: Aviant.DDD.Application.Behaviours
- uid: Aviant.DDD.Application.Behaviours.LoggerBehaviour`1
  name: LoggerBehaviour<TRequest>
  href: api/Aviant.DDD.Application.Behaviours.LoggerBehaviour-1.html
  commentId: T:Aviant.DDD.Application.Behaviours.LoggerBehaviour`1
  name.vb: LoggerBehaviour(Of TRequest)
  fullName: Aviant.DDD.Application.Behaviours.LoggerBehaviour<TRequest>
  fullName.vb: Aviant.DDD.Application.Behaviours.LoggerBehaviour(Of TRequest)
  nameWithType: LoggerBehaviour<TRequest>
  nameWithType.vb: LoggerBehaviour(Of TRequest)
- uid: Aviant.DDD.Application.Behaviours.LoggerBehaviour`1.#ctor(ILogger{`0},Aviant.DDD.Application.Identity.ICurrentUserService,Aviant.DDD.Application.Identity.IIdentityService)
  name: LoggerBehaviour(ILogger<TRequest>, ICurrentUserService, IIdentityService)
  href: api/Aviant.DDD.Application.Behaviours.LoggerBehaviour-1.html#Aviant_DDD_Application_Behaviours_LoggerBehaviour_1__ctor_ILogger__0__Aviant_DDD_Application_Identity_ICurrentUserService_Aviant_DDD_Application_Identity_IIdentityService_
  commentId: M:Aviant.DDD.Application.Behaviours.LoggerBehaviour`1.#ctor(ILogger{`0},Aviant.DDD.Application.Identity.ICurrentUserService,Aviant.DDD.Application.Identity.IIdentityService)
  name.vb: LoggerBehaviour(ILogger(Of TRequest), ICurrentUserService, IIdentityService)
  fullName: Aviant.DDD.Application.Behaviours.LoggerBehaviour<TRequest>.LoggerBehaviour(ILogger<TRequest>, Aviant.DDD.Application.Identity.ICurrentUserService, Aviant.DDD.Application.Identity.IIdentityService)
  fullName.vb: Aviant.DDD.Application.Behaviours.LoggerBehaviour(Of TRequest).LoggerBehaviour(ILogger(Of TRequest), Aviant.DDD.Application.Identity.ICurrentUserService, Aviant.DDD.Application.Identity.IIdentityService)
  nameWithType: LoggerBehaviour<TRequest>.LoggerBehaviour(ILogger<TRequest>, ICurrentUserService, IIdentityService)
  nameWithType.vb: LoggerBehaviour(Of TRequest).LoggerBehaviour(ILogger(Of TRequest), ICurrentUserService, IIdentityService)
- uid: Aviant.DDD.Application.Behaviours.LoggerBehaviour`1.#ctor*
  name: LoggerBehaviour
  href: api/Aviant.DDD.Application.Behaviours.LoggerBehaviour-1.html#Aviant_DDD_Application_Behaviours_LoggerBehaviour_1__ctor_
  commentId: Overload:Aviant.DDD.Application.Behaviours.LoggerBehaviour`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Behaviours.LoggerBehaviour<TRequest>.LoggerBehaviour
  fullName.vb: Aviant.DDD.Application.Behaviours.LoggerBehaviour(Of TRequest).LoggerBehaviour
  nameWithType: LoggerBehaviour<TRequest>.LoggerBehaviour
  nameWithType.vb: LoggerBehaviour(Of TRequest).LoggerBehaviour
- uid: Aviant.DDD.Application.Behaviours.LoggerBehaviour`1.Process(`0,CancellationToken)
  name: Process(TRequest, CancellationToken)
  href: api/Aviant.DDD.Application.Behaviours.LoggerBehaviour-1.html#Aviant_DDD_Application_Behaviours_LoggerBehaviour_1_Process__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Behaviours.LoggerBehaviour`1.Process(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Behaviours.LoggerBehaviour<TRequest>.Process(TRequest, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Behaviours.LoggerBehaviour(Of TRequest).Process(TRequest, CancellationToken)
  nameWithType: LoggerBehaviour<TRequest>.Process(TRequest, CancellationToken)
  nameWithType.vb: LoggerBehaviour(Of TRequest).Process(TRequest, CancellationToken)
- uid: Aviant.DDD.Application.Behaviours.LoggerBehaviour`1.Process*
  name: Process
  href: api/Aviant.DDD.Application.Behaviours.LoggerBehaviour-1.html#Aviant_DDD_Application_Behaviours_LoggerBehaviour_1_Process_
  commentId: Overload:Aviant.DDD.Application.Behaviours.LoggerBehaviour`1.Process
  isSpec: "True"
  fullName: Aviant.DDD.Application.Behaviours.LoggerBehaviour<TRequest>.Process
  fullName.vb: Aviant.DDD.Application.Behaviours.LoggerBehaviour(Of TRequest).Process
  nameWithType: LoggerBehaviour<TRequest>.Process
  nameWithType.vb: LoggerBehaviour(Of TRequest).Process
- uid: Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2
  name: PerformanceBehaviour<TRequest, TResponse>
  href: api/Aviant.DDD.Application.Behaviours.PerformanceBehaviour-2.html
  commentId: T:Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2
  name.vb: PerformanceBehaviour(Of TRequest, TResponse)
  fullName: Aviant.DDD.Application.Behaviours.PerformanceBehaviour<TRequest, TResponse>
  fullName.vb: Aviant.DDD.Application.Behaviours.PerformanceBehaviour(Of TRequest, TResponse)
  nameWithType: PerformanceBehaviour<TRequest, TResponse>
  nameWithType.vb: PerformanceBehaviour(Of TRequest, TResponse)
- uid: Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2.#ctor(ILogger{`0},Aviant.DDD.Application.Identity.ICurrentUserService,Aviant.DDD.Application.Identity.IIdentityService)
  name: PerformanceBehaviour(ILogger<TRequest>, ICurrentUserService, IIdentityService)
  href: api/Aviant.DDD.Application.Behaviours.PerformanceBehaviour-2.html#Aviant_DDD_Application_Behaviours_PerformanceBehaviour_2__ctor_ILogger__0__Aviant_DDD_Application_Identity_ICurrentUserService_Aviant_DDD_Application_Identity_IIdentityService_
  commentId: M:Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2.#ctor(ILogger{`0},Aviant.DDD.Application.Identity.ICurrentUserService,Aviant.DDD.Application.Identity.IIdentityService)
  name.vb: PerformanceBehaviour(ILogger(Of TRequest), ICurrentUserService, IIdentityService)
  fullName: Aviant.DDD.Application.Behaviours.PerformanceBehaviour<TRequest, TResponse>.PerformanceBehaviour(ILogger<TRequest>, Aviant.DDD.Application.Identity.ICurrentUserService, Aviant.DDD.Application.Identity.IIdentityService)
  fullName.vb: Aviant.DDD.Application.Behaviours.PerformanceBehaviour(Of TRequest, TResponse).PerformanceBehaviour(ILogger(Of TRequest), Aviant.DDD.Application.Identity.ICurrentUserService, Aviant.DDD.Application.Identity.IIdentityService)
  nameWithType: PerformanceBehaviour<TRequest, TResponse>.PerformanceBehaviour(ILogger<TRequest>, ICurrentUserService, IIdentityService)
  nameWithType.vb: PerformanceBehaviour(Of TRequest, TResponse).PerformanceBehaviour(ILogger(Of TRequest), ICurrentUserService, IIdentityService)
- uid: Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2.#ctor*
  name: PerformanceBehaviour
  href: api/Aviant.DDD.Application.Behaviours.PerformanceBehaviour-2.html#Aviant_DDD_Application_Behaviours_PerformanceBehaviour_2__ctor_
  commentId: Overload:Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Behaviours.PerformanceBehaviour<TRequest, TResponse>.PerformanceBehaviour
  fullName.vb: Aviant.DDD.Application.Behaviours.PerformanceBehaviour(Of TRequest, TResponse).PerformanceBehaviour
  nameWithType: PerformanceBehaviour<TRequest, TResponse>.PerformanceBehaviour
  nameWithType.vb: PerformanceBehaviour(Of TRequest, TResponse).PerformanceBehaviour
- uid: Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2.Handle(`0,CancellationToken,RequestHandlerDelegate{`1})
  name: Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  href: api/Aviant.DDD.Application.Behaviours.PerformanceBehaviour-2.html#Aviant_DDD_Application_Behaviours_PerformanceBehaviour_2_Handle__0_CancellationToken_RequestHandlerDelegate__1__
  commentId: M:Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2.Handle(`0,CancellationToken,RequestHandlerDelegate{`1})
  name.vb: Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
  fullName: Aviant.DDD.Application.Behaviours.PerformanceBehaviour<TRequest, TResponse>.Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  fullName.vb: Aviant.DDD.Application.Behaviours.PerformanceBehaviour(Of TRequest, TResponse).Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
  nameWithType: PerformanceBehaviour<TRequest, TResponse>.Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  nameWithType.vb: PerformanceBehaviour(Of TRequest, TResponse).Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
- uid: Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.Behaviours.PerformanceBehaviour-2.html#Aviant_DDD_Application_Behaviours_PerformanceBehaviour_2_Handle_
  commentId: Overload:Aviant.DDD.Application.Behaviours.PerformanceBehaviour`2.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.Behaviours.PerformanceBehaviour<TRequest, TResponse>.Handle
  fullName.vb: Aviant.DDD.Application.Behaviours.PerformanceBehaviour(Of TRequest, TResponse).Handle
  nameWithType: PerformanceBehaviour<TRequest, TResponse>.Handle
  nameWithType.vb: PerformanceBehaviour(Of TRequest, TResponse).Handle
- uid: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2
  name: UnhandledExceptionBehaviour<TRequest, TResponse>
  href: api/Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour-2.html
  commentId: T:Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2
  name.vb: UnhandledExceptionBehaviour(Of TRequest, TResponse)
  fullName: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour<TRequest, TResponse>
  fullName.vb: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour(Of TRequest, TResponse)
  nameWithType: UnhandledExceptionBehaviour<TRequest, TResponse>
  nameWithType.vb: UnhandledExceptionBehaviour(Of TRequest, TResponse)
- uid: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2.#ctor(ILogger{`0})
  name: UnhandledExceptionBehaviour(ILogger<TRequest>)
  href: api/Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour-2.html#Aviant_DDD_Application_Behaviours_UnhandledExceptionBehaviour_2__ctor_ILogger__0__
  commentId: M:Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2.#ctor(ILogger{`0})
  name.vb: UnhandledExceptionBehaviour(ILogger(Of TRequest))
  fullName: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour<TRequest, TResponse>.UnhandledExceptionBehaviour(ILogger<TRequest>)
  fullName.vb: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour(Of TRequest, TResponse).UnhandledExceptionBehaviour(ILogger(Of TRequest))
  nameWithType: UnhandledExceptionBehaviour<TRequest, TResponse>.UnhandledExceptionBehaviour(ILogger<TRequest>)
  nameWithType.vb: UnhandledExceptionBehaviour(Of TRequest, TResponse).UnhandledExceptionBehaviour(ILogger(Of TRequest))
- uid: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2.#ctor*
  name: UnhandledExceptionBehaviour
  href: api/Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour-2.html#Aviant_DDD_Application_Behaviours_UnhandledExceptionBehaviour_2__ctor_
  commentId: Overload:Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour<TRequest, TResponse>.UnhandledExceptionBehaviour
  fullName.vb: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour(Of TRequest, TResponse).UnhandledExceptionBehaviour
  nameWithType: UnhandledExceptionBehaviour<TRequest, TResponse>.UnhandledExceptionBehaviour
  nameWithType.vb: UnhandledExceptionBehaviour(Of TRequest, TResponse).UnhandledExceptionBehaviour
- uid: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2.Handle(`0,CancellationToken,RequestHandlerDelegate{`1})
  name: Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  href: api/Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour-2.html#Aviant_DDD_Application_Behaviours_UnhandledExceptionBehaviour_2_Handle__0_CancellationToken_RequestHandlerDelegate__1__
  commentId: M:Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2.Handle(`0,CancellationToken,RequestHandlerDelegate{`1})
  name.vb: Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
  fullName: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour<TRequest, TResponse>.Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  fullName.vb: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour(Of TRequest, TResponse).Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
  nameWithType: UnhandledExceptionBehaviour<TRequest, TResponse>.Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  nameWithType.vb: UnhandledExceptionBehaviour(Of TRequest, TResponse).Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
- uid: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour-2.html#Aviant_DDD_Application_Behaviours_UnhandledExceptionBehaviour_2_Handle_
  commentId: Overload:Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour`2.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour<TRequest, TResponse>.Handle
  fullName.vb: Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour(Of TRequest, TResponse).Handle
  nameWithType: UnhandledExceptionBehaviour<TRequest, TResponse>.Handle
  nameWithType.vb: UnhandledExceptionBehaviour(Of TRequest, TResponse).Handle
- uid: Aviant.DDD.Application.Behaviours.ValidationBehaviour`2
  name: ValidationBehaviour<TRequest, TResponse>
  href: api/Aviant.DDD.Application.Behaviours.ValidationBehaviour-2.html
  commentId: T:Aviant.DDD.Application.Behaviours.ValidationBehaviour`2
  name.vb: ValidationBehaviour(Of TRequest, TResponse)
  fullName: Aviant.DDD.Application.Behaviours.ValidationBehaviour<TRequest, TResponse>
  fullName.vb: Aviant.DDD.Application.Behaviours.ValidationBehaviour(Of TRequest, TResponse)
  nameWithType: ValidationBehaviour<TRequest, TResponse>
  nameWithType.vb: ValidationBehaviour(Of TRequest, TResponse)
- uid: Aviant.DDD.Application.Behaviours.ValidationBehaviour`2.#ctor(IEnumerable{IValidator{`0}})
  name: ValidationBehaviour(IEnumerable<IValidator<TRequest>>)
  href: api/Aviant.DDD.Application.Behaviours.ValidationBehaviour-2.html#Aviant_DDD_Application_Behaviours_ValidationBehaviour_2__ctor_IEnumerable_IValidator__0___
  commentId: M:Aviant.DDD.Application.Behaviours.ValidationBehaviour`2.#ctor(IEnumerable{IValidator{`0}})
  name.vb: ValidationBehaviour(IEnumerable(Of IValidator(Of TRequest)))
  fullName: Aviant.DDD.Application.Behaviours.ValidationBehaviour<TRequest, TResponse>.ValidationBehaviour(IEnumerable<IValidator<TRequest>>)
  fullName.vb: Aviant.DDD.Application.Behaviours.ValidationBehaviour(Of TRequest, TResponse).ValidationBehaviour(IEnumerable(Of IValidator(Of TRequest)))
  nameWithType: ValidationBehaviour<TRequest, TResponse>.ValidationBehaviour(IEnumerable<IValidator<TRequest>>)
  nameWithType.vb: ValidationBehaviour(Of TRequest, TResponse).ValidationBehaviour(IEnumerable(Of IValidator(Of TRequest)))
- uid: Aviant.DDD.Application.Behaviours.ValidationBehaviour`2.#ctor*
  name: ValidationBehaviour
  href: api/Aviant.DDD.Application.Behaviours.ValidationBehaviour-2.html#Aviant_DDD_Application_Behaviours_ValidationBehaviour_2__ctor_
  commentId: Overload:Aviant.DDD.Application.Behaviours.ValidationBehaviour`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Behaviours.ValidationBehaviour<TRequest, TResponse>.ValidationBehaviour
  fullName.vb: Aviant.DDD.Application.Behaviours.ValidationBehaviour(Of TRequest, TResponse).ValidationBehaviour
  nameWithType: ValidationBehaviour<TRequest, TResponse>.ValidationBehaviour
  nameWithType.vb: ValidationBehaviour(Of TRequest, TResponse).ValidationBehaviour
- uid: Aviant.DDD.Application.Behaviours.ValidationBehaviour`2.Handle(`0,CancellationToken,RequestHandlerDelegate{`1})
  name: Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  href: api/Aviant.DDD.Application.Behaviours.ValidationBehaviour-2.html#Aviant_DDD_Application_Behaviours_ValidationBehaviour_2_Handle__0_CancellationToken_RequestHandlerDelegate__1__
  commentId: M:Aviant.DDD.Application.Behaviours.ValidationBehaviour`2.Handle(`0,CancellationToken,RequestHandlerDelegate{`1})
  name.vb: Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
  fullName: Aviant.DDD.Application.Behaviours.ValidationBehaviour<TRequest, TResponse>.Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  fullName.vb: Aviant.DDD.Application.Behaviours.ValidationBehaviour(Of TRequest, TResponse).Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
  nameWithType: ValidationBehaviour<TRequest, TResponse>.Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>)
  nameWithType.vb: ValidationBehaviour(Of TRequest, TResponse).Handle(TRequest, CancellationToken, RequestHandlerDelegate(Of TResponse))
- uid: Aviant.DDD.Application.Behaviours.ValidationBehaviour`2.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.Behaviours.ValidationBehaviour-2.html#Aviant_DDD_Application_Behaviours_ValidationBehaviour_2_Handle_
  commentId: Overload:Aviant.DDD.Application.Behaviours.ValidationBehaviour`2.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.Behaviours.ValidationBehaviour<TRequest, TResponse>.Handle
  fullName.vb: Aviant.DDD.Application.Behaviours.ValidationBehaviour(Of TRequest, TResponse).Handle
  nameWithType: ValidationBehaviour<TRequest, TResponse>.Handle
  nameWithType.vb: ValidationBehaviour(Of TRequest, TResponse).Handle
- uid: Aviant.DDD.Application.Commands
  name: Aviant.DDD.Application.Commands
  href: api/Aviant.DDD.Application.Commands.html
  commentId: N:Aviant.DDD.Application.Commands
  fullName: Aviant.DDD.Application.Commands
  nameWithType: Aviant.DDD.Application.Commands
- uid: Aviant.DDD.Application.Commands.Command
  name: Command
  href: api/Aviant.DDD.Application.Commands.Command.html
  commentId: T:Aviant.DDD.Application.Commands.Command
  fullName: Aviant.DDD.Application.Commands.Command
  nameWithType: Command
- uid: Aviant.DDD.Application.Commands.Command`1
  name: Command<TResponse>
  href: api/Aviant.DDD.Application.Commands.Command-1.html
  commentId: T:Aviant.DDD.Application.Commands.Command`1
  name.vb: Command(Of TResponse)
  fullName: Aviant.DDD.Application.Commands.Command<TResponse>
  fullName.vb: Aviant.DDD.Application.Commands.Command(Of TResponse)
  nameWithType: Command<TResponse>
  nameWithType.vb: Command(Of TResponse)
- uid: Aviant.DDD.Application.Commands.Command`2
  name: Command<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Application.Commands.Command-2.html
  commentId: T:Aviant.DDD.Application.Commands.Command`2
  name.vb: Command(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Application.Commands.Command<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Application.Commands.Command(Of TAggregate, TAggregateId)
  nameWithType: Command<TAggregate, TAggregateId>
  nameWithType.vb: Command(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Application.Commands.CommandHandler`1
  name: CommandHandler<TCommand>
  href: api/Aviant.DDD.Application.Commands.CommandHandler-1.html
  commentId: T:Aviant.DDD.Application.Commands.CommandHandler`1
  name.vb: CommandHandler(Of TCommand)
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand>
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand)
  nameWithType: CommandHandler<TCommand>
  nameWithType.vb: CommandHandler(Of TCommand)
- uid: Aviant.DDD.Application.Commands.CommandHandler`1.Handle(`0,CancellationToken)
  name: Handle(TCommand, CancellationToken)
  href: api/Aviant.DDD.Application.Commands.CommandHandler-1.html#Aviant_DDD_Application_Commands_CommandHandler_1_Handle__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Commands.CommandHandler`1.Handle(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand>.Handle(TCommand, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand).Handle(TCommand, CancellationToken)
  nameWithType: CommandHandler<TCommand>.Handle(TCommand, CancellationToken)
  nameWithType.vb: CommandHandler(Of TCommand).Handle(TCommand, CancellationToken)
- uid: Aviant.DDD.Application.Commands.CommandHandler`1.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.Commands.CommandHandler-1.html#Aviant_DDD_Application_Commands_CommandHandler_1_Handle_
  commentId: Overload:Aviant.DDD.Application.Commands.CommandHandler`1.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand>.Handle
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand).Handle
  nameWithType: CommandHandler<TCommand>.Handle
  nameWithType.vb: CommandHandler(Of TCommand).Handle
- uid: Aviant.DDD.Application.Commands.CommandHandler`2
  name: CommandHandler<TCommand, TResponse>
  href: api/Aviant.DDD.Application.Commands.CommandHandler-2.html
  commentId: T:Aviant.DDD.Application.Commands.CommandHandler`2
  name.vb: CommandHandler(Of TCommand, TResponse)
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand, TResponse>
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand, TResponse)
  nameWithType: CommandHandler<TCommand, TResponse>
  nameWithType.vb: CommandHandler(Of TCommand, TResponse)
- uid: Aviant.DDD.Application.Commands.CommandHandler`2.Handle(`0,CancellationToken)
  name: Handle(TCommand, CancellationToken)
  href: api/Aviant.DDD.Application.Commands.CommandHandler-2.html#Aviant_DDD_Application_Commands_CommandHandler_2_Handle__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Commands.CommandHandler`2.Handle(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand, TResponse>.Handle(TCommand, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand, TResponse).Handle(TCommand, CancellationToken)
  nameWithType: CommandHandler<TCommand, TResponse>.Handle(TCommand, CancellationToken)
  nameWithType.vb: CommandHandler(Of TCommand, TResponse).Handle(TCommand, CancellationToken)
- uid: Aviant.DDD.Application.Commands.CommandHandler`2.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.Commands.CommandHandler-2.html#Aviant_DDD_Application_Commands_CommandHandler_2_Handle_
  commentId: Overload:Aviant.DDD.Application.Commands.CommandHandler`2.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand, TResponse>.Handle
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand, TResponse).Handle
  nameWithType: CommandHandler<TCommand, TResponse>.Handle
  nameWithType.vb: CommandHandler(Of TCommand, TResponse).Handle
- uid: Aviant.DDD.Application.Commands.CommandHandler`3
  name: CommandHandler<TCommand, TAggregate, TAggregateId>
  href: api/Aviant.DDD.Application.Commands.CommandHandler-3.html
  commentId: T:Aviant.DDD.Application.Commands.CommandHandler`3
  name.vb: CommandHandler(Of TCommand, TAggregate, TAggregateId)
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand, TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand, TAggregate, TAggregateId)
  nameWithType: CommandHandler<TCommand, TAggregate, TAggregateId>
  nameWithType.vb: CommandHandler(Of TCommand, TAggregate, TAggregateId)
- uid: Aviant.DDD.Application.Commands.CommandHandler`3.EventsService
  name: EventsService
  href: api/Aviant.DDD.Application.Commands.CommandHandler-3.html#Aviant_DDD_Application_Commands_CommandHandler_3_EventsService
  commentId: P:Aviant.DDD.Application.Commands.CommandHandler`3.EventsService
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand, TAggregate, TAggregateId>.EventsService
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand, TAggregate, TAggregateId).EventsService
  nameWithType: CommandHandler<TCommand, TAggregate, TAggregateId>.EventsService
  nameWithType.vb: CommandHandler(Of TCommand, TAggregate, TAggregateId).EventsService
- uid: Aviant.DDD.Application.Commands.CommandHandler`3.EventsService*
  name: EventsService
  href: api/Aviant.DDD.Application.Commands.CommandHandler-3.html#Aviant_DDD_Application_Commands_CommandHandler_3_EventsService_
  commentId: Overload:Aviant.DDD.Application.Commands.CommandHandler`3.EventsService
  isSpec: "True"
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand, TAggregate, TAggregateId>.EventsService
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand, TAggregate, TAggregateId).EventsService
  nameWithType: CommandHandler<TCommand, TAggregate, TAggregateId>.EventsService
  nameWithType.vb: CommandHandler(Of TCommand, TAggregate, TAggregateId).EventsService
- uid: Aviant.DDD.Application.Commands.CommandHandler`3.Handle(`0,CancellationToken)
  name: Handle(TCommand, CancellationToken)
  href: api/Aviant.DDD.Application.Commands.CommandHandler-3.html#Aviant_DDD_Application_Commands_CommandHandler_3_Handle__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Commands.CommandHandler`3.Handle(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand, TAggregate, TAggregateId>.Handle(TCommand, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand, TAggregate, TAggregateId).Handle(TCommand, CancellationToken)
  nameWithType: CommandHandler<TCommand, TAggregate, TAggregateId>.Handle(TCommand, CancellationToken)
  nameWithType.vb: CommandHandler(Of TCommand, TAggregate, TAggregateId).Handle(TCommand, CancellationToken)
- uid: Aviant.DDD.Application.Commands.CommandHandler`3.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.Commands.CommandHandler-3.html#Aviant_DDD_Application_Commands_CommandHandler_3_Handle_
  commentId: Overload:Aviant.DDD.Application.Commands.CommandHandler`3.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.Commands.CommandHandler<TCommand, TAggregate, TAggregateId>.Handle
  fullName.vb: Aviant.DDD.Application.Commands.CommandHandler(Of TCommand, TAggregate, TAggregateId).Handle
  nameWithType: CommandHandler<TCommand, TAggregate, TAggregateId>.Handle
  nameWithType.vb: CommandHandler(Of TCommand, TAggregate, TAggregateId).Handle
- uid: Aviant.DDD.Application.Commands.CommandValidator`1
  name: CommandValidator<TCommand>
  href: api/Aviant.DDD.Application.Commands.CommandValidator-1.html
  commentId: T:Aviant.DDD.Application.Commands.CommandValidator`1
  name.vb: CommandValidator(Of TCommand)
  fullName: Aviant.DDD.Application.Commands.CommandValidator<TCommand>
  fullName.vb: Aviant.DDD.Application.Commands.CommandValidator(Of TCommand)
  nameWithType: CommandValidator<TCommand>
  nameWithType.vb: CommandValidator(Of TCommand)
- uid: Aviant.DDD.Application.Commands.CommandValidator`1.#ctor(CascadeMode)
  name: CommandValidator(CascadeMode)
  href: api/Aviant.DDD.Application.Commands.CommandValidator-1.html#Aviant_DDD_Application_Commands_CommandValidator_1__ctor_CascadeMode_
  commentId: M:Aviant.DDD.Application.Commands.CommandValidator`1.#ctor(CascadeMode)
  fullName: Aviant.DDD.Application.Commands.CommandValidator<TCommand>.CommandValidator(CascadeMode)
  fullName.vb: Aviant.DDD.Application.Commands.CommandValidator(Of TCommand).CommandValidator(CascadeMode)
  nameWithType: CommandValidator<TCommand>.CommandValidator(CascadeMode)
  nameWithType.vb: CommandValidator(Of TCommand).CommandValidator(CascadeMode)
- uid: Aviant.DDD.Application.Commands.CommandValidator`1.#ctor*
  name: CommandValidator
  href: api/Aviant.DDD.Application.Commands.CommandValidator-1.html#Aviant_DDD_Application_Commands_CommandValidator_1__ctor_
  commentId: Overload:Aviant.DDD.Application.Commands.CommandValidator`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Commands.CommandValidator<TCommand>.CommandValidator
  fullName.vb: Aviant.DDD.Application.Commands.CommandValidator(Of TCommand).CommandValidator
  nameWithType: CommandValidator<TCommand>.CommandValidator
  nameWithType.vb: CommandValidator(Of TCommand).CommandValidator
- uid: Aviant.DDD.Application.Commands.ICommand
  name: ICommand
  href: api/Aviant.DDD.Application.Commands.ICommand.html
  commentId: T:Aviant.DDD.Application.Commands.ICommand
  fullName: Aviant.DDD.Application.Commands.ICommand
  nameWithType: ICommand
- uid: Aviant.DDD.Application.Commands.ICommand`1
  name: ICommand<TResponse>
  href: api/Aviant.DDD.Application.Commands.ICommand-1.html
  commentId: T:Aviant.DDD.Application.Commands.ICommand`1
  name.vb: ICommand(Of TResponse)
  fullName: Aviant.DDD.Application.Commands.ICommand<TResponse>
  fullName.vb: Aviant.DDD.Application.Commands.ICommand(Of TResponse)
  nameWithType: ICommand<TResponse>
  nameWithType.vb: ICommand(Of TResponse)
- uid: Aviant.DDD.Application.Commands.ICommand`2
  name: ICommand<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Application.Commands.ICommand-2.html
  commentId: T:Aviant.DDD.Application.Commands.ICommand`2
  name.vb: ICommand(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Application.Commands.ICommand<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Application.Commands.ICommand(Of TAggregate, TAggregateId)
  nameWithType: ICommand<TAggregate, TAggregateId>
  nameWithType.vb: ICommand(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Application.EventBus
  name: Aviant.DDD.Application.EventBus
  href: api/Aviant.DDD.Application.EventBus.html
  commentId: N:Aviant.DDD.Application.EventBus
  fullName: Aviant.DDD.Application.EventBus
  nameWithType: Aviant.DDD.Application.EventBus
- uid: Aviant.DDD.Application.EventBus.EventConsumerFactory
  name: EventConsumerFactory
  href: api/Aviant.DDD.Application.EventBus.EventConsumerFactory.html
  commentId: T:Aviant.DDD.Application.EventBus.EventConsumerFactory
  fullName: Aviant.DDD.Application.EventBus.EventConsumerFactory
  nameWithType: EventConsumerFactory
- uid: Aviant.DDD.Application.EventBus.EventConsumerFactory.#ctor(IServiceScopeFactory)
  name: EventConsumerFactory(IServiceScopeFactory)
  href: api/Aviant.DDD.Application.EventBus.EventConsumerFactory.html#Aviant_DDD_Application_EventBus_EventConsumerFactory__ctor_IServiceScopeFactory_
  commentId: M:Aviant.DDD.Application.EventBus.EventConsumerFactory.#ctor(IServiceScopeFactory)
  fullName: Aviant.DDD.Application.EventBus.EventConsumerFactory.EventConsumerFactory(IServiceScopeFactory)
  nameWithType: EventConsumerFactory.EventConsumerFactory(IServiceScopeFactory)
- uid: Aviant.DDD.Application.EventBus.EventConsumerFactory.#ctor*
  name: EventConsumerFactory
  href: api/Aviant.DDD.Application.EventBus.EventConsumerFactory.html#Aviant_DDD_Application_EventBus_EventConsumerFactory__ctor_
  commentId: Overload:Aviant.DDD.Application.EventBus.EventConsumerFactory.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.EventBus.EventConsumerFactory.EventConsumerFactory
  nameWithType: EventConsumerFactory.EventConsumerFactory
- uid: Aviant.DDD.Application.EventBus.EventConsumerFactory.Build*
  name: Build
  href: api/Aviant.DDD.Application.EventBus.EventConsumerFactory.html#Aviant_DDD_Application_EventBus_EventConsumerFactory_Build_
  commentId: Overload:Aviant.DDD.Application.EventBus.EventConsumerFactory.Build
  isSpec: "True"
  fullName: Aviant.DDD.Application.EventBus.EventConsumerFactory.Build
  nameWithType: EventConsumerFactory.Build
- uid: Aviant.DDD.Application.EventBus.EventConsumerFactory.Build``3
  name: Build<TAggregate, TAggregateId, TDeserializer>()
  href: api/Aviant.DDD.Application.EventBus.EventConsumerFactory.html#Aviant_DDD_Application_EventBus_EventConsumerFactory_Build__3
  commentId: M:Aviant.DDD.Application.EventBus.EventConsumerFactory.Build``3
  name.vb: Build(Of TAggregate, TAggregateId, TDeserializer)()
  fullName: Aviant.DDD.Application.EventBus.EventConsumerFactory.Build<TAggregate, TAggregateId, TDeserializer>()
  fullName.vb: Aviant.DDD.Application.EventBus.EventConsumerFactory.Build(Of TAggregate, TAggregateId, TDeserializer)()
  nameWithType: EventConsumerFactory.Build<TAggregate, TAggregateId, TDeserializer>()
  nameWithType.vb: EventConsumerFactory.Build(Of TAggregate, TAggregateId, TDeserializer)()
- uid: Aviant.DDD.Application.EventBus.HandlerExtensionRegistry
  name: HandlerExtensionRegistry
  href: api/Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.html
  commentId: T:Aviant.DDD.Application.EventBus.HandlerExtensionRegistry
  fullName: Aviant.DDD.Application.EventBus.HandlerExtensionRegistry
  nameWithType: HandlerExtensionRegistry
- uid: Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.RegisterHandlers(IImplementationTypeSelector,Type)
  name: RegisterHandlers(IImplementationTypeSelector, Type)
  href: api/Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.html#Aviant_DDD_Application_EventBus_HandlerExtensionRegistry_RegisterHandlers_IImplementationTypeSelector_Type_
  commentId: M:Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.RegisterHandlers(IImplementationTypeSelector,Type)
  fullName: Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.RegisterHandlers(IImplementationTypeSelector, Type)
  nameWithType: HandlerExtensionRegistry.RegisterHandlers(IImplementationTypeSelector, Type)
- uid: Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.RegisterHandlers*
  name: RegisterHandlers
  href: api/Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.html#Aviant_DDD_Application_EventBus_HandlerExtensionRegistry_RegisterHandlers_
  commentId: Overload:Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.RegisterHandlers
  isSpec: "True"
  fullName: Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.RegisterHandlers
  nameWithType: HandlerExtensionRegistry.RegisterHandlers
- uid: Aviant.DDD.Application.Exceptions
  name: Aviant.DDD.Application.Exceptions
  href: api/Aviant.DDD.Application.Exceptions.html
  commentId: N:Aviant.DDD.Application.Exceptions
  fullName: Aviant.DDD.Application.Exceptions
  nameWithType: Aviant.DDD.Application.Exceptions
- uid: Aviant.DDD.Application.Exceptions.ApplicationException
  name: ApplicationException
  href: api/Aviant.DDD.Application.Exceptions.ApplicationException.html
  commentId: T:Aviant.DDD.Application.Exceptions.ApplicationException
  fullName: Aviant.DDD.Application.Exceptions.ApplicationException
  nameWithType: ApplicationException
- uid: Aviant.DDD.Application.Exceptions.ApplicationException.#ctor
  name: ApplicationException()
  href: api/Aviant.DDD.Application.Exceptions.ApplicationException.html#Aviant_DDD_Application_Exceptions_ApplicationException__ctor
  commentId: M:Aviant.DDD.Application.Exceptions.ApplicationException.#ctor
  fullName: Aviant.DDD.Application.Exceptions.ApplicationException.ApplicationException()
  nameWithType: ApplicationException.ApplicationException()
- uid: Aviant.DDD.Application.Exceptions.ApplicationException.#ctor(SerializationInfo,StreamingContext)
  name: ApplicationException(SerializationInfo, StreamingContext)
  href: api/Aviant.DDD.Application.Exceptions.ApplicationException.html#Aviant_DDD_Application_Exceptions_ApplicationException__ctor_SerializationInfo_StreamingContext_
  commentId: M:Aviant.DDD.Application.Exceptions.ApplicationException.#ctor(SerializationInfo,StreamingContext)
  fullName: Aviant.DDD.Application.Exceptions.ApplicationException.ApplicationException(SerializationInfo, StreamingContext)
  nameWithType: ApplicationException.ApplicationException(SerializationInfo, StreamingContext)
- uid: Aviant.DDD.Application.Exceptions.ApplicationException.#ctor(System.String)
  name: ApplicationException(String)
  href: api/Aviant.DDD.Application.Exceptions.ApplicationException.html#Aviant_DDD_Application_Exceptions_ApplicationException__ctor_System_String_
  commentId: M:Aviant.DDD.Application.Exceptions.ApplicationException.#ctor(System.String)
  fullName: Aviant.DDD.Application.Exceptions.ApplicationException.ApplicationException(System.String)
  nameWithType: ApplicationException.ApplicationException(String)
- uid: Aviant.DDD.Application.Exceptions.ApplicationException.#ctor(System.String,Exception)
  name: ApplicationException(String, Exception)
  href: api/Aviant.DDD.Application.Exceptions.ApplicationException.html#Aviant_DDD_Application_Exceptions_ApplicationException__ctor_System_String_Exception_
  commentId: M:Aviant.DDD.Application.Exceptions.ApplicationException.#ctor(System.String,Exception)
  fullName: Aviant.DDD.Application.Exceptions.ApplicationException.ApplicationException(System.String, Exception)
  nameWithType: ApplicationException.ApplicationException(String, Exception)
- uid: Aviant.DDD.Application.Exceptions.ApplicationException.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{Exception})
  name: ApplicationException(String, Int32, Nullable<Int32>, Nullable<Exception>)
  href: api/Aviant.DDD.Application.Exceptions.ApplicationException.html#Aviant_DDD_Application_Exceptions_ApplicationException__ctor_System_String_System_Int32_System_Nullable_System_Int32__System_Nullable_Exception__
  commentId: M:Aviant.DDD.Application.Exceptions.ApplicationException.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{Exception})
  name.vb: ApplicationException(String, Int32, Nullable(Of Int32), Nullable(Of Exception))
  fullName: Aviant.DDD.Application.Exceptions.ApplicationException.ApplicationException(System.String, System.Int32, System.Nullable<System.Int32>, System.Nullable<Exception>)
  fullName.vb: Aviant.DDD.Application.Exceptions.ApplicationException.ApplicationException(System.String, System.Int32, System.Nullable(Of System.Int32), System.Nullable(Of Exception))
  nameWithType: ApplicationException.ApplicationException(String, Int32, Nullable<Int32>, Nullable<Exception>)
  nameWithType.vb: ApplicationException.ApplicationException(String, Int32, Nullable(Of Int32), Nullable(Of Exception))
- uid: Aviant.DDD.Application.Exceptions.ApplicationException.#ctor*
  name: ApplicationException
  href: api/Aviant.DDD.Application.Exceptions.ApplicationException.html#Aviant_DDD_Application_Exceptions_ApplicationException__ctor_
  commentId: Overload:Aviant.DDD.Application.Exceptions.ApplicationException.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Exceptions.ApplicationException.ApplicationException
  nameWithType: ApplicationException.ApplicationException
- uid: Aviant.DDD.Application.Exceptions.NotFoundException
  name: NotFoundException
  href: api/Aviant.DDD.Application.Exceptions.NotFoundException.html
  commentId: T:Aviant.DDD.Application.Exceptions.NotFoundException
  fullName: Aviant.DDD.Application.Exceptions.NotFoundException
  nameWithType: NotFoundException
- uid: Aviant.DDD.Application.Exceptions.NotFoundException.#ctor(System.String)
  name: NotFoundException(String)
  href: api/Aviant.DDD.Application.Exceptions.NotFoundException.html#Aviant_DDD_Application_Exceptions_NotFoundException__ctor_System_String_
  commentId: M:Aviant.DDD.Application.Exceptions.NotFoundException.#ctor(System.String)
  fullName: Aviant.DDD.Application.Exceptions.NotFoundException.NotFoundException(System.String)
  nameWithType: NotFoundException.NotFoundException(String)
- uid: Aviant.DDD.Application.Exceptions.NotFoundException.#ctor(System.String,Exception)
  name: NotFoundException(String, Exception)
  href: api/Aviant.DDD.Application.Exceptions.NotFoundException.html#Aviant_DDD_Application_Exceptions_NotFoundException__ctor_System_String_Exception_
  commentId: M:Aviant.DDD.Application.Exceptions.NotFoundException.#ctor(System.String,Exception)
  fullName: Aviant.DDD.Application.Exceptions.NotFoundException.NotFoundException(System.String, Exception)
  nameWithType: NotFoundException.NotFoundException(String, Exception)
- uid: Aviant.DDD.Application.Exceptions.NotFoundException.#ctor(System.String,System.Object)
  name: NotFoundException(String, Object)
  href: api/Aviant.DDD.Application.Exceptions.NotFoundException.html#Aviant_DDD_Application_Exceptions_NotFoundException__ctor_System_String_System_Object_
  commentId: M:Aviant.DDD.Application.Exceptions.NotFoundException.#ctor(System.String,System.Object)
  fullName: Aviant.DDD.Application.Exceptions.NotFoundException.NotFoundException(System.String, System.Object)
  nameWithType: NotFoundException.NotFoundException(String, Object)
- uid: Aviant.DDD.Application.Exceptions.NotFoundException.#ctor*
  name: NotFoundException
  href: api/Aviant.DDD.Application.Exceptions.NotFoundException.html#Aviant_DDD_Application_Exceptions_NotFoundException__ctor_
  commentId: Overload:Aviant.DDD.Application.Exceptions.NotFoundException.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Exceptions.NotFoundException.NotFoundException
  nameWithType: NotFoundException.NotFoundException
- uid: Aviant.DDD.Application.Exceptions.ValidationException
  name: ValidationException
  href: api/Aviant.DDD.Application.Exceptions.ValidationException.html
  commentId: T:Aviant.DDD.Application.Exceptions.ValidationException
  fullName: Aviant.DDD.Application.Exceptions.ValidationException
  nameWithType: ValidationException
- uid: Aviant.DDD.Application.Exceptions.ValidationException.#ctor
  name: ValidationException()
  href: api/Aviant.DDD.Application.Exceptions.ValidationException.html#Aviant_DDD_Application_Exceptions_ValidationException__ctor
  commentId: M:Aviant.DDD.Application.Exceptions.ValidationException.#ctor
  fullName: Aviant.DDD.Application.Exceptions.ValidationException.ValidationException()
  nameWithType: ValidationException.ValidationException()
- uid: Aviant.DDD.Application.Exceptions.ValidationException.#ctor(IEnumerable{ValidationFailure})
  name: ValidationException(IEnumerable<ValidationFailure>)
  href: api/Aviant.DDD.Application.Exceptions.ValidationException.html#Aviant_DDD_Application_Exceptions_ValidationException__ctor_IEnumerable_ValidationFailure__
  commentId: M:Aviant.DDD.Application.Exceptions.ValidationException.#ctor(IEnumerable{ValidationFailure})
  name.vb: ValidationException(IEnumerable(Of ValidationFailure))
  fullName: Aviant.DDD.Application.Exceptions.ValidationException.ValidationException(IEnumerable<ValidationFailure>)
  fullName.vb: Aviant.DDD.Application.Exceptions.ValidationException.ValidationException(IEnumerable(Of ValidationFailure))
  nameWithType: ValidationException.ValidationException(IEnumerable<ValidationFailure>)
  nameWithType.vb: ValidationException.ValidationException(IEnumerable(Of ValidationFailure))
- uid: Aviant.DDD.Application.Exceptions.ValidationException.#ctor*
  name: ValidationException
  href: api/Aviant.DDD.Application.Exceptions.ValidationException.html#Aviant_DDD_Application_Exceptions_ValidationException__ctor_
  commentId: Overload:Aviant.DDD.Application.Exceptions.ValidationException.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Exceptions.ValidationException.ValidationException
  nameWithType: ValidationException.ValidationException
- uid: Aviant.DDD.Application.Exceptions.ValidationException.Failures
  name: Failures
  href: api/Aviant.DDD.Application.Exceptions.ValidationException.html#Aviant_DDD_Application_Exceptions_ValidationException_Failures
  commentId: P:Aviant.DDD.Application.Exceptions.ValidationException.Failures
  fullName: Aviant.DDD.Application.Exceptions.ValidationException.Failures
  nameWithType: ValidationException.Failures
- uid: Aviant.DDD.Application.Exceptions.ValidationException.Failures*
  name: Failures
  href: api/Aviant.DDD.Application.Exceptions.ValidationException.html#Aviant_DDD_Application_Exceptions_ValidationException_Failures_
  commentId: Overload:Aviant.DDD.Application.Exceptions.ValidationException.Failures
  isSpec: "True"
  fullName: Aviant.DDD.Application.Exceptions.ValidationException.Failures
  nameWithType: ValidationException.Failures
- uid: Aviant.DDD.Application.Identity
  name: Aviant.DDD.Application.Identity
  href: api/Aviant.DDD.Application.Identity.html
  commentId: N:Aviant.DDD.Application.Identity
  fullName: Aviant.DDD.Application.Identity
  nameWithType: Aviant.DDD.Application.Identity
- uid: Aviant.DDD.Application.Identity.ApplicationRole
  name: ApplicationRole
  href: api/Aviant.DDD.Application.Identity.ApplicationRole.html
  commentId: T:Aviant.DDD.Application.Identity.ApplicationRole
  fullName: Aviant.DDD.Application.Identity.ApplicationRole
  nameWithType: ApplicationRole
- uid: Aviant.DDD.Application.Identity.ApplicationUser
  name: ApplicationUser
  href: api/Aviant.DDD.Application.Identity.ApplicationUser.html
  commentId: T:Aviant.DDD.Application.Identity.ApplicationUser
  fullName: Aviant.DDD.Application.Identity.ApplicationUser
  nameWithType: ApplicationUser
- uid: Aviant.DDD.Application.Identity.ICurrentUserService
  name: ICurrentUserService
  href: api/Aviant.DDD.Application.Identity.ICurrentUserService.html
  commentId: T:Aviant.DDD.Application.Identity.ICurrentUserService
  fullName: Aviant.DDD.Application.Identity.ICurrentUserService
  nameWithType: ICurrentUserService
- uid: Aviant.DDD.Application.Identity.ICurrentUserService.UserId
  name: UserId
  href: api/Aviant.DDD.Application.Identity.ICurrentUserService.html#Aviant_DDD_Application_Identity_ICurrentUserService_UserId
  commentId: P:Aviant.DDD.Application.Identity.ICurrentUserService.UserId
  fullName: Aviant.DDD.Application.Identity.ICurrentUserService.UserId
  nameWithType: ICurrentUserService.UserId
- uid: Aviant.DDD.Application.Identity.ICurrentUserService.UserId*
  name: UserId
  href: api/Aviant.DDD.Application.Identity.ICurrentUserService.html#Aviant_DDD_Application_Identity_ICurrentUserService_UserId_
  commentId: Overload:Aviant.DDD.Application.Identity.ICurrentUserService.UserId
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.ICurrentUserService.UserId
  nameWithType: ICurrentUserService.UserId
- uid: Aviant.DDD.Application.Identity.IdentityResult
  name: IdentityResult
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html
  commentId: T:Aviant.DDD.Application.Identity.IdentityResult
  fullName: Aviant.DDD.Application.Identity.IdentityResult
  nameWithType: IdentityResult
- uid: Aviant.DDD.Application.Identity.IdentityResult.Errors
  name: Errors
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html#Aviant_DDD_Application_Identity_IdentityResult_Errors
  commentId: P:Aviant.DDD.Application.Identity.IdentityResult.Errors
  fullName: Aviant.DDD.Application.Identity.IdentityResult.Errors
  nameWithType: IdentityResult.Errors
- uid: Aviant.DDD.Application.Identity.IdentityResult.Errors*
  name: Errors
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html#Aviant_DDD_Application_Identity_IdentityResult_Errors_
  commentId: Overload:Aviant.DDD.Application.Identity.IdentityResult.Errors
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IdentityResult.Errors
  nameWithType: IdentityResult.Errors
- uid: Aviant.DDD.Application.Identity.IdentityResult.Failure(IEnumerable{System.String})
  name: Failure(IEnumerable<String>)
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html#Aviant_DDD_Application_Identity_IdentityResult_Failure_IEnumerable_System_String__
  commentId: M:Aviant.DDD.Application.Identity.IdentityResult.Failure(IEnumerable{System.String})
  name.vb: Failure(IEnumerable(Of String))
  fullName: Aviant.DDD.Application.Identity.IdentityResult.Failure(IEnumerable<System.String>)
  fullName.vb: Aviant.DDD.Application.Identity.IdentityResult.Failure(IEnumerable(Of System.String))
  nameWithType: IdentityResult.Failure(IEnumerable<String>)
  nameWithType.vb: IdentityResult.Failure(IEnumerable(Of String))
- uid: Aviant.DDD.Application.Identity.IdentityResult.Failure*
  name: Failure
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html#Aviant_DDD_Application_Identity_IdentityResult_Failure_
  commentId: Overload:Aviant.DDD.Application.Identity.IdentityResult.Failure
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IdentityResult.Failure
  nameWithType: IdentityResult.Failure
- uid: Aviant.DDD.Application.Identity.IdentityResult.Succeeded
  name: Succeeded
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html#Aviant_DDD_Application_Identity_IdentityResult_Succeeded
  commentId: P:Aviant.DDD.Application.Identity.IdentityResult.Succeeded
  fullName: Aviant.DDD.Application.Identity.IdentityResult.Succeeded
  nameWithType: IdentityResult.Succeeded
- uid: Aviant.DDD.Application.Identity.IdentityResult.Succeeded*
  name: Succeeded
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html#Aviant_DDD_Application_Identity_IdentityResult_Succeeded_
  commentId: Overload:Aviant.DDD.Application.Identity.IdentityResult.Succeeded
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IdentityResult.Succeeded
  nameWithType: IdentityResult.Succeeded
- uid: Aviant.DDD.Application.Identity.IdentityResult.Success
  name: Success()
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html#Aviant_DDD_Application_Identity_IdentityResult_Success
  commentId: M:Aviant.DDD.Application.Identity.IdentityResult.Success
  fullName: Aviant.DDD.Application.Identity.IdentityResult.Success()
  nameWithType: IdentityResult.Success()
- uid: Aviant.DDD.Application.Identity.IdentityResult.Success*
  name: Success
  href: api/Aviant.DDD.Application.Identity.IdentityResult.html#Aviant_DDD_Application_Identity_IdentityResult_Success_
  commentId: Overload:Aviant.DDD.Application.Identity.IdentityResult.Success
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IdentityResult.Success
  nameWithType: IdentityResult.Success
- uid: Aviant.DDD.Application.Identity.IIdentityService
  name: IIdentityService
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html
  commentId: T:Aviant.DDD.Application.Identity.IIdentityService
  fullName: Aviant.DDD.Application.Identity.IIdentityService
  nameWithType: IIdentityService
- uid: Aviant.DDD.Application.Identity.IIdentityService.AuthenticateAsync(System.String,System.String,CancellationToken)
  name: AuthenticateAsync(String, String, CancellationToken)
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_AuthenticateAsync_System_String_System_String_CancellationToken_
  commentId: M:Aviant.DDD.Application.Identity.IIdentityService.AuthenticateAsync(System.String,System.String,CancellationToken)
  fullName: Aviant.DDD.Application.Identity.IIdentityService.AuthenticateAsync(System.String, System.String, CancellationToken)
  nameWithType: IIdentityService.AuthenticateAsync(String, String, CancellationToken)
- uid: Aviant.DDD.Application.Identity.IIdentityService.AuthenticateAsync*
  name: AuthenticateAsync
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_AuthenticateAsync_
  commentId: Overload:Aviant.DDD.Application.Identity.IIdentityService.AuthenticateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IIdentityService.AuthenticateAsync
  nameWithType: IIdentityService.AuthenticateAsync
- uid: Aviant.DDD.Application.Identity.IIdentityService.ConfirmEmailAsync(System.String,System.String,CancellationToken)
  name: ConfirmEmailAsync(String, String, CancellationToken)
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_ConfirmEmailAsync_System_String_System_String_CancellationToken_
  commentId: M:Aviant.DDD.Application.Identity.IIdentityService.ConfirmEmailAsync(System.String,System.String,CancellationToken)
  fullName: Aviant.DDD.Application.Identity.IIdentityService.ConfirmEmailAsync(System.String, System.String, CancellationToken)
  nameWithType: IIdentityService.ConfirmEmailAsync(String, String, CancellationToken)
- uid: Aviant.DDD.Application.Identity.IIdentityService.ConfirmEmailAsync*
  name: ConfirmEmailAsync
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_ConfirmEmailAsync_
  commentId: Overload:Aviant.DDD.Application.Identity.IIdentityService.ConfirmEmailAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IIdentityService.ConfirmEmailAsync
  nameWithType: IIdentityService.ConfirmEmailAsync
- uid: Aviant.DDD.Application.Identity.IIdentityService.CreateUserAsync(System.String,System.String,CancellationToken)
  name: CreateUserAsync(String, String, CancellationToken)
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_CreateUserAsync_System_String_System_String_CancellationToken_
  commentId: M:Aviant.DDD.Application.Identity.IIdentityService.CreateUserAsync(System.String,System.String,CancellationToken)
  fullName: Aviant.DDD.Application.Identity.IIdentityService.CreateUserAsync(System.String, System.String, CancellationToken)
  nameWithType: IIdentityService.CreateUserAsync(String, String, CancellationToken)
- uid: Aviant.DDD.Application.Identity.IIdentityService.CreateUserAsync*
  name: CreateUserAsync
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_CreateUserAsync_
  commentId: Overload:Aviant.DDD.Application.Identity.IIdentityService.CreateUserAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IIdentityService.CreateUserAsync
  nameWithType: IIdentityService.CreateUserAsync
- uid: Aviant.DDD.Application.Identity.IIdentityService.DeleteUserAsync(Guid,CancellationToken)
  name: DeleteUserAsync(Guid, CancellationToken)
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_DeleteUserAsync_Guid_CancellationToken_
  commentId: M:Aviant.DDD.Application.Identity.IIdentityService.DeleteUserAsync(Guid,CancellationToken)
  fullName: Aviant.DDD.Application.Identity.IIdentityService.DeleteUserAsync(Guid, CancellationToken)
  nameWithType: IIdentityService.DeleteUserAsync(Guid, CancellationToken)
- uid: Aviant.DDD.Application.Identity.IIdentityService.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_DeleteUserAsync_
  commentId: Overload:Aviant.DDD.Application.Identity.IIdentityService.DeleteUserAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IIdentityService.DeleteUserAsync
  nameWithType: IIdentityService.DeleteUserAsync
- uid: Aviant.DDD.Application.Identity.IIdentityService.GetUserNameAsync(Guid,CancellationToken)
  name: GetUserNameAsync(Guid, CancellationToken)
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_GetUserNameAsync_Guid_CancellationToken_
  commentId: M:Aviant.DDD.Application.Identity.IIdentityService.GetUserNameAsync(Guid,CancellationToken)
  fullName: Aviant.DDD.Application.Identity.IIdentityService.GetUserNameAsync(Guid, CancellationToken)
  nameWithType: IIdentityService.GetUserNameAsync(Guid, CancellationToken)
- uid: Aviant.DDD.Application.Identity.IIdentityService.GetUserNameAsync*
  name: GetUserNameAsync
  href: api/Aviant.DDD.Application.Identity.IIdentityService.html#Aviant_DDD_Application_Identity_IIdentityService_GetUserNameAsync_
  commentId: Overload:Aviant.DDD.Application.Identity.IIdentityService.GetUserNameAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Identity.IIdentityService.GetUserNameAsync
  nameWithType: IIdentityService.GetUserNameAsync
- uid: Aviant.DDD.Application.Mappings
  name: Aviant.DDD.Application.Mappings
  href: api/Aviant.DDD.Application.Mappings.html
  commentId: N:Aviant.DDD.Application.Mappings
  fullName: Aviant.DDD.Application.Mappings
  nameWithType: Aviant.DDD.Application.Mappings
- uid: Aviant.DDD.Application.Mappings.IMapFrom`1
  name: IMapFrom<T>
  href: api/Aviant.DDD.Application.Mappings.IMapFrom-1.html
  commentId: T:Aviant.DDD.Application.Mappings.IMapFrom`1
  name.vb: IMapFrom(Of T)
  fullName: Aviant.DDD.Application.Mappings.IMapFrom<T>
  fullName.vb: Aviant.DDD.Application.Mappings.IMapFrom(Of T)
  nameWithType: IMapFrom<T>
  nameWithType.vb: IMapFrom(Of T)
- uid: Aviant.DDD.Application.Mappings.IMapFrom`1.Mapping(Profile)
  name: Mapping(Profile)
  href: api/Aviant.DDD.Application.Mappings.IMapFrom-1.html#Aviant_DDD_Application_Mappings_IMapFrom_1_Mapping_Profile_
  commentId: M:Aviant.DDD.Application.Mappings.IMapFrom`1.Mapping(Profile)
  fullName: Aviant.DDD.Application.Mappings.IMapFrom<T>.Mapping(Profile)
  fullName.vb: Aviant.DDD.Application.Mappings.IMapFrom(Of T).Mapping(Profile)
  nameWithType: IMapFrom<T>.Mapping(Profile)
  nameWithType.vb: IMapFrom(Of T).Mapping(Profile)
- uid: Aviant.DDD.Application.Mappings.IMapFrom`1.Mapping*
  name: Mapping
  href: api/Aviant.DDD.Application.Mappings.IMapFrom-1.html#Aviant_DDD_Application_Mappings_IMapFrom_1_Mapping_
  commentId: Overload:Aviant.DDD.Application.Mappings.IMapFrom`1.Mapping
  isSpec: "True"
  fullName: Aviant.DDD.Application.Mappings.IMapFrom<T>.Mapping
  fullName.vb: Aviant.DDD.Application.Mappings.IMapFrom(Of T).Mapping
  nameWithType: IMapFrom<T>.Mapping
  nameWithType.vb: IMapFrom(Of T).Mapping
- uid: Aviant.DDD.Application.Mappings.IMapTo`1
  name: IMapTo<T>
  href: api/Aviant.DDD.Application.Mappings.IMapTo-1.html
  commentId: T:Aviant.DDD.Application.Mappings.IMapTo`1
  name.vb: IMapTo(Of T)
  fullName: Aviant.DDD.Application.Mappings.IMapTo<T>
  fullName.vb: Aviant.DDD.Application.Mappings.IMapTo(Of T)
  nameWithType: IMapTo<T>
  nameWithType.vb: IMapTo(Of T)
- uid: Aviant.DDD.Application.Mappings.IMapTo`1.Mapping(Profile)
  name: Mapping(Profile)
  href: api/Aviant.DDD.Application.Mappings.IMapTo-1.html#Aviant_DDD_Application_Mappings_IMapTo_1_Mapping_Profile_
  commentId: M:Aviant.DDD.Application.Mappings.IMapTo`1.Mapping(Profile)
  fullName: Aviant.DDD.Application.Mappings.IMapTo<T>.Mapping(Profile)
  fullName.vb: Aviant.DDD.Application.Mappings.IMapTo(Of T).Mapping(Profile)
  nameWithType: IMapTo<T>.Mapping(Profile)
  nameWithType.vb: IMapTo(Of T).Mapping(Profile)
- uid: Aviant.DDD.Application.Mappings.IMapTo`1.Mapping*
  name: Mapping
  href: api/Aviant.DDD.Application.Mappings.IMapTo-1.html#Aviant_DDD_Application_Mappings_IMapTo_1_Mapping_
  commentId: Overload:Aviant.DDD.Application.Mappings.IMapTo`1.Mapping
  isSpec: "True"
  fullName: Aviant.DDD.Application.Mappings.IMapTo<T>.Mapping
  fullName.vb: Aviant.DDD.Application.Mappings.IMapTo(Of T).Mapping
  nameWithType: IMapTo<T>.Mapping
  nameWithType.vb: IMapTo(Of T).Mapping
- uid: Aviant.DDD.Application.Mappings.MappingProfile
  name: MappingProfile
  href: api/Aviant.DDD.Application.Mappings.MappingProfile.html
  commentId: T:Aviant.DDD.Application.Mappings.MappingProfile
  fullName: Aviant.DDD.Application.Mappings.MappingProfile
  nameWithType: MappingProfile
- uid: Aviant.DDD.Application.Mappings.MappingProfile.#ctor(Assembly)
  name: MappingProfile(Assembly)
  href: api/Aviant.DDD.Application.Mappings.MappingProfile.html#Aviant_DDD_Application_Mappings_MappingProfile__ctor_Assembly_
  commentId: M:Aviant.DDD.Application.Mappings.MappingProfile.#ctor(Assembly)
  fullName: Aviant.DDD.Application.Mappings.MappingProfile.MappingProfile(Assembly)
  nameWithType: MappingProfile.MappingProfile(Assembly)
- uid: Aviant.DDD.Application.Mappings.MappingProfile.#ctor*
  name: MappingProfile
  href: api/Aviant.DDD.Application.Mappings.MappingProfile.html#Aviant_DDD_Application_Mappings_MappingProfile__ctor_
  commentId: Overload:Aviant.DDD.Application.Mappings.MappingProfile.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Mappings.MappingProfile.MappingProfile
  nameWithType: MappingProfile.MappingProfile
- uid: Aviant.DDD.Application.Orchestration
  name: Aviant.DDD.Application.Orchestration
  href: api/Aviant.DDD.Application.Orchestration.html
  commentId: N:Aviant.DDD.Application.Orchestration
  fullName: Aviant.DDD.Application.Orchestration
  nameWithType: Aviant.DDD.Application.Orchestration
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator
  name: IOrchestrator
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator.html
  commentId: T:Aviant.DDD.Application.Orchestration.IOrchestrator
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator
  nameWithType: IOrchestrator
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator.SendCommandAsync*
  name: SendCommandAsync
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator.html#Aviant_DDD_Application_Orchestration_IOrchestrator_SendCommandAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.IOrchestrator.SendCommandAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator.SendCommandAsync
  nameWithType: IOrchestrator.SendCommandAsync
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator.SendCommandAsync``1(Aviant.DDD.Application.Commands.ICommand{``0},CancellationToken)
  name: SendCommandAsync<T>(ICommand<T>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator.html#Aviant_DDD_Application_Orchestration_IOrchestrator_SendCommandAsync__1_Aviant_DDD_Application_Commands_ICommand___0__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.IOrchestrator.SendCommandAsync``1(Aviant.DDD.Application.Commands.ICommand{``0},CancellationToken)
  name.vb: SendCommandAsync(Of T)(ICommand(Of T), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator.SendCommandAsync<T>(Aviant.DDD.Application.Commands.ICommand<T>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator.SendCommandAsync(Of T)(Aviant.DDD.Application.Commands.ICommand(Of T), CancellationToken)
  nameWithType: IOrchestrator.SendCommandAsync<T>(ICommand<T>, CancellationToken)
  nameWithType.vb: IOrchestrator.SendCommandAsync(Of T)(ICommand(Of T), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator.SendQueryAsync*
  name: SendQueryAsync
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator.html#Aviant_DDD_Application_Orchestration_IOrchestrator_SendQueryAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.IOrchestrator.SendQueryAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator.SendQueryAsync
  nameWithType: IOrchestrator.SendQueryAsync
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator.SendQueryAsync``1(Aviant.DDD.Application.Queries.IQuery{``0},CancellationToken)
  name: SendQueryAsync<T>(IQuery<T>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator.html#Aviant_DDD_Application_Orchestration_IOrchestrator_SendQueryAsync__1_Aviant_DDD_Application_Queries_IQuery___0__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.IOrchestrator.SendQueryAsync``1(Aviant.DDD.Application.Queries.IQuery{``0},CancellationToken)
  name.vb: SendQueryAsync(Of T)(IQuery(Of T), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator.SendQueryAsync<T>(Aviant.DDD.Application.Queries.IQuery<T>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator.SendQueryAsync(Of T)(Aviant.DDD.Application.Queries.IQuery(Of T), CancellationToken)
  nameWithType: IOrchestrator.SendQueryAsync<T>(IQuery<T>, CancellationToken)
  nameWithType.vb: IOrchestrator.SendQueryAsync(Of T)(IQuery(Of T), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`1
  name: IOrchestrator<TDbContext>
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-1.html
  commentId: T:Aviant.DDD.Application.Orchestration.IOrchestrator`1
  name.vb: IOrchestrator(Of TDbContext)
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TDbContext>
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TDbContext)
  nameWithType: IOrchestrator<TDbContext>
  nameWithType.vb: IOrchestrator(Of TDbContext)
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`1.SendCommandAsync*
  name: SendCommandAsync
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-1.html#Aviant_DDD_Application_Orchestration_IOrchestrator_1_SendCommandAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.IOrchestrator`1.SendCommandAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TDbContext>.SendCommandAsync
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TDbContext).SendCommandAsync
  nameWithType: IOrchestrator<TDbContext>.SendCommandAsync
  nameWithType.vb: IOrchestrator(Of TDbContext).SendCommandAsync
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`1.SendCommandAsync``1(Aviant.DDD.Application.Commands.ICommand{``0},CancellationToken)
  name: SendCommandAsync<T>(ICommand<T>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-1.html#Aviant_DDD_Application_Orchestration_IOrchestrator_1_SendCommandAsync__1_Aviant_DDD_Application_Commands_ICommand___0__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.IOrchestrator`1.SendCommandAsync``1(Aviant.DDD.Application.Commands.ICommand{``0},CancellationToken)
  name.vb: SendCommandAsync(Of T)(ICommand(Of T), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TDbContext>.SendCommandAsync<T>(Aviant.DDD.Application.Commands.ICommand<T>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TDbContext).SendCommandAsync(Of T)(Aviant.DDD.Application.Commands.ICommand(Of T), CancellationToken)
  nameWithType: IOrchestrator<TDbContext>.SendCommandAsync<T>(ICommand<T>, CancellationToken)
  nameWithType.vb: IOrchestrator(Of TDbContext).SendCommandAsync(Of T)(ICommand(Of T), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`1.SendQueryAsync*
  name: SendQueryAsync
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-1.html#Aviant_DDD_Application_Orchestration_IOrchestrator_1_SendQueryAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.IOrchestrator`1.SendQueryAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TDbContext>.SendQueryAsync
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TDbContext).SendQueryAsync
  nameWithType: IOrchestrator<TDbContext>.SendQueryAsync
  nameWithType.vb: IOrchestrator(Of TDbContext).SendQueryAsync
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`1.SendQueryAsync``1(Aviant.DDD.Application.Queries.IQuery{``0},CancellationToken)
  name: SendQueryAsync<T>(IQuery<T>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-1.html#Aviant_DDD_Application_Orchestration_IOrchestrator_1_SendQueryAsync__1_Aviant_DDD_Application_Queries_IQuery___0__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.IOrchestrator`1.SendQueryAsync``1(Aviant.DDD.Application.Queries.IQuery{``0},CancellationToken)
  name.vb: SendQueryAsync(Of T)(IQuery(Of T), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TDbContext>.SendQueryAsync<T>(Aviant.DDD.Application.Queries.IQuery<T>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TDbContext).SendQueryAsync(Of T)(Aviant.DDD.Application.Queries.IQuery(Of T), CancellationToken)
  nameWithType: IOrchestrator<TDbContext>.SendQueryAsync<T>(IQuery<T>, CancellationToken)
  nameWithType.vb: IOrchestrator(Of TDbContext).SendQueryAsync(Of T)(IQuery(Of T), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`2
  name: IOrchestrator<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-2.html
  commentId: T:Aviant.DDD.Application.Orchestration.IOrchestrator`2
  name.vb: IOrchestrator(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TAggregate, TAggregateId)
  nameWithType: IOrchestrator<TAggregate, TAggregateId>
  nameWithType.vb: IOrchestrator(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`2.SendCommandAsync(Aviant.DDD.Application.Commands.ICommand{`0,`1},CancellationToken)
  name: SendCommandAsync(ICommand<TAggregate, TAggregateId>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-2.html#Aviant_DDD_Application_Orchestration_IOrchestrator_2_SendCommandAsync_Aviant_DDD_Application_Commands_ICommand__0__1__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.IOrchestrator`2.SendCommandAsync(Aviant.DDD.Application.Commands.ICommand{`0,`1},CancellationToken)
  name.vb: SendCommandAsync(ICommand(Of TAggregate, TAggregateId), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TAggregate, TAggregateId>.SendCommandAsync(Aviant.DDD.Application.Commands.ICommand<TAggregate, TAggregateId>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TAggregate, TAggregateId).SendCommandAsync(Aviant.DDD.Application.Commands.ICommand(Of TAggregate, TAggregateId), CancellationToken)
  nameWithType: IOrchestrator<TAggregate, TAggregateId>.SendCommandAsync(ICommand<TAggregate, TAggregateId>, CancellationToken)
  nameWithType.vb: IOrchestrator(Of TAggregate, TAggregateId).SendCommandAsync(ICommand(Of TAggregate, TAggregateId), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`2.SendCommandAsync*
  name: SendCommandAsync
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-2.html#Aviant_DDD_Application_Orchestration_IOrchestrator_2_SendCommandAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.IOrchestrator`2.SendCommandAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TAggregate, TAggregateId>.SendCommandAsync
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TAggregate, TAggregateId).SendCommandAsync
  nameWithType: IOrchestrator<TAggregate, TAggregateId>.SendCommandAsync
  nameWithType.vb: IOrchestrator(Of TAggregate, TAggregateId).SendCommandAsync
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`2.SendQueryAsync*
  name: SendQueryAsync
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-2.html#Aviant_DDD_Application_Orchestration_IOrchestrator_2_SendQueryAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.IOrchestrator`2.SendQueryAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TAggregate, TAggregateId>.SendQueryAsync
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TAggregate, TAggregateId).SendQueryAsync
  nameWithType: IOrchestrator<TAggregate, TAggregateId>.SendQueryAsync
  nameWithType.vb: IOrchestrator(Of TAggregate, TAggregateId).SendQueryAsync
- uid: Aviant.DDD.Application.Orchestration.IOrchestrator`2.SendQueryAsync``1(Aviant.DDD.Application.Queries.IQuery{``0},CancellationToken)
  name: SendQueryAsync<T>(IQuery<T>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.IOrchestrator-2.html#Aviant_DDD_Application_Orchestration_IOrchestrator_2_SendQueryAsync__1_Aviant_DDD_Application_Queries_IQuery___0__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.IOrchestrator`2.SendQueryAsync``1(Aviant.DDD.Application.Queries.IQuery{``0},CancellationToken)
  name.vb: SendQueryAsync(Of T)(IQuery(Of T), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.IOrchestrator<TAggregate, TAggregateId>.SendQueryAsync<T>(Aviant.DDD.Application.Queries.IQuery<T>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.IOrchestrator(Of TAggregate, TAggregateId).SendQueryAsync(Of T)(Aviant.DDD.Application.Queries.IQuery(Of T), CancellationToken)
  nameWithType: IOrchestrator<TAggregate, TAggregateId>.SendQueryAsync<T>(IQuery<T>, CancellationToken)
  nameWithType.vb: IOrchestrator(Of TAggregate, TAggregateId).SendQueryAsync(Of T)(IQuery(Of T), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator
  name: Orchestrator
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator.html
  commentId: T:Aviant.DDD.Application.Orchestration.Orchestrator
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator
  nameWithType: Orchestrator
- uid: Aviant.DDD.Application.Orchestration.Orchestrator.#ctor(Aviant.DDD.Core.Messages.IMessages,Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher,IMediator)
  name: Orchestrator(IMessages, IApplicationEventDispatcher, IMediator)
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator.html#Aviant_DDD_Application_Orchestration_Orchestrator__ctor_Aviant_DDD_Core_Messages_IMessages_Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_IMediator_
  commentId: M:Aviant.DDD.Application.Orchestration.Orchestrator.#ctor(Aviant.DDD.Core.Messages.IMessages,Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher,IMediator)
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator.Orchestrator(Aviant.DDD.Core.Messages.IMessages, Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher, IMediator)
  nameWithType: Orchestrator.Orchestrator(IMessages, IApplicationEventDispatcher, IMediator)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator.#ctor*
  name: Orchestrator
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator.html#Aviant_DDD_Application_Orchestration_Orchestrator__ctor_
  commentId: Overload:Aviant.DDD.Application.Orchestration.Orchestrator.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator.Orchestrator
  nameWithType: Orchestrator.Orchestrator
- uid: Aviant.DDD.Application.Orchestration.Orchestrator.SendCommandAsync*
  name: SendCommandAsync
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator.html#Aviant_DDD_Application_Orchestration_Orchestrator_SendCommandAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.Orchestrator.SendCommandAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator.SendCommandAsync
  nameWithType: Orchestrator.SendCommandAsync
- uid: Aviant.DDD.Application.Orchestration.Orchestrator.SendCommandAsync``1(Aviant.DDD.Application.Commands.ICommand{``0},CancellationToken)
  name: SendCommandAsync<T>(ICommand<T>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator.html#Aviant_DDD_Application_Orchestration_Orchestrator_SendCommandAsync__1_Aviant_DDD_Application_Commands_ICommand___0__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.Orchestrator.SendCommandAsync``1(Aviant.DDD.Application.Commands.ICommand{``0},CancellationToken)
  name.vb: SendCommandAsync(Of T)(ICommand(Of T), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator.SendCommandAsync<T>(Aviant.DDD.Application.Commands.ICommand<T>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator.SendCommandAsync(Of T)(Aviant.DDD.Application.Commands.ICommand(Of T), CancellationToken)
  nameWithType: Orchestrator.SendCommandAsync<T>(ICommand<T>, CancellationToken)
  nameWithType.vb: Orchestrator.SendCommandAsync(Of T)(ICommand(Of T), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`1
  name: Orchestrator<TDbContext>
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-1.html
  commentId: T:Aviant.DDD.Application.Orchestration.Orchestrator`1
  name.vb: Orchestrator(Of TDbContext)
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TDbContext>
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TDbContext)
  nameWithType: Orchestrator<TDbContext>
  nameWithType.vb: Orchestrator(Of TDbContext)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`1.#ctor(Aviant.DDD.Application.Persistance.IUnitOfWork{`0},Aviant.DDD.Core.Messages.IMessages,Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher,IMediator)
  name: Orchestrator(IUnitOfWork<TDbContext>, IMessages, IApplicationEventDispatcher, IMediator)
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-1.html#Aviant_DDD_Application_Orchestration_Orchestrator_1__ctor_Aviant_DDD_Application_Persistance_IUnitOfWork__0__Aviant_DDD_Core_Messages_IMessages_Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_IMediator_
  commentId: M:Aviant.DDD.Application.Orchestration.Orchestrator`1.#ctor(Aviant.DDD.Application.Persistance.IUnitOfWork{`0},Aviant.DDD.Core.Messages.IMessages,Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher,IMediator)
  name.vb: Orchestrator(IUnitOfWork(Of TDbContext), IMessages, IApplicationEventDispatcher, IMediator)
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TDbContext>.Orchestrator(Aviant.DDD.Application.Persistance.IUnitOfWork<TDbContext>, Aviant.DDD.Core.Messages.IMessages, Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher, IMediator)
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TDbContext).Orchestrator(Aviant.DDD.Application.Persistance.IUnitOfWork(Of TDbContext), Aviant.DDD.Core.Messages.IMessages, Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher, IMediator)
  nameWithType: Orchestrator<TDbContext>.Orchestrator(IUnitOfWork<TDbContext>, IMessages, IApplicationEventDispatcher, IMediator)
  nameWithType.vb: Orchestrator(Of TDbContext).Orchestrator(IUnitOfWork(Of TDbContext), IMessages, IApplicationEventDispatcher, IMediator)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`1.#ctor*
  name: Orchestrator
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-1.html#Aviant_DDD_Application_Orchestration_Orchestrator_1__ctor_
  commentId: Overload:Aviant.DDD.Application.Orchestration.Orchestrator`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TDbContext>.Orchestrator
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TDbContext).Orchestrator
  nameWithType: Orchestrator<TDbContext>.Orchestrator
  nameWithType.vb: Orchestrator(Of TDbContext).Orchestrator
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`1.SendCommandAsync*
  name: SendCommandAsync
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-1.html#Aviant_DDD_Application_Orchestration_Orchestrator_1_SendCommandAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.Orchestrator`1.SendCommandAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TDbContext>.SendCommandAsync
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TDbContext).SendCommandAsync
  nameWithType: Orchestrator<TDbContext>.SendCommandAsync
  nameWithType.vb: Orchestrator(Of TDbContext).SendCommandAsync
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`1.SendCommandAsync``1(Aviant.DDD.Application.Commands.ICommand{``0},CancellationToken)
  name: SendCommandAsync<T>(ICommand<T>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-1.html#Aviant_DDD_Application_Orchestration_Orchestrator_1_SendCommandAsync__1_Aviant_DDD_Application_Commands_ICommand___0__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.Orchestrator`1.SendCommandAsync``1(Aviant.DDD.Application.Commands.ICommand{``0},CancellationToken)
  name.vb: SendCommandAsync(Of T)(ICommand(Of T), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TDbContext>.SendCommandAsync<T>(Aviant.DDD.Application.Commands.ICommand<T>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TDbContext).SendCommandAsync(Of T)(Aviant.DDD.Application.Commands.ICommand(Of T), CancellationToken)
  nameWithType: Orchestrator<TDbContext>.SendCommandAsync<T>(ICommand<T>, CancellationToken)
  nameWithType.vb: Orchestrator(Of TDbContext).SendCommandAsync(Of T)(ICommand(Of T), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`2
  name: Orchestrator<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-2.html
  commentId: T:Aviant.DDD.Application.Orchestration.Orchestrator`2
  name.vb: Orchestrator(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TAggregate, TAggregateId)
  nameWithType: Orchestrator<TAggregate, TAggregateId>
  nameWithType.vb: Orchestrator(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`2.#ctor(Aviant.DDD.Application.Persistance.IUnitOfWork{`0,`1},Aviant.DDD.Core.Messages.IMessages,Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher,IMediator)
  name: Orchestrator(IUnitOfWork<TAggregate, TAggregateId>, IMessages, IApplicationEventDispatcher, IMediator)
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-2.html#Aviant_DDD_Application_Orchestration_Orchestrator_2__ctor_Aviant_DDD_Application_Persistance_IUnitOfWork__0__1__Aviant_DDD_Core_Messages_IMessages_Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_IMediator_
  commentId: M:Aviant.DDD.Application.Orchestration.Orchestrator`2.#ctor(Aviant.DDD.Application.Persistance.IUnitOfWork{`0,`1},Aviant.DDD.Core.Messages.IMessages,Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher,IMediator)
  name.vb: Orchestrator(IUnitOfWork(Of TAggregate, TAggregateId), IMessages, IApplicationEventDispatcher, IMediator)
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TAggregate, TAggregateId>.Orchestrator(Aviant.DDD.Application.Persistance.IUnitOfWork<TAggregate, TAggregateId>, Aviant.DDD.Core.Messages.IMessages, Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher, IMediator)
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TAggregate, TAggregateId).Orchestrator(Aviant.DDD.Application.Persistance.IUnitOfWork(Of TAggregate, TAggregateId), Aviant.DDD.Core.Messages.IMessages, Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher, IMediator)
  nameWithType: Orchestrator<TAggregate, TAggregateId>.Orchestrator(IUnitOfWork<TAggregate, TAggregateId>, IMessages, IApplicationEventDispatcher, IMediator)
  nameWithType.vb: Orchestrator(Of TAggregate, TAggregateId).Orchestrator(IUnitOfWork(Of TAggregate, TAggregateId), IMessages, IApplicationEventDispatcher, IMediator)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`2.#ctor*
  name: Orchestrator
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-2.html#Aviant_DDD_Application_Orchestration_Orchestrator_2__ctor_
  commentId: Overload:Aviant.DDD.Application.Orchestration.Orchestrator`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TAggregate, TAggregateId>.Orchestrator
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TAggregate, TAggregateId).Orchestrator
  nameWithType: Orchestrator<TAggregate, TAggregateId>.Orchestrator
  nameWithType.vb: Orchestrator(Of TAggregate, TAggregateId).Orchestrator
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`2.SendCommandAsync(Aviant.DDD.Application.Commands.ICommand{`0,`1},CancellationToken)
  name: SendCommandAsync(ICommand<TAggregate, TAggregateId>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-2.html#Aviant_DDD_Application_Orchestration_Orchestrator_2_SendCommandAsync_Aviant_DDD_Application_Commands_ICommand__0__1__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.Orchestrator`2.SendCommandAsync(Aviant.DDD.Application.Commands.ICommand{`0,`1},CancellationToken)
  name.vb: SendCommandAsync(ICommand(Of TAggregate, TAggregateId), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TAggregate, TAggregateId>.SendCommandAsync(Aviant.DDD.Application.Commands.ICommand<TAggregate, TAggregateId>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TAggregate, TAggregateId).SendCommandAsync(Aviant.DDD.Application.Commands.ICommand(Of TAggregate, TAggregateId), CancellationToken)
  nameWithType: Orchestrator<TAggregate, TAggregateId>.SendCommandAsync(ICommand<TAggregate, TAggregateId>, CancellationToken)
  nameWithType.vb: Orchestrator(Of TAggregate, TAggregateId).SendCommandAsync(ICommand(Of TAggregate, TAggregateId), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.Orchestrator`2.SendCommandAsync*
  name: SendCommandAsync
  href: api/Aviant.DDD.Application.Orchestration.Orchestrator-2.html#Aviant_DDD_Application_Orchestration_Orchestrator_2_SendCommandAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.Orchestrator`2.SendCommandAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.Orchestrator<TAggregate, TAggregateId>.SendCommandAsync
  fullName.vb: Aviant.DDD.Application.Orchestration.Orchestrator(Of TAggregate, TAggregateId).SendCommandAsync
  nameWithType: Orchestrator<TAggregate, TAggregateId>.SendCommandAsync
  nameWithType.vb: Orchestrator(Of TAggregate, TAggregateId).SendCommandAsync
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase
  name: OrchestratorBase
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html
  commentId: T:Aviant.DDD.Application.Orchestration.OrchestratorBase
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase
  nameWithType: OrchestratorBase
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase.#ctor(Aviant.DDD.Core.Messages.IMessages,Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher,IMediator)
  name: OrchestratorBase(IMessages, IApplicationEventDispatcher, IMediator)
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html#Aviant_DDD_Application_Orchestration_OrchestratorBase__ctor_Aviant_DDD_Core_Messages_IMessages_Aviant_DDD_Application_ApplicationEvents_IApplicationEventDispatcher_IMediator_
  commentId: M:Aviant.DDD.Application.Orchestration.OrchestratorBase.#ctor(Aviant.DDD.Core.Messages.IMessages,Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher,IMediator)
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase.OrchestratorBase(Aviant.DDD.Core.Messages.IMessages, Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher, IMediator)
  nameWithType: OrchestratorBase.OrchestratorBase(IMessages, IApplicationEventDispatcher, IMediator)
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase.#ctor*
  name: OrchestratorBase
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html#Aviant_DDD_Application_Orchestration_OrchestratorBase__ctor_
  commentId: Overload:Aviant.DDD.Application.Orchestration.OrchestratorBase.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase.OrchestratorBase
  nameWithType: OrchestratorBase.OrchestratorBase
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase.PostUnitOfWork*
  name: PostUnitOfWork
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html#Aviant_DDD_Application_Orchestration_OrchestratorBase_PostUnitOfWork_
  commentId: Overload:Aviant.DDD.Application.Orchestration.OrchestratorBase.PostUnitOfWork
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase.PostUnitOfWork
  nameWithType: OrchestratorBase.PostUnitOfWork
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase.PostUnitOfWork``1(``0,CancellationToken)
  name: PostUnitOfWork<TCommandResponse>(TCommandResponse, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html#Aviant_DDD_Application_Orchestration_OrchestratorBase_PostUnitOfWork__1___0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.OrchestratorBase.PostUnitOfWork``1(``0,CancellationToken)
  name.vb: PostUnitOfWork(Of TCommandResponse)(TCommandResponse, CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase.PostUnitOfWork<TCommandResponse>(TCommandResponse, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.OrchestratorBase.PostUnitOfWork(Of TCommandResponse)(TCommandResponse, CancellationToken)
  nameWithType: OrchestratorBase.PostUnitOfWork<TCommandResponse>(TCommandResponse, CancellationToken)
  nameWithType.vb: OrchestratorBase.PostUnitOfWork(Of TCommandResponse)(TCommandResponse, CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase.PreUnitOfWork*
  name: PreUnitOfWork
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html#Aviant_DDD_Application_Orchestration_OrchestratorBase_PreUnitOfWork_
  commentId: Overload:Aviant.DDD.Application.Orchestration.OrchestratorBase.PreUnitOfWork
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase.PreUnitOfWork
  nameWithType: OrchestratorBase.PreUnitOfWork
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase.PreUnitOfWork``2(``0,CancellationToken)
  name: PreUnitOfWork<TCommand, TCommandResponse>(TCommand, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html#Aviant_DDD_Application_Orchestration_OrchestratorBase_PreUnitOfWork__2___0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.OrchestratorBase.PreUnitOfWork``2(``0,CancellationToken)
  name.vb: PreUnitOfWork(Of TCommand, TCommandResponse)(TCommand, CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase.PreUnitOfWork<TCommand, TCommandResponse>(TCommand, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.OrchestratorBase.PreUnitOfWork(Of TCommand, TCommandResponse)(TCommand, CancellationToken)
  nameWithType: OrchestratorBase.PreUnitOfWork<TCommand, TCommandResponse>(TCommand, CancellationToken)
  nameWithType.vb: OrchestratorBase.PreUnitOfWork(Of TCommand, TCommandResponse)(TCommand, CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase.SendQueryAsync*
  name: SendQueryAsync
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html#Aviant_DDD_Application_Orchestration_OrchestratorBase_SendQueryAsync_
  commentId: Overload:Aviant.DDD.Application.Orchestration.OrchestratorBase.SendQueryAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase.SendQueryAsync
  nameWithType: OrchestratorBase.SendQueryAsync
- uid: Aviant.DDD.Application.Orchestration.OrchestratorBase.SendQueryAsync``1(Aviant.DDD.Application.Queries.IQuery{``0},CancellationToken)
  name: SendQueryAsync<T>(IQuery<T>, CancellationToken)
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html#Aviant_DDD_Application_Orchestration_OrchestratorBase_SendQueryAsync__1_Aviant_DDD_Application_Queries_IQuery___0__CancellationToken_
  commentId: M:Aviant.DDD.Application.Orchestration.OrchestratorBase.SendQueryAsync``1(Aviant.DDD.Application.Queries.IQuery{``0},CancellationToken)
  name.vb: SendQueryAsync(Of T)(IQuery(Of T), CancellationToken)
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorBase.SendQueryAsync<T>(Aviant.DDD.Application.Queries.IQuery<T>, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Orchestration.OrchestratorBase.SendQueryAsync(Of T)(Aviant.DDD.Application.Queries.IQuery(Of T), CancellationToken)
  nameWithType: OrchestratorBase.SendQueryAsync<T>(IQuery<T>, CancellationToken)
  nameWithType.vb: OrchestratorBase.SendQueryAsync(Of T)(IQuery(Of T), CancellationToken)
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse
  name: OrchestratorResponse
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html
  commentId: T:Aviant.DDD.Application.Orchestration.OrchestratorResponse
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse
  nameWithType: OrchestratorResponse
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.#ctor
  name: OrchestratorResponse()
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse__ctor
  commentId: M:Aviant.DDD.Application.Orchestration.OrchestratorResponse.#ctor
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.OrchestratorResponse()
  nameWithType: OrchestratorResponse.OrchestratorResponse()
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.#ctor*
  name: OrchestratorResponse
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse__ctor_
  commentId: Overload:Aviant.DDD.Application.Orchestration.OrchestratorResponse.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.OrchestratorResponse
  nameWithType: OrchestratorResponse.OrchestratorResponse
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Messages
  name: Messages
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse_Messages
  commentId: P:Aviant.DDD.Application.Orchestration.OrchestratorResponse.Messages
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Messages
  nameWithType: OrchestratorResponse.Messages
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Messages*
  name: Messages
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse_Messages_
  commentId: Overload:Aviant.DDD.Application.Orchestration.OrchestratorResponse.Messages
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Messages
  nameWithType: OrchestratorResponse.Messages
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload
  name: Payload()
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse_Payload
  commentId: M:Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload()
  nameWithType: OrchestratorResponse.Payload()
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload*
  name: Payload
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse_Payload_
  commentId: Overload:Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload
  nameWithType: OrchestratorResponse.Payload
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload``1
  name: Payload<T>()
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse_Payload__1
  commentId: M:Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload``1
  name.vb: Payload(Of T)()
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload<T>()
  fullName.vb: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Payload(Of T)()
  nameWithType: OrchestratorResponse.Payload<T>()
  nameWithType.vb: OrchestratorResponse.Payload(Of T)()
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Succeeded
  name: Succeeded
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse_Succeeded
  commentId: P:Aviant.DDD.Application.Orchestration.OrchestratorResponse.Succeeded
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Succeeded
  nameWithType: OrchestratorResponse.Succeeded
- uid: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Succeeded*
  name: Succeeded
  href: api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html#Aviant_DDD_Application_Orchestration_OrchestratorResponse_Succeeded_
  commentId: Overload:Aviant.DDD.Application.Orchestration.OrchestratorResponse.Succeeded
  isSpec: "True"
  fullName: Aviant.DDD.Application.Orchestration.OrchestratorResponse.Succeeded
  nameWithType: OrchestratorResponse.Succeeded
- uid: Aviant.DDD.Application.Persistance
  name: Aviant.DDD.Application.Persistance
  href: api/Aviant.DDD.Application.Persistance.html
  commentId: N:Aviant.DDD.Application.Persistance
  fullName: Aviant.DDD.Application.Persistance
  nameWithType: Aviant.DDD.Application.Persistance
- uid: Aviant.DDD.Application.Persistance.IDbContextRead
  name: IDbContextRead
  href: api/Aviant.DDD.Application.Persistance.IDbContextRead.html
  commentId: T:Aviant.DDD.Application.Persistance.IDbContextRead
  fullName: Aviant.DDD.Application.Persistance.IDbContextRead
  nameWithType: IDbContextRead
- uid: Aviant.DDD.Application.Persistance.IDbContextWrite
  name: IDbContextWrite
  href: api/Aviant.DDD.Application.Persistance.IDbContextWrite.html
  commentId: T:Aviant.DDD.Application.Persistance.IDbContextWrite
  fullName: Aviant.DDD.Application.Persistance.IDbContextWrite
  nameWithType: IDbContextWrite
- uid: Aviant.DDD.Application.Persistance.IDbContextWrite.SaveChangesAsync(CancellationToken)
  name: SaveChangesAsync(CancellationToken)
  href: api/Aviant.DDD.Application.Persistance.IDbContextWrite.html#Aviant_DDD_Application_Persistance_IDbContextWrite_SaveChangesAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.Persistance.IDbContextWrite.SaveChangesAsync(CancellationToken)
  fullName: Aviant.DDD.Application.Persistance.IDbContextWrite.SaveChangesAsync(CancellationToken)
  nameWithType: IDbContextWrite.SaveChangesAsync(CancellationToken)
- uid: Aviant.DDD.Application.Persistance.IDbContextWrite.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/Aviant.DDD.Application.Persistance.IDbContextWrite.html#Aviant_DDD_Application_Persistance_IDbContextWrite_SaveChangesAsync_
  commentId: Overload:Aviant.DDD.Application.Persistance.IDbContextWrite.SaveChangesAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Persistance.IDbContextWrite.SaveChangesAsync
  nameWithType: IDbContextWrite.SaveChangesAsync
- uid: Aviant.DDD.Application.Persistance.IUnitOfWork`1
  name: IUnitOfWork<TDbContext>
  href: api/Aviant.DDD.Application.Persistance.IUnitOfWork-1.html
  commentId: T:Aviant.DDD.Application.Persistance.IUnitOfWork`1
  name.vb: IUnitOfWork(Of TDbContext)
  fullName: Aviant.DDD.Application.Persistance.IUnitOfWork<TDbContext>
  fullName.vb: Aviant.DDD.Application.Persistance.IUnitOfWork(Of TDbContext)
  nameWithType: IUnitOfWork<TDbContext>
  nameWithType.vb: IUnitOfWork(Of TDbContext)
- uid: Aviant.DDD.Application.Persistance.IUnitOfWork`1.CommitAsync(CancellationToken)
  name: CommitAsync(CancellationToken)
  href: api/Aviant.DDD.Application.Persistance.IUnitOfWork-1.html#Aviant_DDD_Application_Persistance_IUnitOfWork_1_CommitAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.Persistance.IUnitOfWork`1.CommitAsync(CancellationToken)
  fullName: Aviant.DDD.Application.Persistance.IUnitOfWork<TDbContext>.CommitAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Application.Persistance.IUnitOfWork(Of TDbContext).CommitAsync(CancellationToken)
  nameWithType: IUnitOfWork<TDbContext>.CommitAsync(CancellationToken)
  nameWithType.vb: IUnitOfWork(Of TDbContext).CommitAsync(CancellationToken)
- uid: Aviant.DDD.Application.Persistance.IUnitOfWork`1.CommitAsync*
  name: CommitAsync
  href: api/Aviant.DDD.Application.Persistance.IUnitOfWork-1.html#Aviant_DDD_Application_Persistance_IUnitOfWork_1_CommitAsync_
  commentId: Overload:Aviant.DDD.Application.Persistance.IUnitOfWork`1.CommitAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Persistance.IUnitOfWork<TDbContext>.CommitAsync
  fullName.vb: Aviant.DDD.Application.Persistance.IUnitOfWork(Of TDbContext).CommitAsync
  nameWithType: IUnitOfWork<TDbContext>.CommitAsync
  nameWithType.vb: IUnitOfWork(Of TDbContext).CommitAsync
- uid: Aviant.DDD.Application.Persistance.IUnitOfWork`2
  name: IUnitOfWork<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Application.Persistance.IUnitOfWork-2.html
  commentId: T:Aviant.DDD.Application.Persistance.IUnitOfWork`2
  name.vb: IUnitOfWork(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Application.Persistance.IUnitOfWork<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Application.Persistance.IUnitOfWork(Of TAggregate, TAggregateId)
  nameWithType: IUnitOfWork<TAggregate, TAggregateId>
  nameWithType.vb: IUnitOfWork(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Application.Persistance.IUnitOfWork`2.CommitAsync(`0,CancellationToken)
  name: CommitAsync(TAggregate, CancellationToken)
  href: api/Aviant.DDD.Application.Persistance.IUnitOfWork-2.html#Aviant_DDD_Application_Persistance_IUnitOfWork_2_CommitAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Persistance.IUnitOfWork`2.CommitAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Persistance.IUnitOfWork<TAggregate, TAggregateId>.CommitAsync(TAggregate, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Persistance.IUnitOfWork(Of TAggregate, TAggregateId).CommitAsync(TAggregate, CancellationToken)
  nameWithType: IUnitOfWork<TAggregate, TAggregateId>.CommitAsync(TAggregate, CancellationToken)
  nameWithType.vb: IUnitOfWork(Of TAggregate, TAggregateId).CommitAsync(TAggregate, CancellationToken)
- uid: Aviant.DDD.Application.Persistance.IUnitOfWork`2.CommitAsync*
  name: CommitAsync
  href: api/Aviant.DDD.Application.Persistance.IUnitOfWork-2.html#Aviant_DDD_Application_Persistance_IUnitOfWork_2_CommitAsync_
  commentId: Overload:Aviant.DDD.Application.Persistance.IUnitOfWork`2.CommitAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Persistance.IUnitOfWork<TAggregate, TAggregateId>.CommitAsync
  fullName.vb: Aviant.DDD.Application.Persistance.IUnitOfWork(Of TAggregate, TAggregateId).CommitAsync
  nameWithType: IUnitOfWork<TAggregate, TAggregateId>.CommitAsync
  nameWithType.vb: IUnitOfWork(Of TAggregate, TAggregateId).CommitAsync
- uid: Aviant.DDD.Application.Processors
  name: Aviant.DDD.Application.Processors
  href: api/Aviant.DDD.Application.Processors.html
  commentId: N:Aviant.DDD.Application.Processors
  fullName: Aviant.DDD.Application.Processors
  nameWithType: Aviant.DDD.Application.Processors
- uid: Aviant.DDD.Application.Processors.RequestPostProcessor`2
  name: RequestPostProcessor<TRequest, TResponse>
  href: api/Aviant.DDD.Application.Processors.RequestPostProcessor-2.html
  commentId: T:Aviant.DDD.Application.Processors.RequestPostProcessor`2
  name.vb: RequestPostProcessor(Of TRequest, TResponse)
  fullName: Aviant.DDD.Application.Processors.RequestPostProcessor<TRequest, TResponse>
  fullName.vb: Aviant.DDD.Application.Processors.RequestPostProcessor(Of TRequest, TResponse)
  nameWithType: RequestPostProcessor<TRequest, TResponse>
  nameWithType.vb: RequestPostProcessor(Of TRequest, TResponse)
- uid: Aviant.DDD.Application.Processors.RequestPostProcessor`2.Process(`0,`1,CancellationToken)
  name: Process(TRequest, TResponse, CancellationToken)
  href: api/Aviant.DDD.Application.Processors.RequestPostProcessor-2.html#Aviant_DDD_Application_Processors_RequestPostProcessor_2_Process__0__1_CancellationToken_
  commentId: M:Aviant.DDD.Application.Processors.RequestPostProcessor`2.Process(`0,`1,CancellationToken)
  fullName: Aviant.DDD.Application.Processors.RequestPostProcessor<TRequest, TResponse>.Process(TRequest, TResponse, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Processors.RequestPostProcessor(Of TRequest, TResponse).Process(TRequest, TResponse, CancellationToken)
  nameWithType: RequestPostProcessor<TRequest, TResponse>.Process(TRequest, TResponse, CancellationToken)
  nameWithType.vb: RequestPostProcessor(Of TRequest, TResponse).Process(TRequest, TResponse, CancellationToken)
- uid: Aviant.DDD.Application.Processors.RequestPostProcessor`2.Process*
  name: Process
  href: api/Aviant.DDD.Application.Processors.RequestPostProcessor-2.html#Aviant_DDD_Application_Processors_RequestPostProcessor_2_Process_
  commentId: Overload:Aviant.DDD.Application.Processors.RequestPostProcessor`2.Process
  isSpec: "True"
  fullName: Aviant.DDD.Application.Processors.RequestPostProcessor<TRequest, TResponse>.Process
  fullName.vb: Aviant.DDD.Application.Processors.RequestPostProcessor(Of TRequest, TResponse).Process
  nameWithType: RequestPostProcessor<TRequest, TResponse>.Process
  nameWithType.vb: RequestPostProcessor(Of TRequest, TResponse).Process
- uid: Aviant.DDD.Application.Processors.RequestPreProcessor`1
  name: RequestPreProcessor<TRequest>
  href: api/Aviant.DDD.Application.Processors.RequestPreProcessor-1.html
  commentId: T:Aviant.DDD.Application.Processors.RequestPreProcessor`1
  name.vb: RequestPreProcessor(Of TRequest)
  fullName: Aviant.DDD.Application.Processors.RequestPreProcessor<TRequest>
  fullName.vb: Aviant.DDD.Application.Processors.RequestPreProcessor(Of TRequest)
  nameWithType: RequestPreProcessor<TRequest>
  nameWithType.vb: RequestPreProcessor(Of TRequest)
- uid: Aviant.DDD.Application.Processors.RequestPreProcessor`1.Process(`0,CancellationToken)
  name: Process(TRequest, CancellationToken)
  href: api/Aviant.DDD.Application.Processors.RequestPreProcessor-1.html#Aviant_DDD_Application_Processors_RequestPreProcessor_1_Process__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Processors.RequestPreProcessor`1.Process(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Processors.RequestPreProcessor<TRequest>.Process(TRequest, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Processors.RequestPreProcessor(Of TRequest).Process(TRequest, CancellationToken)
  nameWithType: RequestPreProcessor<TRequest>.Process(TRequest, CancellationToken)
  nameWithType.vb: RequestPreProcessor(Of TRequest).Process(TRequest, CancellationToken)
- uid: Aviant.DDD.Application.Processors.RequestPreProcessor`1.Process*
  name: Process
  href: api/Aviant.DDD.Application.Processors.RequestPreProcessor-1.html#Aviant_DDD_Application_Processors_RequestPreProcessor_1_Process_
  commentId: Overload:Aviant.DDD.Application.Processors.RequestPreProcessor`1.Process
  isSpec: "True"
  fullName: Aviant.DDD.Application.Processors.RequestPreProcessor<TRequest>.Process
  fullName.vb: Aviant.DDD.Application.Processors.RequestPreProcessor(Of TRequest).Process
  nameWithType: RequestPreProcessor<TRequest>.Process
  nameWithType.vb: RequestPreProcessor(Of TRequest).Process
- uid: Aviant.DDD.Application.Processors.RetryProcessor`1
  name: RetryProcessor<TNotification>
  href: api/Aviant.DDD.Application.Processors.RetryProcessor-1.html
  commentId: T:Aviant.DDD.Application.Processors.RetryProcessor`1
  name.vb: RetryProcessor(Of TNotification)
  fullName: Aviant.DDD.Application.Processors.RetryProcessor<TNotification>
  fullName.vb: Aviant.DDD.Application.Processors.RetryProcessor(Of TNotification)
  nameWithType: RetryProcessor<TNotification>
  nameWithType.vb: RetryProcessor(Of TNotification)
- uid: Aviant.DDD.Application.Processors.RetryProcessor`1.#ctor(INotificationHandler{`0})
  name: RetryProcessor(INotificationHandler<TNotification>)
  href: api/Aviant.DDD.Application.Processors.RetryProcessor-1.html#Aviant_DDD_Application_Processors_RetryProcessor_1__ctor_INotificationHandler__0__
  commentId: M:Aviant.DDD.Application.Processors.RetryProcessor`1.#ctor(INotificationHandler{`0})
  name.vb: RetryProcessor(INotificationHandler(Of TNotification))
  fullName: Aviant.DDD.Application.Processors.RetryProcessor<TNotification>.RetryProcessor(INotificationHandler<TNotification>)
  fullName.vb: Aviant.DDD.Application.Processors.RetryProcessor(Of TNotification).RetryProcessor(INotificationHandler(Of TNotification))
  nameWithType: RetryProcessor<TNotification>.RetryProcessor(INotificationHandler<TNotification>)
  nameWithType.vb: RetryProcessor(Of TNotification).RetryProcessor(INotificationHandler(Of TNotification))
- uid: Aviant.DDD.Application.Processors.RetryProcessor`1.#ctor*
  name: RetryProcessor
  href: api/Aviant.DDD.Application.Processors.RetryProcessor-1.html#Aviant_DDD_Application_Processors_RetryProcessor_1__ctor_
  commentId: Overload:Aviant.DDD.Application.Processors.RetryProcessor`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Processors.RetryProcessor<TNotification>.RetryProcessor
  fullName.vb: Aviant.DDD.Application.Processors.RetryProcessor(Of TNotification).RetryProcessor
  nameWithType: RetryProcessor<TNotification>.RetryProcessor
  nameWithType.vb: RetryProcessor(Of TNotification).RetryProcessor
- uid: Aviant.DDD.Application.Processors.RetryProcessor`1.Handle(`0,CancellationToken)
  name: Handle(TNotification, CancellationToken)
  href: api/Aviant.DDD.Application.Processors.RetryProcessor-1.html#Aviant_DDD_Application_Processors_RetryProcessor_1_Handle__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Processors.RetryProcessor`1.Handle(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Processors.RetryProcessor<TNotification>.Handle(TNotification, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Processors.RetryProcessor(Of TNotification).Handle(TNotification, CancellationToken)
  nameWithType: RetryProcessor<TNotification>.Handle(TNotification, CancellationToken)
  nameWithType.vb: RetryProcessor(Of TNotification).Handle(TNotification, CancellationToken)
- uid: Aviant.DDD.Application.Processors.RetryProcessor`1.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.Processors.RetryProcessor-1.html#Aviant_DDD_Application_Processors_RetryProcessor_1_Handle_
  commentId: Overload:Aviant.DDD.Application.Processors.RetryProcessor`1.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.Processors.RetryProcessor<TNotification>.Handle
  fullName.vb: Aviant.DDD.Application.Processors.RetryProcessor(Of TNotification).Handle
  nameWithType: RetryProcessor<TNotification>.Handle
  nameWithType.vb: RetryProcessor(Of TNotification).Handle
- uid: Aviant.DDD.Application.Queries
  name: Aviant.DDD.Application.Queries
  href: api/Aviant.DDD.Application.Queries.html
  commentId: N:Aviant.DDD.Application.Queries
  fullName: Aviant.DDD.Application.Queries
  nameWithType: Aviant.DDD.Application.Queries
- uid: Aviant.DDD.Application.Queries.IQuery`1
  name: IQuery<TResponse>
  href: api/Aviant.DDD.Application.Queries.IQuery-1.html
  commentId: T:Aviant.DDD.Application.Queries.IQuery`1
  name.vb: IQuery(Of TResponse)
  fullName: Aviant.DDD.Application.Queries.IQuery<TResponse>
  fullName.vb: Aviant.DDD.Application.Queries.IQuery(Of TResponse)
  nameWithType: IQuery<TResponse>
  nameWithType.vb: IQuery(Of TResponse)
- uid: Aviant.DDD.Application.Queries.Query`1
  name: Query<TResponse>
  href: api/Aviant.DDD.Application.Queries.Query-1.html
  commentId: T:Aviant.DDD.Application.Queries.Query`1
  name.vb: Query(Of TResponse)
  fullName: Aviant.DDD.Application.Queries.Query<TResponse>
  fullName.vb: Aviant.DDD.Application.Queries.Query(Of TResponse)
  nameWithType: Query<TResponse>
  nameWithType.vb: Query(Of TResponse)
- uid: Aviant.DDD.Application.Queries.QueryHandler`2
  name: QueryHandler<TQuery, TResponse>
  href: api/Aviant.DDD.Application.Queries.QueryHandler-2.html
  commentId: T:Aviant.DDD.Application.Queries.QueryHandler`2
  name.vb: QueryHandler(Of TQuery, TResponse)
  fullName: Aviant.DDD.Application.Queries.QueryHandler<TQuery, TResponse>
  fullName.vb: Aviant.DDD.Application.Queries.QueryHandler(Of TQuery, TResponse)
  nameWithType: QueryHandler<TQuery, TResponse>
  nameWithType.vb: QueryHandler(Of TQuery, TResponse)
- uid: Aviant.DDD.Application.Queries.QueryHandler`2.Handle(`0,CancellationToken)
  name: Handle(TQuery, CancellationToken)
  href: api/Aviant.DDD.Application.Queries.QueryHandler-2.html#Aviant_DDD_Application_Queries_QueryHandler_2_Handle__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Queries.QueryHandler`2.Handle(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Queries.QueryHandler<TQuery, TResponse>.Handle(TQuery, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Queries.QueryHandler(Of TQuery, TResponse).Handle(TQuery, CancellationToken)
  nameWithType: QueryHandler<TQuery, TResponse>.Handle(TQuery, CancellationToken)
  nameWithType.vb: QueryHandler(Of TQuery, TResponse).Handle(TQuery, CancellationToken)
- uid: Aviant.DDD.Application.Queries.QueryHandler`2.Handle*
  name: Handle
  href: api/Aviant.DDD.Application.Queries.QueryHandler-2.html#Aviant_DDD_Application_Queries_QueryHandler_2_Handle_
  commentId: Overload:Aviant.DDD.Application.Queries.QueryHandler`2.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Application.Queries.QueryHandler<TQuery, TResponse>.Handle
  fullName.vb: Aviant.DDD.Application.Queries.QueryHandler(Of TQuery, TResponse).Handle
  nameWithType: QueryHandler<TQuery, TResponse>.Handle
  nameWithType.vb: QueryHandler(Of TQuery, TResponse).Handle
- uid: Aviant.DDD.Application.Services
  name: Aviant.DDD.Application.Services
  href: api/Aviant.DDD.Application.Services.html
  commentId: N:Aviant.DDD.Application.Services
  fullName: Aviant.DDD.Application.Services
  nameWithType: Aviant.DDD.Application.Services
- uid: Aviant.DDD.Application.Services.EventsService`2
  name: EventsService<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Application.Services.EventsService-2.html
  commentId: T:Aviant.DDD.Application.Services.EventsService`2
  name.vb: EventsService(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Application.Services.EventsService<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Application.Services.EventsService(Of TAggregate, TAggregateId)
  nameWithType: EventsService<TAggregate, TAggregateId>
  nameWithType.vb: EventsService(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Application.Services.EventsService`2.#ctor(Aviant.DDD.Core.Persistence.IEventsRepository{`0,`1},Aviant.DDD.Core.EventBus.IEventProducer{`0,`1})
  name: EventsService(IEventsRepository<TAggregate, TAggregateId>, IEventProducer<TAggregate, TAggregateId>)
  href: api/Aviant.DDD.Application.Services.EventsService-2.html#Aviant_DDD_Application_Services_EventsService_2__ctor_Aviant_DDD_Core_Persistence_IEventsRepository__0__1__Aviant_DDD_Core_EventBus_IEventProducer__0__1__
  commentId: M:Aviant.DDD.Application.Services.EventsService`2.#ctor(Aviant.DDD.Core.Persistence.IEventsRepository{`0,`1},Aviant.DDD.Core.EventBus.IEventProducer{`0,`1})
  name.vb: EventsService(IEventsRepository(Of TAggregate, TAggregateId), IEventProducer(Of TAggregate, TAggregateId))
  fullName: Aviant.DDD.Application.Services.EventsService<TAggregate, TAggregateId>.EventsService(Aviant.DDD.Core.Persistence.IEventsRepository<TAggregate, TAggregateId>, Aviant.DDD.Core.EventBus.IEventProducer<TAggregate, TAggregateId>)
  fullName.vb: Aviant.DDD.Application.Services.EventsService(Of TAggregate, TAggregateId).EventsService(Aviant.DDD.Core.Persistence.IEventsRepository(Of TAggregate, TAggregateId), Aviant.DDD.Core.EventBus.IEventProducer(Of TAggregate, TAggregateId))
  nameWithType: EventsService<TAggregate, TAggregateId>.EventsService(IEventsRepository<TAggregate, TAggregateId>, IEventProducer<TAggregate, TAggregateId>)
  nameWithType.vb: EventsService(Of TAggregate, TAggregateId).EventsService(IEventsRepository(Of TAggregate, TAggregateId), IEventProducer(Of TAggregate, TAggregateId))
- uid: Aviant.DDD.Application.Services.EventsService`2.#ctor*
  name: EventsService
  href: api/Aviant.DDD.Application.Services.EventsService-2.html#Aviant_DDD_Application_Services_EventsService_2__ctor_
  commentId: Overload:Aviant.DDD.Application.Services.EventsService`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.EventsService<TAggregate, TAggregateId>.EventsService
  fullName.vb: Aviant.DDD.Application.Services.EventsService(Of TAggregate, TAggregateId).EventsService
  nameWithType: EventsService<TAggregate, TAggregateId>.EventsService
  nameWithType.vb: EventsService(Of TAggregate, TAggregateId).EventsService
- uid: Aviant.DDD.Application.Services.EventsService`2.PersistAsync(`0,CancellationToken)
  name: PersistAsync(TAggregate, CancellationToken)
  href: api/Aviant.DDD.Application.Services.EventsService-2.html#Aviant_DDD_Application_Services_EventsService_2_PersistAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.Services.EventsService`2.PersistAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Application.Services.EventsService<TAggregate, TAggregateId>.PersistAsync(TAggregate, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Services.EventsService(Of TAggregate, TAggregateId).PersistAsync(TAggregate, CancellationToken)
  nameWithType: EventsService<TAggregate, TAggregateId>.PersistAsync(TAggregate, CancellationToken)
  nameWithType.vb: EventsService(Of TAggregate, TAggregateId).PersistAsync(TAggregate, CancellationToken)
- uid: Aviant.DDD.Application.Services.EventsService`2.PersistAsync*
  name: PersistAsync
  href: api/Aviant.DDD.Application.Services.EventsService-2.html#Aviant_DDD_Application_Services_EventsService_2_PersistAsync_
  commentId: Overload:Aviant.DDD.Application.Services.EventsService`2.PersistAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.EventsService<TAggregate, TAggregateId>.PersistAsync
  fullName.vb: Aviant.DDD.Application.Services.EventsService(Of TAggregate, TAggregateId).PersistAsync
  nameWithType: EventsService<TAggregate, TAggregateId>.PersistAsync
  nameWithType.vb: EventsService(Of TAggregate, TAggregateId).PersistAsync
- uid: Aviant.DDD.Application.Services.EventsService`2.RehydrateAsync(`1,CancellationToken)
  name: RehydrateAsync(TAggregateId, CancellationToken)
  href: api/Aviant.DDD.Application.Services.EventsService-2.html#Aviant_DDD_Application_Services_EventsService_2_RehydrateAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Application.Services.EventsService`2.RehydrateAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Application.Services.EventsService<TAggregate, TAggregateId>.RehydrateAsync(TAggregateId, CancellationToken)
  fullName.vb: Aviant.DDD.Application.Services.EventsService(Of TAggregate, TAggregateId).RehydrateAsync(TAggregateId, CancellationToken)
  nameWithType: EventsService<TAggregate, TAggregateId>.RehydrateAsync(TAggregateId, CancellationToken)
  nameWithType.vb: EventsService(Of TAggregate, TAggregateId).RehydrateAsync(TAggregateId, CancellationToken)
- uid: Aviant.DDD.Application.Services.EventsService`2.RehydrateAsync*
  name: RehydrateAsync
  href: api/Aviant.DDD.Application.Services.EventsService-2.html#Aviant_DDD_Application_Services_EventsService_2_RehydrateAsync_
  commentId: Overload:Aviant.DDD.Application.Services.EventsService`2.RehydrateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.EventsService<TAggregate, TAggregateId>.RehydrateAsync
  fullName.vb: Aviant.DDD.Application.Services.EventsService(Of TAggregate, TAggregateId).RehydrateAsync
  nameWithType: EventsService<TAggregate, TAggregateId>.RehydrateAsync
  nameWithType.vb: EventsService(Of TAggregate, TAggregateId).RehydrateAsync
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy
  name: HttpContextServiceProviderProxy
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html
  commentId: T:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy
  nameWithType: HttpContextServiceProviderProxy
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.#ctor(IHttpContextAccessor)
  name: HttpContextServiceProviderProxy(IHttpContextAccessor)
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html#Aviant_DDD_Application_Services_HttpContextServiceProviderProxy__ctor_IHttpContextAccessor_
  commentId: M:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.#ctor(IHttpContextAccessor)
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.HttpContextServiceProviderProxy(IHttpContextAccessor)
  nameWithType: HttpContextServiceProviderProxy.HttpContextServiceProviderProxy(IHttpContextAccessor)
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.#ctor*
  name: HttpContextServiceProviderProxy
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html#Aviant_DDD_Application_Services_HttpContextServiceProviderProxy__ctor_
  commentId: Overload:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.HttpContextServiceProviderProxy
  nameWithType: HttpContextServiceProviderProxy.HttpContextServiceProviderProxy
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService(Type)
  name: GetRequiredService(Type)
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html#Aviant_DDD_Application_Services_HttpContextServiceProviderProxy_GetRequiredService_Type_
  commentId: M:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService(Type)
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService(Type)
  nameWithType: HttpContextServiceProviderProxy.GetRequiredService(Type)
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService*
  name: GetRequiredService
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html#Aviant_DDD_Application_Services_HttpContextServiceProviderProxy_GetRequiredService_
  commentId: Overload:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService
  nameWithType: HttpContextServiceProviderProxy.GetRequiredService
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService``1(Type)
  name: GetRequiredService<T>(Type)
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html#Aviant_DDD_Application_Services_HttpContextServiceProviderProxy_GetRequiredService__1_Type_
  commentId: M:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService``1(Type)
  name.vb: GetRequiredService(Of T)(Type)
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService<T>(Type)
  fullName.vb: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetRequiredService(Of T)(Type)
  nameWithType: HttpContextServiceProviderProxy.GetRequiredService<T>(Type)
  nameWithType.vb: HttpContextServiceProviderProxy.GetRequiredService(Of T)(Type)
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService(Type)
  name: GetService(Type)
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html#Aviant_DDD_Application_Services_HttpContextServiceProviderProxy_GetService_Type_
  commentId: M:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService(Type)
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService(Type)
  nameWithType: HttpContextServiceProviderProxy.GetService(Type)
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService*
  name: GetService
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html#Aviant_DDD_Application_Services_HttpContextServiceProviderProxy_GetService_
  commentId: Overload:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService
  nameWithType: HttpContextServiceProviderProxy.GetService
- uid: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService``1(Type)
  name: GetService<T>(Type)
  href: api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html#Aviant_DDD_Application_Services_HttpContextServiceProviderProxy_GetService__1_Type_
  commentId: M:Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService``1(Type)
  name.vb: GetService(Of T)(Type)
  fullName: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService<T>(Type)
  fullName.vb: Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.GetService(Of T)(Type)
  nameWithType: HttpContextServiceProviderProxy.GetService<T>(Type)
  nameWithType.vb: HttpContextServiceProviderProxy.GetService(Of T)(Type)
- uid: Aviant.DDD.Application.Services.ICsvFileBuilder`1
  name: ICsvFileBuilder<TRecord>
  href: api/Aviant.DDD.Application.Services.ICsvFileBuilder-1.html
  commentId: T:Aviant.DDD.Application.Services.ICsvFileBuilder`1
  name.vb: ICsvFileBuilder(Of TRecord)
  fullName: Aviant.DDD.Application.Services.ICsvFileBuilder<TRecord>
  fullName.vb: Aviant.DDD.Application.Services.ICsvFileBuilder(Of TRecord)
  nameWithType: ICsvFileBuilder<TRecord>
  nameWithType.vb: ICsvFileBuilder(Of TRecord)
- uid: Aviant.DDD.Application.Services.ICsvFileBuilder`1.BuildTodoItemsFile(IEnumerable{`0})
  name: BuildTodoItemsFile(IEnumerable<TRecord>)
  href: api/Aviant.DDD.Application.Services.ICsvFileBuilder-1.html#Aviant_DDD_Application_Services_ICsvFileBuilder_1_BuildTodoItemsFile_IEnumerable__0__
  commentId: M:Aviant.DDD.Application.Services.ICsvFileBuilder`1.BuildTodoItemsFile(IEnumerable{`0})
  name.vb: BuildTodoItemsFile(IEnumerable(Of TRecord))
  fullName: Aviant.DDD.Application.Services.ICsvFileBuilder<TRecord>.BuildTodoItemsFile(IEnumerable<TRecord>)
  fullName.vb: Aviant.DDD.Application.Services.ICsvFileBuilder(Of TRecord).BuildTodoItemsFile(IEnumerable(Of TRecord))
  nameWithType: ICsvFileBuilder<TRecord>.BuildTodoItemsFile(IEnumerable<TRecord>)
  nameWithType.vb: ICsvFileBuilder(Of TRecord).BuildTodoItemsFile(IEnumerable(Of TRecord))
- uid: Aviant.DDD.Application.Services.ICsvFileBuilder`1.BuildTodoItemsFile*
  name: BuildTodoItemsFile
  href: api/Aviant.DDD.Application.Services.ICsvFileBuilder-1.html#Aviant_DDD_Application_Services_ICsvFileBuilder_1_BuildTodoItemsFile_
  commentId: Overload:Aviant.DDD.Application.Services.ICsvFileBuilder`1.BuildTodoItemsFile
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.ICsvFileBuilder<TRecord>.BuildTodoItemsFile
  fullName.vb: Aviant.DDD.Application.Services.ICsvFileBuilder(Of TRecord).BuildTodoItemsFile
  nameWithType: ICsvFileBuilder<TRecord>.BuildTodoItemsFile
  nameWithType.vb: ICsvFileBuilder(Of TRecord).BuildTodoItemsFile
- uid: Aviant.DDD.Application.Services.IDateTimeService
  name: IDateTimeService
  href: api/Aviant.DDD.Application.Services.IDateTimeService.html
  commentId: T:Aviant.DDD.Application.Services.IDateTimeService
  fullName: Aviant.DDD.Application.Services.IDateTimeService
  nameWithType: IDateTimeService
- uid: Aviant.DDD.Application.Services.IDateTimeService.Now(System.Boolean)
  name: Now(Boolean)
  href: api/Aviant.DDD.Application.Services.IDateTimeService.html#Aviant_DDD_Application_Services_IDateTimeService_Now_System_Boolean_
  commentId: M:Aviant.DDD.Application.Services.IDateTimeService.Now(System.Boolean)
  fullName: Aviant.DDD.Application.Services.IDateTimeService.Now(System.Boolean)
  nameWithType: IDateTimeService.Now(Boolean)
- uid: Aviant.DDD.Application.Services.IDateTimeService.Now*
  name: Now
  href: api/Aviant.DDD.Application.Services.IDateTimeService.html#Aviant_DDD_Application_Services_IDateTimeService_Now_
  commentId: Overload:Aviant.DDD.Application.Services.IDateTimeService.Now
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IDateTimeService.Now
  nameWithType: IDateTimeService.Now
- uid: Aviant.DDD.Application.Services.IEmailService
  name: IEmailService
  href: api/Aviant.DDD.Application.Services.IEmailService.html
  commentId: T:Aviant.DDD.Application.Services.IEmailService
  fullName: Aviant.DDD.Application.Services.IEmailService
  nameWithType: IEmailService
- uid: Aviant.DDD.Application.Services.IEmailService.From(System.String,System.String)
  name: From(String, String)
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_From_System_String_System_String_
  commentId: M:Aviant.DDD.Application.Services.IEmailService.From(System.String,System.String)
  fullName: Aviant.DDD.Application.Services.IEmailService.From(System.String, System.String)
  nameWithType: IEmailService.From(String, String)
- uid: Aviant.DDD.Application.Services.IEmailService.From*
  name: From
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_From_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.From
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.From
  nameWithType: IEmailService.From
- uid: Aviant.DDD.Application.Services.IEmailService.FromServer
  name: FromServer()
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_FromServer
  commentId: M:Aviant.DDD.Application.Services.IEmailService.FromServer
  fullName: Aviant.DDD.Application.Services.IEmailService.FromServer()
  nameWithType: IEmailService.FromServer()
- uid: Aviant.DDD.Application.Services.IEmailService.FromServer*
  name: FromServer
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_FromServer_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.FromServer
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.FromServer
  nameWithType: IEmailService.FromServer
- uid: Aviant.DDD.Application.Services.IEmailService.Message
  name: Message()
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_Message
  commentId: M:Aviant.DDD.Application.Services.IEmailService.Message
  fullName: Aviant.DDD.Application.Services.IEmailService.Message()
  nameWithType: IEmailService.Message()
- uid: Aviant.DDD.Application.Services.IEmailService.Message*
  name: Message
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_Message_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.Message
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.Message
  nameWithType: IEmailService.Message
- uid: Aviant.DDD.Application.Services.IEmailService.Send
  name: Send()
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_Send
  commentId: M:Aviant.DDD.Application.Services.IEmailService.Send
  fullName: Aviant.DDD.Application.Services.IEmailService.Send()
  nameWithType: IEmailService.Send()
- uid: Aviant.DDD.Application.Services.IEmailService.Send*
  name: Send
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_Send_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.Send
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.Send
  nameWithType: IEmailService.Send
- uid: Aviant.DDD.Application.Services.IEmailService.SendAsync(CancellationToken)
  name: SendAsync(CancellationToken)
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_SendAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.Services.IEmailService.SendAsync(CancellationToken)
  fullName: Aviant.DDD.Application.Services.IEmailService.SendAsync(CancellationToken)
  nameWithType: IEmailService.SendAsync(CancellationToken)
- uid: Aviant.DDD.Application.Services.IEmailService.SendAsync*
  name: SendAsync
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_SendAsync_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.SendAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.SendAsync
  nameWithType: IEmailService.SendAsync
- uid: Aviant.DDD.Application.Services.IEmailService.To(System.String,System.String)
  name: To(String, String)
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_To_System_String_System_String_
  commentId: M:Aviant.DDD.Application.Services.IEmailService.To(System.String,System.String)
  fullName: Aviant.DDD.Application.Services.IEmailService.To(System.String, System.String)
  nameWithType: IEmailService.To(String, String)
- uid: Aviant.DDD.Application.Services.IEmailService.To*
  name: To
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_To_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.To
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.To
  nameWithType: IEmailService.To
- uid: Aviant.DDD.Application.Services.IEmailService.ToServer
  name: ToServer()
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_ToServer
  commentId: M:Aviant.DDD.Application.Services.IEmailService.ToServer
  fullName: Aviant.DDD.Application.Services.IEmailService.ToServer()
  nameWithType: IEmailService.ToServer()
- uid: Aviant.DDD.Application.Services.IEmailService.ToServer*
  name: ToServer
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_ToServer_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.ToServer
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.ToServer
  nameWithType: IEmailService.ToServer
- uid: Aviant.DDD.Application.Services.IEmailService.WithBodyHtml(System.String)
  name: WithBodyHtml(String)
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_WithBodyHtml_System_String_
  commentId: M:Aviant.DDD.Application.Services.IEmailService.WithBodyHtml(System.String)
  fullName: Aviant.DDD.Application.Services.IEmailService.WithBodyHtml(System.String)
  nameWithType: IEmailService.WithBodyHtml(String)
- uid: Aviant.DDD.Application.Services.IEmailService.WithBodyHtml*
  name: WithBodyHtml
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_WithBodyHtml_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.WithBodyHtml
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.WithBodyHtml
  nameWithType: IEmailService.WithBodyHtml
- uid: Aviant.DDD.Application.Services.IEmailService.WithBodyPlain(System.String)
  name: WithBodyPlain(String)
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_WithBodyPlain_System_String_
  commentId: M:Aviant.DDD.Application.Services.IEmailService.WithBodyPlain(System.String)
  fullName: Aviant.DDD.Application.Services.IEmailService.WithBodyPlain(System.String)
  nameWithType: IEmailService.WithBodyPlain(String)
- uid: Aviant.DDD.Application.Services.IEmailService.WithBodyPlain*
  name: WithBodyPlain
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_WithBodyPlain_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.WithBodyPlain
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.WithBodyPlain
  nameWithType: IEmailService.WithBodyPlain
- uid: Aviant.DDD.Application.Services.IEmailService.WithSubject(System.String)
  name: WithSubject(String)
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_WithSubject_System_String_
  commentId: M:Aviant.DDD.Application.Services.IEmailService.WithSubject(System.String)
  fullName: Aviant.DDD.Application.Services.IEmailService.WithSubject(System.String)
  nameWithType: IEmailService.WithSubject(String)
- uid: Aviant.DDD.Application.Services.IEmailService.WithSubject*
  name: WithSubject
  href: api/Aviant.DDD.Application.Services.IEmailService.html#Aviant_DDD_Application_Services_IEmailService_WithSubject_
  commentId: Overload:Aviant.DDD.Application.Services.IEmailService.WithSubject
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.IEmailService.WithSubject
  nameWithType: IEmailService.WithSubject
- uid: Aviant.DDD.Application.Services.JsonEventDeserializer
  name: JsonEventDeserializer
  href: api/Aviant.DDD.Application.Services.JsonEventDeserializer.html
  commentId: T:Aviant.DDD.Application.Services.JsonEventDeserializer
  fullName: Aviant.DDD.Application.Services.JsonEventDeserializer
  nameWithType: JsonEventDeserializer
- uid: Aviant.DDD.Application.Services.JsonEventDeserializer.#ctor(System.Nullable{IEnumerable{Assembly}})
  name: JsonEventDeserializer(Nullable<IEnumerable<Assembly>>)
  href: api/Aviant.DDD.Application.Services.JsonEventDeserializer.html#Aviant_DDD_Application_Services_JsonEventDeserializer__ctor_System_Nullable_IEnumerable_Assembly___
  commentId: M:Aviant.DDD.Application.Services.JsonEventDeserializer.#ctor(System.Nullable{IEnumerable{Assembly}})
  name.vb: JsonEventDeserializer(Nullable(Of IEnumerable(Of Assembly)))
  fullName: Aviant.DDD.Application.Services.JsonEventDeserializer.JsonEventDeserializer(System.Nullable<IEnumerable<Assembly>>)
  fullName.vb: Aviant.DDD.Application.Services.JsonEventDeserializer.JsonEventDeserializer(System.Nullable(Of IEnumerable(Of Assembly)))
  nameWithType: JsonEventDeserializer.JsonEventDeserializer(Nullable<IEnumerable<Assembly>>)
  nameWithType.vb: JsonEventDeserializer.JsonEventDeserializer(Nullable(Of IEnumerable(Of Assembly)))
- uid: Aviant.DDD.Application.Services.JsonEventDeserializer.#ctor*
  name: JsonEventDeserializer
  href: api/Aviant.DDD.Application.Services.JsonEventDeserializer.html#Aviant_DDD_Application_Services_JsonEventDeserializer__ctor_
  commentId: Overload:Aviant.DDD.Application.Services.JsonEventDeserializer.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.JsonEventDeserializer.JsonEventDeserializer
  nameWithType: JsonEventDeserializer.JsonEventDeserializer
- uid: Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize*
  name: Deserialize
  href: api/Aviant.DDD.Application.Services.JsonEventDeserializer.html#Aviant_DDD_Application_Services_JsonEventDeserializer_Deserialize_
  commentId: Overload:Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize
  isSpec: "True"
  fullName: Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize
  nameWithType: JsonEventDeserializer.Deserialize
- uid: Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize``1(System.String,System.Byte[])
  name: Deserialize<TAggregateId>(String, Byte[])
  href: api/Aviant.DDD.Application.Services.JsonEventDeserializer.html#Aviant_DDD_Application_Services_JsonEventDeserializer_Deserialize__1_System_String_System_Byte___
  commentId: M:Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize``1(System.String,System.Byte[])
  name.vb: Deserialize(Of TAggregateId)(String, Byte())
  fullName: Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize<TAggregateId>(System.String, System.Byte[])
  fullName.vb: Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize(Of TAggregateId)(System.String, System.Byte())
  nameWithType: JsonEventDeserializer.Deserialize<TAggregateId>(String, Byte[])
  nameWithType.vb: JsonEventDeserializer.Deserialize(Of TAggregateId)(String, Byte())
- uid: Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize``1(System.String,System.String)
  name: Deserialize<TAggregateId>(String, String)
  href: api/Aviant.DDD.Application.Services.JsonEventDeserializer.html#Aviant_DDD_Application_Services_JsonEventDeserializer_Deserialize__1_System_String_System_String_
  commentId: M:Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize``1(System.String,System.String)
  name.vb: Deserialize(Of TAggregateId)(String, String)
  fullName: Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize<TAggregateId>(System.String, System.String)
  fullName.vb: Aviant.DDD.Application.Services.JsonEventDeserializer.Deserialize(Of TAggregateId)(System.String, System.String)
  nameWithType: JsonEventDeserializer.Deserialize<TAggregateId>(String, String)
  nameWithType.vb: JsonEventDeserializer.Deserialize(Of TAggregateId)(String, String)
- uid: Aviant.DDD.Application.UseCases
  name: Aviant.DDD.Application.UseCases
  href: api/Aviant.DDD.Application.UseCases.html
  commentId: N:Aviant.DDD.Application.UseCases
  fullName: Aviant.DDD.Application.UseCases
  nameWithType: Aviant.DDD.Application.UseCases
- uid: Aviant.DDD.Application.UseCases.IUseCase`1
  name: IUseCase<TUseCaseOutput>
  href: api/Aviant.DDD.Application.UseCases.IUseCase-1.html
  commentId: T:Aviant.DDD.Application.UseCases.IUseCase`1
  name.vb: IUseCase(Of TUseCaseOutput)
  fullName: Aviant.DDD.Application.UseCases.IUseCase<TUseCaseOutput>
  fullName.vb: Aviant.DDD.Application.UseCases.IUseCase(Of TUseCaseOutput)
  nameWithType: IUseCase<TUseCaseOutput>
  nameWithType.vb: IUseCase(Of TUseCaseOutput)
- uid: Aviant.DDD.Application.UseCases.IUseCase`1.SetOutput(`0)
  name: SetOutput(TUseCaseOutput)
  href: api/Aviant.DDD.Application.UseCases.IUseCase-1.html#Aviant_DDD_Application_UseCases_IUseCase_1_SetOutput__0_
  commentId: M:Aviant.DDD.Application.UseCases.IUseCase`1.SetOutput(`0)
  fullName: Aviant.DDD.Application.UseCases.IUseCase<TUseCaseOutput>.SetOutput(TUseCaseOutput)
  fullName.vb: Aviant.DDD.Application.UseCases.IUseCase(Of TUseCaseOutput).SetOutput(TUseCaseOutput)
  nameWithType: IUseCase<TUseCaseOutput>.SetOutput(TUseCaseOutput)
  nameWithType.vb: IUseCase(Of TUseCaseOutput).SetOutput(TUseCaseOutput)
- uid: Aviant.DDD.Application.UseCases.IUseCase`1.SetOutput*
  name: SetOutput
  href: api/Aviant.DDD.Application.UseCases.IUseCase-1.html#Aviant_DDD_Application_UseCases_IUseCase_1_SetOutput_
  commentId: Overload:Aviant.DDD.Application.UseCases.IUseCase`1.SetOutput
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.IUseCase<TUseCaseOutput>.SetOutput
  fullName.vb: Aviant.DDD.Application.UseCases.IUseCase(Of TUseCaseOutput).SetOutput
  nameWithType: IUseCase<TUseCaseOutput>.SetOutput
  nameWithType.vb: IUseCase(Of TUseCaseOutput).SetOutput
- uid: Aviant.DDD.Application.UseCases.IUseCaseInput
  name: IUseCaseInput
  href: api/Aviant.DDD.Application.UseCases.IUseCaseInput.html
  commentId: T:Aviant.DDD.Application.UseCases.IUseCaseInput
  fullName: Aviant.DDD.Application.UseCases.IUseCaseInput
  nameWithType: IUseCaseInput
- uid: Aviant.DDD.Application.UseCases.IUseCaseInput.ValidateAsync(CancellationToken)
  name: ValidateAsync(CancellationToken)
  href: api/Aviant.DDD.Application.UseCases.IUseCaseInput.html#Aviant_DDD_Application_UseCases_IUseCaseInput_ValidateAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.UseCases.IUseCaseInput.ValidateAsync(CancellationToken)
  fullName: Aviant.DDD.Application.UseCases.IUseCaseInput.ValidateAsync(CancellationToken)
  nameWithType: IUseCaseInput.ValidateAsync(CancellationToken)
- uid: Aviant.DDD.Application.UseCases.IUseCaseInput.ValidateAsync*
  name: ValidateAsync
  href: api/Aviant.DDD.Application.UseCases.IUseCaseInput.html#Aviant_DDD_Application_UseCases_IUseCaseInput_ValidateAsync_
  commentId: Overload:Aviant.DDD.Application.UseCases.IUseCaseInput.ValidateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.IUseCaseInput.ValidateAsync
  nameWithType: IUseCaseInput.ValidateAsync
- uid: Aviant.DDD.Application.UseCases.IUseCaseOutput
  name: IUseCaseOutput
  href: api/Aviant.DDD.Application.UseCases.IUseCaseOutput.html
  commentId: T:Aviant.DDD.Application.UseCases.IUseCaseOutput
  fullName: Aviant.DDD.Application.UseCases.IUseCaseOutput
  nameWithType: IUseCaseOutput
- uid: Aviant.DDD.Application.UseCases.UseCase`1
  name: UseCase<TUseCaseOutput>
  href: api/Aviant.DDD.Application.UseCases.UseCase-1.html
  commentId: T:Aviant.DDD.Application.UseCases.UseCase`1
  name.vb: UseCase(Of TUseCaseOutput)
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseOutput>
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseOutput)
  nameWithType: UseCase<TUseCaseOutput>
  nameWithType.vb: UseCase(Of TUseCaseOutput)
- uid: Aviant.DDD.Application.UseCases.UseCase`1.ExecuteAsync(CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/Aviant.DDD.Application.UseCases.UseCase-1.html#Aviant_DDD_Application_UseCases_UseCase_1_ExecuteAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.UseCases.UseCase`1.ExecuteAsync(CancellationToken)
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseOutput>.ExecuteAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseOutput).ExecuteAsync(CancellationToken)
  nameWithType: UseCase<TUseCaseOutput>.ExecuteAsync(CancellationToken)
  nameWithType.vb: UseCase(Of TUseCaseOutput).ExecuteAsync(CancellationToken)
- uid: Aviant.DDD.Application.UseCases.UseCase`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/Aviant.DDD.Application.UseCases.UseCase-1.html#Aviant_DDD_Application_UseCases_UseCase_1_ExecuteAsync_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCase`1.ExecuteAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseOutput>.ExecuteAsync
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseOutput).ExecuteAsync
  nameWithType: UseCase<TUseCaseOutput>.ExecuteAsync
  nameWithType.vb: UseCase(Of TUseCaseOutput).ExecuteAsync
- uid: Aviant.DDD.Application.UseCases.UseCase`2
  name: UseCase<TUseCaseInput, TUseCaseOutput>
  href: api/Aviant.DDD.Application.UseCases.UseCase-2.html
  commentId: T:Aviant.DDD.Application.UseCases.UseCase`2
  name.vb: UseCase(Of TUseCaseInput, TUseCaseOutput)
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput>
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput)
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput>
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput)
- uid: Aviant.DDD.Application.UseCases.UseCase`2.ExecuteAsync(`0,CancellationToken)
  name: ExecuteAsync(TUseCaseInput, CancellationToken)
  href: api/Aviant.DDD.Application.UseCases.UseCase-2.html#Aviant_DDD_Application_UseCases_UseCase_2_ExecuteAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.UseCases.UseCase`2.ExecuteAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput>.ExecuteAsync(TUseCaseInput, CancellationToken)
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput).ExecuteAsync(TUseCaseInput, CancellationToken)
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput>.ExecuteAsync(TUseCaseInput, CancellationToken)
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput).ExecuteAsync(TUseCaseInput, CancellationToken)
- uid: Aviant.DDD.Application.UseCases.UseCase`2.ExecuteAsync*
  name: ExecuteAsync
  href: api/Aviant.DDD.Application.UseCases.UseCase-2.html#Aviant_DDD_Application_UseCases_UseCase_2_ExecuteAsync_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCase`2.ExecuteAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput>.ExecuteAsync
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput).ExecuteAsync
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput>.ExecuteAsync
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput).ExecuteAsync
- uid: Aviant.DDD.Application.UseCases.UseCase`3
  name: UseCase<TUseCaseInput, TUseCaseOutput, TDbContext>
  href: api/Aviant.DDD.Application.UseCases.UseCase-3.html
  commentId: T:Aviant.DDD.Application.UseCases.UseCase`3
  name.vb: UseCase(Of TUseCaseInput, TUseCaseOutput, TDbContext)
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput, TDbContext>
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput, TDbContext)
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput, TDbContext>
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput, TDbContext)
- uid: Aviant.DDD.Application.UseCases.UseCase`3.Orchestrator
  name: Orchestrator
  href: api/Aviant.DDD.Application.UseCases.UseCase-3.html#Aviant_DDD_Application_UseCases_UseCase_3_Orchestrator
  commentId: P:Aviant.DDD.Application.UseCases.UseCase`3.Orchestrator
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput, TDbContext>.Orchestrator
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput, TDbContext).Orchestrator
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput, TDbContext>.Orchestrator
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput, TDbContext).Orchestrator
- uid: Aviant.DDD.Application.UseCases.UseCase`3.Orchestrator*
  name: Orchestrator
  href: api/Aviant.DDD.Application.UseCases.UseCase-3.html#Aviant_DDD_Application_UseCases_UseCase_3_Orchestrator_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCase`3.Orchestrator
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput, TDbContext>.Orchestrator
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput, TDbContext).Orchestrator
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput, TDbContext>.Orchestrator
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput, TDbContext).Orchestrator
- uid: Aviant.DDD.Application.UseCases.UseCase`4
  name: UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId>
  href: api/Aviant.DDD.Application.UseCases.UseCase-4.html
  commentId: T:Aviant.DDD.Application.UseCases.UseCase`4
  name.vb: UseCase(Of TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId)
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId)
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId>
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId)
- uid: Aviant.DDD.Application.UseCases.UseCase`4.Orchestrator
  name: Orchestrator
  href: api/Aviant.DDD.Application.UseCases.UseCase-4.html#Aviant_DDD_Application_UseCases_UseCase_4_Orchestrator
  commentId: P:Aviant.DDD.Application.UseCases.UseCase`4.Orchestrator
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId>.Orchestrator
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId).Orchestrator
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId>.Orchestrator
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId).Orchestrator
- uid: Aviant.DDD.Application.UseCases.UseCase`4.Orchestrator*
  name: Orchestrator
  href: api/Aviant.DDD.Application.UseCases.UseCase-4.html#Aviant_DDD_Application_UseCases_UseCase_4_Orchestrator_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCase`4.Orchestrator
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId>.Orchestrator
  fullName.vb: Aviant.DDD.Application.UseCases.UseCase(Of TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId).Orchestrator
  nameWithType: UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId>.Orchestrator
  nameWithType.vb: UseCase(Of TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId).Orchestrator
- uid: Aviant.DDD.Application.UseCases.UseCaseBase`1
  name: UseCaseBase<TUseCaseOutput>
  href: api/Aviant.DDD.Application.UseCases.UseCaseBase-1.html
  commentId: T:Aviant.DDD.Application.UseCases.UseCaseBase`1
  name.vb: UseCaseBase(Of TUseCaseOutput)
  fullName: Aviant.DDD.Application.UseCases.UseCaseBase<TUseCaseOutput>
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseBase(Of TUseCaseOutput)
  nameWithType: UseCaseBase<TUseCaseOutput>
  nameWithType.vb: UseCaseBase(Of TUseCaseOutput)
- uid: Aviant.DDD.Application.UseCases.UseCaseBase`1.Orchestrator
  name: Orchestrator
  href: api/Aviant.DDD.Application.UseCases.UseCaseBase-1.html#Aviant_DDD_Application_UseCases_UseCaseBase_1_Orchestrator
  commentId: P:Aviant.DDD.Application.UseCases.UseCaseBase`1.Orchestrator
  fullName: Aviant.DDD.Application.UseCases.UseCaseBase<TUseCaseOutput>.Orchestrator
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseBase(Of TUseCaseOutput).Orchestrator
  nameWithType: UseCaseBase<TUseCaseOutput>.Orchestrator
  nameWithType.vb: UseCaseBase(Of TUseCaseOutput).Orchestrator
- uid: Aviant.DDD.Application.UseCases.UseCaseBase`1.Orchestrator*
  name: Orchestrator
  href: api/Aviant.DDD.Application.UseCases.UseCaseBase-1.html#Aviant_DDD_Application_UseCases_UseCaseBase_1_Orchestrator_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCaseBase`1.Orchestrator
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCaseBase<TUseCaseOutput>.Orchestrator
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseBase(Of TUseCaseOutput).Orchestrator
  nameWithType: UseCaseBase<TUseCaseOutput>.Orchestrator
  nameWithType.vb: UseCaseBase(Of TUseCaseOutput).Orchestrator
- uid: Aviant.DDD.Application.UseCases.UseCaseBase`1.Output
  name: Output
  href: api/Aviant.DDD.Application.UseCases.UseCaseBase-1.html#Aviant_DDD_Application_UseCases_UseCaseBase_1_Output
  commentId: F:Aviant.DDD.Application.UseCases.UseCaseBase`1.Output
  fullName: Aviant.DDD.Application.UseCases.UseCaseBase<TUseCaseOutput>.Output
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseBase(Of TUseCaseOutput).Output
  nameWithType: UseCaseBase<TUseCaseOutput>.Output
  nameWithType.vb: UseCaseBase(Of TUseCaseOutput).Output
- uid: Aviant.DDD.Application.UseCases.UseCaseBase`1.SetOutput(`0)
  name: SetOutput(TUseCaseOutput)
  href: api/Aviant.DDD.Application.UseCases.UseCaseBase-1.html#Aviant_DDD_Application_UseCases_UseCaseBase_1_SetOutput__0_
  commentId: M:Aviant.DDD.Application.UseCases.UseCaseBase`1.SetOutput(`0)
  fullName: Aviant.DDD.Application.UseCases.UseCaseBase<TUseCaseOutput>.SetOutput(TUseCaseOutput)
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseBase(Of TUseCaseOutput).SetOutput(TUseCaseOutput)
  nameWithType: UseCaseBase<TUseCaseOutput>.SetOutput(TUseCaseOutput)
  nameWithType.vb: UseCaseBase(Of TUseCaseOutput).SetOutput(TUseCaseOutput)
- uid: Aviant.DDD.Application.UseCases.UseCaseBase`1.SetOutput*
  name: SetOutput
  href: api/Aviant.DDD.Application.UseCases.UseCaseBase-1.html#Aviant_DDD_Application_UseCases_UseCaseBase_1_SetOutput_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCaseBase`1.SetOutput
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCaseBase<TUseCaseOutput>.SetOutput
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseBase(Of TUseCaseOutput).SetOutput
  nameWithType: UseCaseBase<TUseCaseOutput>.SetOutput
  nameWithType.vb: UseCaseBase(Of TUseCaseOutput).SetOutput
- uid: Aviant.DDD.Application.UseCases.UseCaseInput
  name: UseCaseInput
  href: api/Aviant.DDD.Application.UseCases.UseCaseInput.html
  commentId: T:Aviant.DDD.Application.UseCases.UseCaseInput
  fullName: Aviant.DDD.Application.UseCases.UseCaseInput
  nameWithType: UseCaseInput
- uid: Aviant.DDD.Application.UseCases.UseCaseInput.ValidateAsync(CancellationToken)
  name: ValidateAsync(CancellationToken)
  href: api/Aviant.DDD.Application.UseCases.UseCaseInput.html#Aviant_DDD_Application_UseCases_UseCaseInput_ValidateAsync_CancellationToken_
  commentId: M:Aviant.DDD.Application.UseCases.UseCaseInput.ValidateAsync(CancellationToken)
  fullName: Aviant.DDD.Application.UseCases.UseCaseInput.ValidateAsync(CancellationToken)
  nameWithType: UseCaseInput.ValidateAsync(CancellationToken)
- uid: Aviant.DDD.Application.UseCases.UseCaseInput.ValidateAsync*
  name: ValidateAsync
  href: api/Aviant.DDD.Application.UseCases.UseCaseInput.html#Aviant_DDD_Application_UseCases_UseCaseInput_ValidateAsync_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCaseInput.ValidateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCaseInput.ValidateAsync
  nameWithType: UseCaseInput.ValidateAsync
- uid: Aviant.DDD.Application.UseCases.UseCaseInput.ValidationResult
  name: ValidationResult
  href: api/Aviant.DDD.Application.UseCases.UseCaseInput.html#Aviant_DDD_Application_UseCases_UseCaseInput_ValidationResult
  commentId: P:Aviant.DDD.Application.UseCases.UseCaseInput.ValidationResult
  fullName: Aviant.DDD.Application.UseCases.UseCaseInput.ValidationResult
  nameWithType: UseCaseInput.ValidationResult
- uid: Aviant.DDD.Application.UseCases.UseCaseInput.ValidationResult*
  name: ValidationResult
  href: api/Aviant.DDD.Application.UseCases.UseCaseInput.html#Aviant_DDD_Application_UseCases_UseCaseInput_ValidationResult_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCaseInput.ValidationResult
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCaseInput.ValidationResult
  nameWithType: UseCaseInput.ValidationResult
- uid: Aviant.DDD.Application.UseCases.UseCaseInput`2
  name: UseCaseInput<TInput, TValidator>
  href: api/Aviant.DDD.Application.UseCases.UseCaseInput-2.html
  commentId: T:Aviant.DDD.Application.UseCases.UseCaseInput`2
  name.vb: UseCaseInput(Of TInput, TValidator)
  fullName: Aviant.DDD.Application.UseCases.UseCaseInput<TInput, TValidator>
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseInput(Of TInput, TValidator)
  nameWithType: UseCaseInput<TInput, TValidator>
  nameWithType.vb: UseCaseInput(Of TInput, TValidator)
- uid: Aviant.DDD.Application.UseCases.UseCaseInput`2.UseDefaultValidation(`0,CancellationToken)
  name: UseDefaultValidation(TInput, CancellationToken)
  href: api/Aviant.DDD.Application.UseCases.UseCaseInput-2.html#Aviant_DDD_Application_UseCases_UseCaseInput_2_UseDefaultValidation__0_CancellationToken_
  commentId: M:Aviant.DDD.Application.UseCases.UseCaseInput`2.UseDefaultValidation(`0,CancellationToken)
  fullName: Aviant.DDD.Application.UseCases.UseCaseInput<TInput, TValidator>.UseDefaultValidation(TInput, CancellationToken)
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseInput(Of TInput, TValidator).UseDefaultValidation(TInput, CancellationToken)
  nameWithType: UseCaseInput<TInput, TValidator>.UseDefaultValidation(TInput, CancellationToken)
  nameWithType.vb: UseCaseInput(Of TInput, TValidator).UseDefaultValidation(TInput, CancellationToken)
- uid: Aviant.DDD.Application.UseCases.UseCaseInput`2.UseDefaultValidation*
  name: UseDefaultValidation
  href: api/Aviant.DDD.Application.UseCases.UseCaseInput-2.html#Aviant_DDD_Application_UseCases_UseCaseInput_2_UseDefaultValidation_
  commentId: Overload:Aviant.DDD.Application.UseCases.UseCaseInput`2.UseDefaultValidation
  isSpec: "True"
  fullName: Aviant.DDD.Application.UseCases.UseCaseInput<TInput, TValidator>.UseDefaultValidation
  fullName.vb: Aviant.DDD.Application.UseCases.UseCaseInput(Of TInput, TValidator).UseDefaultValidation
  nameWithType: UseCaseInput<TInput, TValidator>.UseDefaultValidation
  nameWithType.vb: UseCaseInput(Of TInput, TValidator).UseDefaultValidation
- uid: Aviant.DDD.Core.Aggregates
  name: Aviant.DDD.Core.Aggregates
  href: api/Aviant.DDD.Core.Aggregates.html
  commentId: N:Aviant.DDD.Core.Aggregates
  fullName: Aviant.DDD.Core.Aggregates
  nameWithType: Aviant.DDD.Core.Aggregates
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2
  name: Aggregate<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html
  commentId: T:Aviant.DDD.Core.Aggregates.Aggregate`2
  name.vb: Aggregate(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId)
  nameWithType: Aggregate<TAggregate, TAggregateId>
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.#ctor
  name: Aggregate()
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2__ctor
  commentId: M:Aviant.DDD.Core.Aggregates.Aggregate`2.#ctor
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Aggregate()
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Aggregate()
  nameWithType: Aggregate<TAggregate, TAggregateId>.Aggregate()
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Aggregate()
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.#ctor(`1)
  name: Aggregate(TAggregateId)
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2__ctor__1_
  commentId: M:Aviant.DDD.Core.Aggregates.Aggregate`2.#ctor(`1)
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Aggregate(TAggregateId)
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Aggregate(TAggregateId)
  nameWithType: Aggregate<TAggregate, TAggregateId>.Aggregate(TAggregateId)
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Aggregate(TAggregateId)
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.#ctor*
  name: Aggregate
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2__ctor_
  commentId: Overload:Aviant.DDD.Core.Aggregates.Aggregate`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Aggregate
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Aggregate
  nameWithType: Aggregate<TAggregate, TAggregateId>.Aggregate
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Aggregate
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.AddEvent(Aviant.DDD.Core.DomainEvents.IDomainEvent{`1})
  name: AddEvent(IDomainEvent<TAggregateId>)
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_AddEvent_Aviant_DDD_Core_DomainEvents_IDomainEvent__1__
  commentId: M:Aviant.DDD.Core.Aggregates.Aggregate`2.AddEvent(Aviant.DDD.Core.DomainEvents.IDomainEvent{`1})
  name.vb: AddEvent(IDomainEvent(Of TAggregateId))
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.AddEvent(Aviant.DDD.Core.DomainEvents.IDomainEvent<TAggregateId>)
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).AddEvent(Aviant.DDD.Core.DomainEvents.IDomainEvent(Of TAggregateId))
  nameWithType: Aggregate<TAggregate, TAggregateId>.AddEvent(IDomainEvent<TAggregateId>)
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).AddEvent(IDomainEvent(Of TAggregateId))
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.AddEvent*
  name: AddEvent
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_AddEvent_
  commentId: Overload:Aviant.DDD.Core.Aggregates.Aggregate`2.AddEvent
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.AddEvent
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).AddEvent
  nameWithType: Aggregate<TAggregate, TAggregateId>.AddEvent
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).AddEvent
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.Apply(Aviant.DDD.Core.DomainEvents.IDomainEvent{`1})
  name: Apply(IDomainEvent<TAggregateId>)
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_Apply_Aviant_DDD_Core_DomainEvents_IDomainEvent__1__
  commentId: M:Aviant.DDD.Core.Aggregates.Aggregate`2.Apply(Aviant.DDD.Core.DomainEvents.IDomainEvent{`1})
  name.vb: Apply(IDomainEvent(Of TAggregateId))
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Apply(Aviant.DDD.Core.DomainEvents.IDomainEvent<TAggregateId>)
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Apply(Aviant.DDD.Core.DomainEvents.IDomainEvent(Of TAggregateId))
  nameWithType: Aggregate<TAggregate, TAggregateId>.Apply(IDomainEvent<TAggregateId>)
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Apply(IDomainEvent(Of TAggregateId))
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.Apply*
  name: Apply
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_Apply_
  commentId: Overload:Aviant.DDD.Core.Aggregates.Aggregate`2.Apply
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Apply
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Apply
  nameWithType: Aggregate<TAggregate, TAggregateId>.Apply
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Apply
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.ClearEvents
  name: ClearEvents()
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_ClearEvents
  commentId: M:Aviant.DDD.Core.Aggregates.Aggregate`2.ClearEvents
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.ClearEvents()
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).ClearEvents()
  nameWithType: Aggregate<TAggregate, TAggregateId>.ClearEvents()
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).ClearEvents()
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.ClearEvents*
  name: ClearEvents
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_ClearEvents_
  commentId: Overload:Aviant.DDD.Core.Aggregates.Aggregate`2.ClearEvents
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.ClearEvents
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).ClearEvents
  nameWithType: Aggregate<TAggregate, TAggregateId>.ClearEvents
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).ClearEvents
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.Create(IEnumerable{Aviant.DDD.Core.DomainEvents.IDomainEvent{`1}})
  name: Create(IEnumerable<IDomainEvent<TAggregateId>>)
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_Create_IEnumerable_Aviant_DDD_Core_DomainEvents_IDomainEvent__1___
  commentId: M:Aviant.DDD.Core.Aggregates.Aggregate`2.Create(IEnumerable{Aviant.DDD.Core.DomainEvents.IDomainEvent{`1}})
  name.vb: Create(IEnumerable(Of IDomainEvent(Of TAggregateId)))
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Create(IEnumerable<Aviant.DDD.Core.DomainEvents.IDomainEvent<TAggregateId>>)
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Create(IEnumerable(Of Aviant.DDD.Core.DomainEvents.IDomainEvent(Of TAggregateId)))
  nameWithType: Aggregate<TAggregate, TAggregateId>.Create(IEnumerable<IDomainEvent<TAggregateId>>)
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Create(IEnumerable(Of IDomainEvent(Of TAggregateId)))
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.Create*
  name: Create
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_Create_
  commentId: Overload:Aviant.DDD.Core.Aggregates.Aggregate`2.Create
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Create
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Create
  nameWithType: Aggregate<TAggregate, TAggregateId>.Create
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Create
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.Events
  name: Events
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_Events
  commentId: P:Aviant.DDD.Core.Aggregates.Aggregate`2.Events
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Events
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Events
  nameWithType: Aggregate<TAggregate, TAggregateId>.Events
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Events
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.Events*
  name: Events
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_Events_
  commentId: Overload:Aviant.DDD.Core.Aggregates.Aggregate`2.Events
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Events
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Events
  nameWithType: Aggregate<TAggregate, TAggregateId>.Events
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Events
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.Version
  name: Version
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_Version
  commentId: P:Aviant.DDD.Core.Aggregates.Aggregate`2.Version
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Version
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Version
  nameWithType: Aggregate<TAggregate, TAggregateId>.Version
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Version
- uid: Aviant.DDD.Core.Aggregates.Aggregate`2.Version*
  name: Version
  href: api/Aviant.DDD.Core.Aggregates.Aggregate-2.html#Aviant_DDD_Core_Aggregates_Aggregate_2_Version_
  commentId: Overload:Aviant.DDD.Core.Aggregates.Aggregate`2.Version
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.Aggregate<TAggregate, TAggregateId>.Version
  fullName.vb: Aviant.DDD.Core.Aggregates.Aggregate(Of TAggregate, TAggregateId).Version
  nameWithType: Aggregate<TAggregate, TAggregateId>.Version
  nameWithType.vb: Aggregate(Of TAggregate, TAggregateId).Version
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1
  name: AggregateId<TKey>
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html
  commentId: T:Aviant.DDD.Core.Aggregates.AggregateId`1
  name.vb: AggregateId(Of TKey)
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey)
  nameWithType: AggregateId<TKey>
  nameWithType.vb: AggregateId(Of TKey)
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1.#ctor(`0)
  name: AggregateId(TKey)
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html#Aviant_DDD_Core_Aggregates_AggregateId_1__ctor__0_
  commentId: M:Aviant.DDD.Core.Aggregates.AggregateId`1.#ctor(`0)
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>.AggregateId(TKey)
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey).AggregateId(TKey)
  nameWithType: AggregateId<TKey>.AggregateId(TKey)
  nameWithType.vb: AggregateId(Of TKey).AggregateId(TKey)
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1.#ctor*
  name: AggregateId
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html#Aviant_DDD_Core_Aggregates_AggregateId_1__ctor_
  commentId: Overload:Aviant.DDD.Core.Aggregates.AggregateId`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>.AggregateId
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey).AggregateId
  nameWithType: AggregateId<TKey>.AggregateId
  nameWithType.vb: AggregateId(Of TKey).AggregateId
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1.Key
  name: Key
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html#Aviant_DDD_Core_Aggregates_AggregateId_1_Key
  commentId: P:Aviant.DDD.Core.Aggregates.AggregateId`1.Key
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>.Key
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey).Key
  nameWithType: AggregateId<TKey>.Key
  nameWithType.vb: AggregateId(Of TKey).Key
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1.Key*
  name: Key
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html#Aviant_DDD_Core_Aggregates_AggregateId_1_Key_
  commentId: Overload:Aviant.DDD.Core.Aggregates.AggregateId`1.Key
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>.Key
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey).Key
  nameWithType: AggregateId<TKey>.Key
  nameWithType.vb: AggregateId(Of TKey).Key
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1.Serialize
  name: Serialize()
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html#Aviant_DDD_Core_Aggregates_AggregateId_1_Serialize
  commentId: M:Aviant.DDD.Core.Aggregates.AggregateId`1.Serialize
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>.Serialize()
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey).Serialize()
  nameWithType: AggregateId<TKey>.Serialize()
  nameWithType.vb: AggregateId(Of TKey).Serialize()
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1.Serialize*
  name: Serialize
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html#Aviant_DDD_Core_Aggregates_AggregateId_1_Serialize_
  commentId: Overload:Aviant.DDD.Core.Aggregates.AggregateId`1.Serialize
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>.Serialize
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey).Serialize
  nameWithType: AggregateId<TKey>.Serialize
  nameWithType.vb: AggregateId(Of TKey).Serialize
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1.ToString
  name: ToString()
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html#Aviant_DDD_Core_Aggregates_AggregateId_1_ToString
  commentId: M:Aviant.DDD.Core.Aggregates.AggregateId`1.ToString
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>.ToString()
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey).ToString()
  nameWithType: AggregateId<TKey>.ToString()
  nameWithType.vb: AggregateId(Of TKey).ToString()
- uid: Aviant.DDD.Core.Aggregates.AggregateId`1.ToString*
  name: ToString
  href: api/Aviant.DDD.Core.Aggregates.AggregateId-1.html#Aviant_DDD_Core_Aggregates_AggregateId_1_ToString_
  commentId: Overload:Aviant.DDD.Core.Aggregates.AggregateId`1.ToString
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.AggregateId<TKey>.ToString
  fullName.vb: Aviant.DDD.Core.Aggregates.AggregateId(Of TKey).ToString
  nameWithType: AggregateId<TKey>.ToString
  nameWithType.vb: AggregateId(Of TKey).ToString
- uid: Aviant.DDD.Core.Aggregates.IAggregate`1
  name: IAggregate<TAggregateId>
  href: api/Aviant.DDD.Core.Aggregates.IAggregate-1.html
  commentId: T:Aviant.DDD.Core.Aggregates.IAggregate`1
  name.vb: IAggregate(Of TAggregateId)
  fullName: Aviant.DDD.Core.Aggregates.IAggregate<TAggregateId>
  fullName.vb: Aviant.DDD.Core.Aggregates.IAggregate(Of TAggregateId)
  nameWithType: IAggregate<TAggregateId>
  nameWithType.vb: IAggregate(Of TAggregateId)
- uid: Aviant.DDD.Core.Aggregates.IAggregate`1.ClearEvents
  name: ClearEvents()
  href: api/Aviant.DDD.Core.Aggregates.IAggregate-1.html#Aviant_DDD_Core_Aggregates_IAggregate_1_ClearEvents
  commentId: M:Aviant.DDD.Core.Aggregates.IAggregate`1.ClearEvents
  fullName: Aviant.DDD.Core.Aggregates.IAggregate<TAggregateId>.ClearEvents()
  fullName.vb: Aviant.DDD.Core.Aggregates.IAggregate(Of TAggregateId).ClearEvents()
  nameWithType: IAggregate<TAggregateId>.ClearEvents()
  nameWithType.vb: IAggregate(Of TAggregateId).ClearEvents()
- uid: Aviant.DDD.Core.Aggregates.IAggregate`1.ClearEvents*
  name: ClearEvents
  href: api/Aviant.DDD.Core.Aggregates.IAggregate-1.html#Aviant_DDD_Core_Aggregates_IAggregate_1_ClearEvents_
  commentId: Overload:Aviant.DDD.Core.Aggregates.IAggregate`1.ClearEvents
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.IAggregate<TAggregateId>.ClearEvents
  fullName.vb: Aviant.DDD.Core.Aggregates.IAggregate(Of TAggregateId).ClearEvents
  nameWithType: IAggregate<TAggregateId>.ClearEvents
  nameWithType.vb: IAggregate(Of TAggregateId).ClearEvents
- uid: Aviant.DDD.Core.Aggregates.IAggregate`1.Events
  name: Events
  href: api/Aviant.DDD.Core.Aggregates.IAggregate-1.html#Aviant_DDD_Core_Aggregates_IAggregate_1_Events
  commentId: P:Aviant.DDD.Core.Aggregates.IAggregate`1.Events
  fullName: Aviant.DDD.Core.Aggregates.IAggregate<TAggregateId>.Events
  fullName.vb: Aviant.DDD.Core.Aggregates.IAggregate(Of TAggregateId).Events
  nameWithType: IAggregate<TAggregateId>.Events
  nameWithType.vb: IAggregate(Of TAggregateId).Events
- uid: Aviant.DDD.Core.Aggregates.IAggregate`1.Events*
  name: Events
  href: api/Aviant.DDD.Core.Aggregates.IAggregate-1.html#Aviant_DDD_Core_Aggregates_IAggregate_1_Events_
  commentId: Overload:Aviant.DDD.Core.Aggregates.IAggregate`1.Events
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.IAggregate<TAggregateId>.Events
  fullName.vb: Aviant.DDD.Core.Aggregates.IAggregate(Of TAggregateId).Events
  nameWithType: IAggregate<TAggregateId>.Events
  nameWithType.vb: IAggregate(Of TAggregateId).Events
- uid: Aviant.DDD.Core.Aggregates.IAggregate`1.Version
  name: Version
  href: api/Aviant.DDD.Core.Aggregates.IAggregate-1.html#Aviant_DDD_Core_Aggregates_IAggregate_1_Version
  commentId: P:Aviant.DDD.Core.Aggregates.IAggregate`1.Version
  fullName: Aviant.DDD.Core.Aggregates.IAggregate<TAggregateId>.Version
  fullName.vb: Aviant.DDD.Core.Aggregates.IAggregate(Of TAggregateId).Version
  nameWithType: IAggregate<TAggregateId>.Version
  nameWithType.vb: IAggregate(Of TAggregateId).Version
- uid: Aviant.DDD.Core.Aggregates.IAggregate`1.Version*
  name: Version
  href: api/Aviant.DDD.Core.Aggregates.IAggregate-1.html#Aviant_DDD_Core_Aggregates_IAggregate_1_Version_
  commentId: Overload:Aviant.DDD.Core.Aggregates.IAggregate`1.Version
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.IAggregate<TAggregateId>.Version
  fullName.vb: Aviant.DDD.Core.Aggregates.IAggregate(Of TAggregateId).Version
  nameWithType: IAggregate<TAggregateId>.Version
  nameWithType.vb: IAggregate(Of TAggregateId).Version
- uid: Aviant.DDD.Core.Aggregates.IAggregateId
  name: IAggregateId
  href: api/Aviant.DDD.Core.Aggregates.IAggregateId.html
  commentId: T:Aviant.DDD.Core.Aggregates.IAggregateId
  fullName: Aviant.DDD.Core.Aggregates.IAggregateId
  nameWithType: IAggregateId
- uid: Aviant.DDD.Core.Aggregates.IAggregateId.Serialize
  name: Serialize()
  href: api/Aviant.DDD.Core.Aggregates.IAggregateId.html#Aviant_DDD_Core_Aggregates_IAggregateId_Serialize
  commentId: M:Aviant.DDD.Core.Aggregates.IAggregateId.Serialize
  fullName: Aviant.DDD.Core.Aggregates.IAggregateId.Serialize()
  nameWithType: IAggregateId.Serialize()
- uid: Aviant.DDD.Core.Aggregates.IAggregateId.Serialize*
  name: Serialize
  href: api/Aviant.DDD.Core.Aggregates.IAggregateId.html#Aviant_DDD_Core_Aggregates_IAggregateId_Serialize_
  commentId: Overload:Aviant.DDD.Core.Aggregates.IAggregateId.Serialize
  isSpec: "True"
  fullName: Aviant.DDD.Core.Aggregates.IAggregateId.Serialize
  nameWithType: IAggregateId.Serialize
- uid: Aviant.DDD.Core.DomainEvents
  name: Aviant.DDD.Core.DomainEvents
  href: api/Aviant.DDD.Core.DomainEvents.html
  commentId: N:Aviant.DDD.Core.DomainEvents
  fullName: Aviant.DDD.Core.DomainEvents
  nameWithType: Aviant.DDD.Core.DomainEvents
- uid: Aviant.DDD.Core.DomainEvents.DomainEvent`2
  name: DomainEvent<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html
  commentId: T:Aviant.DDD.Core.DomainEvents.DomainEvent`2
  name.vb: DomainEvent(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Core.DomainEvents.DomainEvent<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEvent(Of TAggregate, TAggregateId)
  nameWithType: DomainEvent<TAggregate, TAggregateId>
  nameWithType.vb: DomainEvent(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Core.DomainEvents.DomainEvent`2.#ctor
  name: DomainEvent()
  href: api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html#Aviant_DDD_Core_DomainEvents_DomainEvent_2__ctor
  commentId: M:Aviant.DDD.Core.DomainEvents.DomainEvent`2.#ctor
  fullName: Aviant.DDD.Core.DomainEvents.DomainEvent<TAggregate, TAggregateId>.DomainEvent()
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEvent(Of TAggregate, TAggregateId).DomainEvent()
  nameWithType: DomainEvent<TAggregate, TAggregateId>.DomainEvent()
  nameWithType.vb: DomainEvent(Of TAggregate, TAggregateId).DomainEvent()
- uid: Aviant.DDD.Core.DomainEvents.DomainEvent`2.#ctor(`0)
  name: DomainEvent(TAggregate)
  href: api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html#Aviant_DDD_Core_DomainEvents_DomainEvent_2__ctor__0_
  commentId: M:Aviant.DDD.Core.DomainEvents.DomainEvent`2.#ctor(`0)
  fullName: Aviant.DDD.Core.DomainEvents.DomainEvent<TAggregate, TAggregateId>.DomainEvent(TAggregate)
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEvent(Of TAggregate, TAggregateId).DomainEvent(TAggregate)
  nameWithType: DomainEvent<TAggregate, TAggregateId>.DomainEvent(TAggregate)
  nameWithType.vb: DomainEvent(Of TAggregate, TAggregateId).DomainEvent(TAggregate)
- uid: Aviant.DDD.Core.DomainEvents.DomainEvent`2.#ctor*
  name: DomainEvent
  href: api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html#Aviant_DDD_Core_DomainEvents_DomainEvent_2__ctor_
  commentId: Overload:Aviant.DDD.Core.DomainEvents.DomainEvent`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Core.DomainEvents.DomainEvent<TAggregate, TAggregateId>.DomainEvent
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEvent(Of TAggregate, TAggregateId).DomainEvent
  nameWithType: DomainEvent<TAggregate, TAggregateId>.DomainEvent
  nameWithType.vb: DomainEvent(Of TAggregate, TAggregateId).DomainEvent
- uid: Aviant.DDD.Core.DomainEvents.DomainEvent`2.AggregateId
  name: AggregateId
  href: api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html#Aviant_DDD_Core_DomainEvents_DomainEvent_2_AggregateId
  commentId: P:Aviant.DDD.Core.DomainEvents.DomainEvent`2.AggregateId
  fullName: Aviant.DDD.Core.DomainEvents.DomainEvent<TAggregate, TAggregateId>.AggregateId
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEvent(Of TAggregate, TAggregateId).AggregateId
  nameWithType: DomainEvent<TAggregate, TAggregateId>.AggregateId
  nameWithType.vb: DomainEvent(Of TAggregate, TAggregateId).AggregateId
- uid: Aviant.DDD.Core.DomainEvents.DomainEvent`2.AggregateId*
  name: AggregateId
  href: api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html#Aviant_DDD_Core_DomainEvents_DomainEvent_2_AggregateId_
  commentId: Overload:Aviant.DDD.Core.DomainEvents.DomainEvent`2.AggregateId
  isSpec: "True"
  fullName: Aviant.DDD.Core.DomainEvents.DomainEvent<TAggregate, TAggregateId>.AggregateId
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEvent(Of TAggregate, TAggregateId).AggregateId
  nameWithType: DomainEvent<TAggregate, TAggregateId>.AggregateId
  nameWithType.vb: DomainEvent(Of TAggregate, TAggregateId).AggregateId
- uid: Aviant.DDD.Core.DomainEvents.DomainEvent`2.AggregateVersion
  name: AggregateVersion
  href: api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html#Aviant_DDD_Core_DomainEvents_DomainEvent_2_AggregateVersion
  commentId: P:Aviant.DDD.Core.DomainEvents.DomainEvent`2.AggregateVersion
  fullName: Aviant.DDD.Core.DomainEvents.DomainEvent<TAggregate, TAggregateId>.AggregateVersion
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEvent(Of TAggregate, TAggregateId).AggregateVersion
  nameWithType: DomainEvent<TAggregate, TAggregateId>.AggregateVersion
  nameWithType.vb: DomainEvent(Of TAggregate, TAggregateId).AggregateVersion
- uid: Aviant.DDD.Core.DomainEvents.DomainEvent`2.AggregateVersion*
  name: AggregateVersion
  href: api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html#Aviant_DDD_Core_DomainEvents_DomainEvent_2_AggregateVersion_
  commentId: Overload:Aviant.DDD.Core.DomainEvents.DomainEvent`2.AggregateVersion
  isSpec: "True"
  fullName: Aviant.DDD.Core.DomainEvents.DomainEvent<TAggregate, TAggregateId>.AggregateVersion
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEvent(Of TAggregate, TAggregateId).AggregateVersion
  nameWithType: DomainEvent<TAggregate, TAggregateId>.AggregateVersion
  nameWithType.vb: DomainEvent(Of TAggregate, TAggregateId).AggregateVersion
- uid: Aviant.DDD.Core.DomainEvents.DomainEventHandler`1
  name: DomainEventHandler<TDomainEvent>
  href: api/Aviant.DDD.Core.DomainEvents.DomainEventHandler-1.html
  commentId: T:Aviant.DDD.Core.DomainEvents.DomainEventHandler`1
  name.vb: DomainEventHandler(Of TDomainEvent)
  fullName: Aviant.DDD.Core.DomainEvents.DomainEventHandler<TDomainEvent>
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEventHandler(Of TDomainEvent)
  nameWithType: DomainEventHandler<TDomainEvent>
  nameWithType.vb: DomainEventHandler(Of TDomainEvent)
- uid: Aviant.DDD.Core.DomainEvents.DomainEventHandler`1.Handle(Aviant.DDD.Core.EventBus.EventReceived{`0},CancellationToken)
  name: Handle(EventReceived<TDomainEvent>, CancellationToken)
  href: api/Aviant.DDD.Core.DomainEvents.DomainEventHandler-1.html#Aviant_DDD_Core_DomainEvents_DomainEventHandler_1_Handle_Aviant_DDD_Core_EventBus_EventReceived__0__CancellationToken_
  commentId: M:Aviant.DDD.Core.DomainEvents.DomainEventHandler`1.Handle(Aviant.DDD.Core.EventBus.EventReceived{`0},CancellationToken)
  name.vb: Handle(EventReceived(Of TDomainEvent), CancellationToken)
  fullName: Aviant.DDD.Core.DomainEvents.DomainEventHandler<TDomainEvent>.Handle(Aviant.DDD.Core.EventBus.EventReceived<TDomainEvent>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEventHandler(Of TDomainEvent).Handle(Aviant.DDD.Core.EventBus.EventReceived(Of TDomainEvent), CancellationToken)
  nameWithType: DomainEventHandler<TDomainEvent>.Handle(EventReceived<TDomainEvent>, CancellationToken)
  nameWithType.vb: DomainEventHandler(Of TDomainEvent).Handle(EventReceived(Of TDomainEvent), CancellationToken)
- uid: Aviant.DDD.Core.DomainEvents.DomainEventHandler`1.Handle*
  name: Handle
  href: api/Aviant.DDD.Core.DomainEvents.DomainEventHandler-1.html#Aviant_DDD_Core_DomainEvents_DomainEventHandler_1_Handle_
  commentId: Overload:Aviant.DDD.Core.DomainEvents.DomainEventHandler`1.Handle
  isSpec: "True"
  fullName: Aviant.DDD.Core.DomainEvents.DomainEventHandler<TDomainEvent>.Handle
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEventHandler(Of TDomainEvent).Handle
  nameWithType: DomainEventHandler<TDomainEvent>.Handle
  nameWithType.vb: DomainEventHandler(Of TDomainEvent).Handle
- uid: Aviant.DDD.Core.DomainEvents.DomainEventHandler`1.RetryPolicy
  name: RetryPolicy()
  href: api/Aviant.DDD.Core.DomainEvents.DomainEventHandler-1.html#Aviant_DDD_Core_DomainEvents_DomainEventHandler_1_RetryPolicy
  commentId: M:Aviant.DDD.Core.DomainEvents.DomainEventHandler`1.RetryPolicy
  fullName: Aviant.DDD.Core.DomainEvents.DomainEventHandler<TDomainEvent>.RetryPolicy()
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEventHandler(Of TDomainEvent).RetryPolicy()
  nameWithType: DomainEventHandler<TDomainEvent>.RetryPolicy()
  nameWithType.vb: DomainEventHandler(Of TDomainEvent).RetryPolicy()
- uid: Aviant.DDD.Core.DomainEvents.DomainEventHandler`1.RetryPolicy*
  name: RetryPolicy
  href: api/Aviant.DDD.Core.DomainEvents.DomainEventHandler-1.html#Aviant_DDD_Core_DomainEvents_DomainEventHandler_1_RetryPolicy_
  commentId: Overload:Aviant.DDD.Core.DomainEvents.DomainEventHandler`1.RetryPolicy
  isSpec: "True"
  fullName: Aviant.DDD.Core.DomainEvents.DomainEventHandler<TDomainEvent>.RetryPolicy
  fullName.vb: Aviant.DDD.Core.DomainEvents.DomainEventHandler(Of TDomainEvent).RetryPolicy
  nameWithType: DomainEventHandler<TDomainEvent>.RetryPolicy
  nameWithType.vb: DomainEventHandler(Of TDomainEvent).RetryPolicy
- uid: Aviant.DDD.Core.DomainEvents.IDomainEvent`1
  name: IDomainEvent<TAggregateId>
  href: api/Aviant.DDD.Core.DomainEvents.IDomainEvent-1.html
  commentId: T:Aviant.DDD.Core.DomainEvents.IDomainEvent`1
  name.vb: IDomainEvent(Of TAggregateId)
  fullName: Aviant.DDD.Core.DomainEvents.IDomainEvent<TAggregateId>
  fullName.vb: Aviant.DDD.Core.DomainEvents.IDomainEvent(Of TAggregateId)
  nameWithType: IDomainEvent<TAggregateId>
  nameWithType.vb: IDomainEvent(Of TAggregateId)
- uid: Aviant.DDD.Core.DomainEvents.IDomainEvent`1.AggregateId
  name: AggregateId
  href: api/Aviant.DDD.Core.DomainEvents.IDomainEvent-1.html#Aviant_DDD_Core_DomainEvents_IDomainEvent_1_AggregateId
  commentId: P:Aviant.DDD.Core.DomainEvents.IDomainEvent`1.AggregateId
  fullName: Aviant.DDD.Core.DomainEvents.IDomainEvent<TAggregateId>.AggregateId
  fullName.vb: Aviant.DDD.Core.DomainEvents.IDomainEvent(Of TAggregateId).AggregateId
  nameWithType: IDomainEvent<TAggregateId>.AggregateId
  nameWithType.vb: IDomainEvent(Of TAggregateId).AggregateId
- uid: Aviant.DDD.Core.DomainEvents.IDomainEvent`1.AggregateId*
  name: AggregateId
  href: api/Aviant.DDD.Core.DomainEvents.IDomainEvent-1.html#Aviant_DDD_Core_DomainEvents_IDomainEvent_1_AggregateId_
  commentId: Overload:Aviant.DDD.Core.DomainEvents.IDomainEvent`1.AggregateId
  isSpec: "True"
  fullName: Aviant.DDD.Core.DomainEvents.IDomainEvent<TAggregateId>.AggregateId
  fullName.vb: Aviant.DDD.Core.DomainEvents.IDomainEvent(Of TAggregateId).AggregateId
  nameWithType: IDomainEvent<TAggregateId>.AggregateId
  nameWithType.vb: IDomainEvent(Of TAggregateId).AggregateId
- uid: Aviant.DDD.Core.DomainEvents.IDomainEvent`1.AggregateVersion
  name: AggregateVersion
  href: api/Aviant.DDD.Core.DomainEvents.IDomainEvent-1.html#Aviant_DDD_Core_DomainEvents_IDomainEvent_1_AggregateVersion
  commentId: P:Aviant.DDD.Core.DomainEvents.IDomainEvent`1.AggregateVersion
  fullName: Aviant.DDD.Core.DomainEvents.IDomainEvent<TAggregateId>.AggregateVersion
  fullName.vb: Aviant.DDD.Core.DomainEvents.IDomainEvent(Of TAggregateId).AggregateVersion
  nameWithType: IDomainEvent<TAggregateId>.AggregateVersion
  nameWithType.vb: IDomainEvent(Of TAggregateId).AggregateVersion
- uid: Aviant.DDD.Core.DomainEvents.IDomainEvent`1.AggregateVersion*
  name: AggregateVersion
  href: api/Aviant.DDD.Core.DomainEvents.IDomainEvent-1.html#Aviant_DDD_Core_DomainEvents_IDomainEvent_1_AggregateVersion_
  commentId: Overload:Aviant.DDD.Core.DomainEvents.IDomainEvent`1.AggregateVersion
  isSpec: "True"
  fullName: Aviant.DDD.Core.DomainEvents.IDomainEvent<TAggregateId>.AggregateVersion
  fullName.vb: Aviant.DDD.Core.DomainEvents.IDomainEvent(Of TAggregateId).AggregateVersion
  nameWithType: IDomainEvent<TAggregateId>.AggregateVersion
  nameWithType.vb: IDomainEvent(Of TAggregateId).AggregateVersion
- uid: Aviant.DDD.Core.Entities
  name: Aviant.DDD.Core.Entities
  href: api/Aviant.DDD.Core.Entities.html
  commentId: N:Aviant.DDD.Core.Entities
  fullName: Aviant.DDD.Core.Entities
  nameWithType: Aviant.DDD.Core.Entities
- uid: Aviant.DDD.Core.Entities.Entity`1
  name: Entity<TKey>
  href: api/Aviant.DDD.Core.Entities.Entity-1.html
  commentId: T:Aviant.DDD.Core.Entities.Entity`1
  name.vb: Entity(Of TKey)
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey)
  nameWithType: Entity<TKey>
  nameWithType.vb: Entity(Of TKey)
- uid: Aviant.DDD.Core.Entities.Entity`1.#ctor
  name: Entity()
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1__ctor
  commentId: M:Aviant.DDD.Core.Entities.Entity`1.#ctor
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Entity()
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Entity()
  nameWithType: Entity<TKey>.Entity()
  nameWithType.vb: Entity(Of TKey).Entity()
- uid: Aviant.DDD.Core.Entities.Entity`1.#ctor(`0)
  name: Entity(TKey)
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1__ctor__0_
  commentId: M:Aviant.DDD.Core.Entities.Entity`1.#ctor(`0)
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Entity(TKey)
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Entity(TKey)
  nameWithType: Entity<TKey>.Entity(TKey)
  nameWithType.vb: Entity(Of TKey).Entity(TKey)
- uid: Aviant.DDD.Core.Entities.Entity`1.#ctor*
  name: Entity
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1__ctor_
  commentId: Overload:Aviant.DDD.Core.Entities.Entity`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Entity
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Entity
  nameWithType: Entity<TKey>.Entity
  nameWithType.vb: Entity(Of TKey).Entity
- uid: Aviant.DDD.Core.Entities.Entity`1.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_Equals_System_Nullable_System_Object__
  commentId: M:Aviant.DDD.Core.Entities.Entity`1.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Equals(System.Nullable<System.Object>)
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Equals(System.Nullable(Of System.Object))
  nameWithType: Entity<TKey>.Equals(Nullable<Object>)
  nameWithType.vb: Entity(Of TKey).Equals(Nullable(Of Object))
- uid: Aviant.DDD.Core.Entities.Entity`1.Equals*
  name: Equals
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_Equals_
  commentId: Overload:Aviant.DDD.Core.Entities.Entity`1.Equals
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Equals
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Equals
  nameWithType: Entity<TKey>.Equals
  nameWithType.vb: Entity(Of TKey).Equals
- uid: Aviant.DDD.Core.Entities.Entity`1.GetHashCode
  name: GetHashCode()
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_GetHashCode
  commentId: M:Aviant.DDD.Core.Entities.Entity`1.GetHashCode
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.GetHashCode()
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).GetHashCode()
  nameWithType: Entity<TKey>.GetHashCode()
  nameWithType.vb: Entity(Of TKey).GetHashCode()
- uid: Aviant.DDD.Core.Entities.Entity`1.GetHashCode*
  name: GetHashCode
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_GetHashCode_
  commentId: Overload:Aviant.DDD.Core.Entities.Entity`1.GetHashCode
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.GetHashCode
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).GetHashCode
  nameWithType: Entity<TKey>.GetHashCode
  nameWithType.vb: Entity(Of TKey).GetHashCode
- uid: Aviant.DDD.Core.Entities.Entity`1.Id
  name: Id
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_Id
  commentId: P:Aviant.DDD.Core.Entities.Entity`1.Id
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Id
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Id
  nameWithType: Entity<TKey>.Id
  nameWithType.vb: Entity(Of TKey).Id
- uid: Aviant.DDD.Core.Entities.Entity`1.Id*
  name: Id
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_Id_
  commentId: Overload:Aviant.DDD.Core.Entities.Entity`1.Id
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Id
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Id
  nameWithType: Entity<TKey>.Id
  nameWithType.vb: Entity(Of TKey).Id
- uid: Aviant.DDD.Core.Entities.Entity`1.IsTransient
  name: IsTransient()
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_IsTransient
  commentId: M:Aviant.DDD.Core.Entities.Entity`1.IsTransient
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.IsTransient()
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).IsTransient()
  nameWithType: Entity<TKey>.IsTransient()
  nameWithType.vb: Entity(Of TKey).IsTransient()
- uid: Aviant.DDD.Core.Entities.Entity`1.IsTransient*
  name: IsTransient
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_IsTransient_
  commentId: Overload:Aviant.DDD.Core.Entities.Entity`1.IsTransient
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.IsTransient
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).IsTransient
  nameWithType: Entity<TKey>.IsTransient
  nameWithType.vb: Entity(Of TKey).IsTransient
- uid: Aviant.DDD.Core.Entities.Entity`1.op_Equality(Aviant.DDD.Core.Entities.Entity{`0},Aviant.DDD.Core.Entities.Entity{`0})
  name: Equality(Entity<TKey>, Entity<TKey>)
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_op_Equality_Aviant_DDD_Core_Entities_Entity__0__Aviant_DDD_Core_Entities_Entity__0__
  commentId: M:Aviant.DDD.Core.Entities.Entity`1.op_Equality(Aviant.DDD.Core.Entities.Entity{`0},Aviant.DDD.Core.Entities.Entity{`0})
  name.vb: Equality(Entity(Of TKey), Entity(Of TKey))
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Equality(Aviant.DDD.Core.Entities.Entity<TKey>, Aviant.DDD.Core.Entities.Entity<TKey>)
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Equality(Aviant.DDD.Core.Entities.Entity(Of TKey), Aviant.DDD.Core.Entities.Entity(Of TKey))
  nameWithType: Entity<TKey>.Equality(Entity<TKey>, Entity<TKey>)
  nameWithType.vb: Entity(Of TKey).Equality(Entity(Of TKey), Entity(Of TKey))
- uid: Aviant.DDD.Core.Entities.Entity`1.op_Equality*
  name: Equality
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_op_Equality_
  commentId: Overload:Aviant.DDD.Core.Entities.Entity`1.op_Equality
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Equality
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Equality
  nameWithType: Entity<TKey>.Equality
  nameWithType.vb: Entity(Of TKey).Equality
- uid: Aviant.DDD.Core.Entities.Entity`1.op_Inequality(Aviant.DDD.Core.Entities.Entity{`0},Aviant.DDD.Core.Entities.Entity{`0})
  name: Inequality(Entity<TKey>, Entity<TKey>)
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_op_Inequality_Aviant_DDD_Core_Entities_Entity__0__Aviant_DDD_Core_Entities_Entity__0__
  commentId: M:Aviant.DDD.Core.Entities.Entity`1.op_Inequality(Aviant.DDD.Core.Entities.Entity{`0},Aviant.DDD.Core.Entities.Entity{`0})
  name.vb: Inequality(Entity(Of TKey), Entity(Of TKey))
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Inequality(Aviant.DDD.Core.Entities.Entity<TKey>, Aviant.DDD.Core.Entities.Entity<TKey>)
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Inequality(Aviant.DDD.Core.Entities.Entity(Of TKey), Aviant.DDD.Core.Entities.Entity(Of TKey))
  nameWithType: Entity<TKey>.Inequality(Entity<TKey>, Entity<TKey>)
  nameWithType.vb: Entity(Of TKey).Inequality(Entity(Of TKey), Entity(Of TKey))
- uid: Aviant.DDD.Core.Entities.Entity`1.op_Inequality*
  name: Inequality
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_op_Inequality_
  commentId: Overload:Aviant.DDD.Core.Entities.Entity`1.op_Inequality
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.Inequality
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).Inequality
  nameWithType: Entity<TKey>.Inequality
  nameWithType.vb: Entity(Of TKey).Inequality
- uid: Aviant.DDD.Core.Entities.Entity`1.ValidateAsync(CancellationToken)
  name: ValidateAsync(CancellationToken)
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_ValidateAsync_CancellationToken_
  commentId: M:Aviant.DDD.Core.Entities.Entity`1.ValidateAsync(CancellationToken)
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.ValidateAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).ValidateAsync(CancellationToken)
  nameWithType: Entity<TKey>.ValidateAsync(CancellationToken)
  nameWithType.vb: Entity(Of TKey).ValidateAsync(CancellationToken)
- uid: Aviant.DDD.Core.Entities.Entity`1.ValidateAsync*
  name: ValidateAsync
  href: api/Aviant.DDD.Core.Entities.Entity-1.html#Aviant_DDD_Core_Entities_Entity_1_ValidateAsync_
  commentId: Overload:Aviant.DDD.Core.Entities.Entity`1.ValidateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.Entity<TKey>.ValidateAsync
  fullName.vb: Aviant.DDD.Core.Entities.Entity(Of TKey).ValidateAsync
  nameWithType: Entity<TKey>.ValidateAsync
  nameWithType.vb: Entity(Of TKey).ValidateAsync
- uid: Aviant.DDD.Core.Entities.IActivationAudited
  name: IActivationAudited
  href: api/Aviant.DDD.Core.Entities.IActivationAudited.html
  commentId: T:Aviant.DDD.Core.Entities.IActivationAudited
  fullName: Aviant.DDD.Core.Entities.IActivationAudited
  nameWithType: IActivationAudited
- uid: Aviant.DDD.Core.Entities.IActivationAudited.ActivationStatusModifiedBy
  name: ActivationStatusModifiedBy
  href: api/Aviant.DDD.Core.Entities.IActivationAudited.html#Aviant_DDD_Core_Entities_IActivationAudited_ActivationStatusModifiedBy
  commentId: P:Aviant.DDD.Core.Entities.IActivationAudited.ActivationStatusModifiedBy
  fullName: Aviant.DDD.Core.Entities.IActivationAudited.ActivationStatusModifiedBy
  nameWithType: IActivationAudited.ActivationStatusModifiedBy
- uid: Aviant.DDD.Core.Entities.IActivationAudited.ActivationStatusModifiedBy*
  name: ActivationStatusModifiedBy
  href: api/Aviant.DDD.Core.Entities.IActivationAudited.html#Aviant_DDD_Core_Entities_IActivationAudited_ActivationStatusModifiedBy_
  commentId: Overload:Aviant.DDD.Core.Entities.IActivationAudited.ActivationStatusModifiedBy
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IActivationAudited.ActivationStatusModifiedBy
  nameWithType: IActivationAudited.ActivationStatusModifiedBy
- uid: Aviant.DDD.Core.Entities.IAuditedEntity
  name: IAuditedEntity
  href: api/Aviant.DDD.Core.Entities.IAuditedEntity.html
  commentId: T:Aviant.DDD.Core.Entities.IAuditedEntity
  fullName: Aviant.DDD.Core.Entities.IAuditedEntity
  nameWithType: IAuditedEntity
- uid: Aviant.DDD.Core.Entities.ICreationAudited
  name: ICreationAudited
  href: api/Aviant.DDD.Core.Entities.ICreationAudited.html
  commentId: T:Aviant.DDD.Core.Entities.ICreationAudited
  fullName: Aviant.DDD.Core.Entities.ICreationAudited
  nameWithType: ICreationAudited
- uid: Aviant.DDD.Core.Entities.ICreationAudited.CreatedBy
  name: CreatedBy
  href: api/Aviant.DDD.Core.Entities.ICreationAudited.html#Aviant_DDD_Core_Entities_ICreationAudited_CreatedBy
  commentId: P:Aviant.DDD.Core.Entities.ICreationAudited.CreatedBy
  fullName: Aviant.DDD.Core.Entities.ICreationAudited.CreatedBy
  nameWithType: ICreationAudited.CreatedBy
- uid: Aviant.DDD.Core.Entities.ICreationAudited.CreatedBy*
  name: CreatedBy
  href: api/Aviant.DDD.Core.Entities.ICreationAudited.html#Aviant_DDD_Core_Entities_ICreationAudited_CreatedBy_
  commentId: Overload:Aviant.DDD.Core.Entities.ICreationAudited.CreatedBy
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.ICreationAudited.CreatedBy
  nameWithType: ICreationAudited.CreatedBy
- uid: Aviant.DDD.Core.Entities.IDeletionAudited
  name: IDeletionAudited
  href: api/Aviant.DDD.Core.Entities.IDeletionAudited.html
  commentId: T:Aviant.DDD.Core.Entities.IDeletionAudited
  fullName: Aviant.DDD.Core.Entities.IDeletionAudited
  nameWithType: IDeletionAudited
- uid: Aviant.DDD.Core.Entities.IDeletionAudited.DeletedBy
  name: DeletedBy
  href: api/Aviant.DDD.Core.Entities.IDeletionAudited.html#Aviant_DDD_Core_Entities_IDeletionAudited_DeletedBy
  commentId: P:Aviant.DDD.Core.Entities.IDeletionAudited.DeletedBy
  fullName: Aviant.DDD.Core.Entities.IDeletionAudited.DeletedBy
  nameWithType: IDeletionAudited.DeletedBy
- uid: Aviant.DDD.Core.Entities.IDeletionAudited.DeletedBy*
  name: DeletedBy
  href: api/Aviant.DDD.Core.Entities.IDeletionAudited.html#Aviant_DDD_Core_Entities_IDeletionAudited_DeletedBy_
  commentId: Overload:Aviant.DDD.Core.Entities.IDeletionAudited.DeletedBy
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IDeletionAudited.DeletedBy
  nameWithType: IDeletionAudited.DeletedBy
- uid: Aviant.DDD.Core.Entities.IEntity`1
  name: IEntity<TKey>
  href: api/Aviant.DDD.Core.Entities.IEntity-1.html
  commentId: T:Aviant.DDD.Core.Entities.IEntity`1
  name.vb: IEntity(Of TKey)
  fullName: Aviant.DDD.Core.Entities.IEntity<TKey>
  fullName.vb: Aviant.DDD.Core.Entities.IEntity(Of TKey)
  nameWithType: IEntity<TKey>
  nameWithType.vb: IEntity(Of TKey)
- uid: Aviant.DDD.Core.Entities.IEntity`1.Id
  name: Id
  href: api/Aviant.DDD.Core.Entities.IEntity-1.html#Aviant_DDD_Core_Entities_IEntity_1_Id
  commentId: P:Aviant.DDD.Core.Entities.IEntity`1.Id
  fullName: Aviant.DDD.Core.Entities.IEntity<TKey>.Id
  fullName.vb: Aviant.DDD.Core.Entities.IEntity(Of TKey).Id
  nameWithType: IEntity<TKey>.Id
  nameWithType.vb: IEntity(Of TKey).Id
- uid: Aviant.DDD.Core.Entities.IEntity`1.Id*
  name: Id
  href: api/Aviant.DDD.Core.Entities.IEntity-1.html#Aviant_DDD_Core_Entities_IEntity_1_Id_
  commentId: Overload:Aviant.DDD.Core.Entities.IEntity`1.Id
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IEntity<TKey>.Id
  fullName.vb: Aviant.DDD.Core.Entities.IEntity(Of TKey).Id
  nameWithType: IEntity<TKey>.Id
  nameWithType.vb: IEntity(Of TKey).Id
- uid: Aviant.DDD.Core.Entities.IEntity`1.IsTransient
  name: IsTransient()
  href: api/Aviant.DDD.Core.Entities.IEntity-1.html#Aviant_DDD_Core_Entities_IEntity_1_IsTransient
  commentId: M:Aviant.DDD.Core.Entities.IEntity`1.IsTransient
  fullName: Aviant.DDD.Core.Entities.IEntity<TKey>.IsTransient()
  fullName.vb: Aviant.DDD.Core.Entities.IEntity(Of TKey).IsTransient()
  nameWithType: IEntity<TKey>.IsTransient()
  nameWithType.vb: IEntity(Of TKey).IsTransient()
- uid: Aviant.DDD.Core.Entities.IEntity`1.IsTransient*
  name: IsTransient
  href: api/Aviant.DDD.Core.Entities.IEntity-1.html#Aviant_DDD_Core_Entities_IEntity_1_IsTransient_
  commentId: Overload:Aviant.DDD.Core.Entities.IEntity`1.IsTransient
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IEntity<TKey>.IsTransient
  fullName.vb: Aviant.DDD.Core.Entities.IEntity(Of TKey).IsTransient
  nameWithType: IEntity<TKey>.IsTransient
  nameWithType.vb: IEntity(Of TKey).IsTransient
- uid: Aviant.DDD.Core.Entities.IEntity`1.ValidateAsync(CancellationToken)
  name: ValidateAsync(CancellationToken)
  href: api/Aviant.DDD.Core.Entities.IEntity-1.html#Aviant_DDD_Core_Entities_IEntity_1_ValidateAsync_CancellationToken_
  commentId: M:Aviant.DDD.Core.Entities.IEntity`1.ValidateAsync(CancellationToken)
  fullName: Aviant.DDD.Core.Entities.IEntity<TKey>.ValidateAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Core.Entities.IEntity(Of TKey).ValidateAsync(CancellationToken)
  nameWithType: IEntity<TKey>.ValidateAsync(CancellationToken)
  nameWithType.vb: IEntity(Of TKey).ValidateAsync(CancellationToken)
- uid: Aviant.DDD.Core.Entities.IEntity`1.ValidateAsync*
  name: ValidateAsync
  href: api/Aviant.DDD.Core.Entities.IEntity-1.html#Aviant_DDD_Core_Entities_IEntity_1_ValidateAsync_
  commentId: Overload:Aviant.DDD.Core.Entities.IEntity`1.ValidateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IEntity<TKey>.ValidateAsync
  fullName.vb: Aviant.DDD.Core.Entities.IEntity(Of TKey).ValidateAsync
  nameWithType: IEntity<TKey>.ValidateAsync
  nameWithType.vb: IEntity(Of TKey).ValidateAsync
- uid: Aviant.DDD.Core.Entities.IHasActivationStatus
  name: IHasActivationStatus
  href: api/Aviant.DDD.Core.Entities.IHasActivationStatus.html
  commentId: T:Aviant.DDD.Core.Entities.IHasActivationStatus
  fullName: Aviant.DDD.Core.Entities.IHasActivationStatus
  nameWithType: IHasActivationStatus
- uid: Aviant.DDD.Core.Entities.IHasActivationStatus.IsActive
  name: IsActive
  href: api/Aviant.DDD.Core.Entities.IHasActivationStatus.html#Aviant_DDD_Core_Entities_IHasActivationStatus_IsActive
  commentId: P:Aviant.DDD.Core.Entities.IHasActivationStatus.IsActive
  fullName: Aviant.DDD.Core.Entities.IHasActivationStatus.IsActive
  nameWithType: IHasActivationStatus.IsActive
- uid: Aviant.DDD.Core.Entities.IHasActivationStatus.IsActive*
  name: IsActive
  href: api/Aviant.DDD.Core.Entities.IHasActivationStatus.html#Aviant_DDD_Core_Entities_IHasActivationStatus_IsActive_
  commentId: Overload:Aviant.DDD.Core.Entities.IHasActivationStatus.IsActive
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IHasActivationStatus.IsActive
  nameWithType: IHasActivationStatus.IsActive
- uid: Aviant.DDD.Core.Entities.IHasCreationTime
  name: IHasCreationTime
  href: api/Aviant.DDD.Core.Entities.IHasCreationTime.html
  commentId: T:Aviant.DDD.Core.Entities.IHasCreationTime
  fullName: Aviant.DDD.Core.Entities.IHasCreationTime
  nameWithType: IHasCreationTime
- uid: Aviant.DDD.Core.Entities.IHasCreationTime.Created
  name: Created
  href: api/Aviant.DDD.Core.Entities.IHasCreationTime.html#Aviant_DDD_Core_Entities_IHasCreationTime_Created
  commentId: P:Aviant.DDD.Core.Entities.IHasCreationTime.Created
  fullName: Aviant.DDD.Core.Entities.IHasCreationTime.Created
  nameWithType: IHasCreationTime.Created
- uid: Aviant.DDD.Core.Entities.IHasCreationTime.Created*
  name: Created
  href: api/Aviant.DDD.Core.Entities.IHasCreationTime.html#Aviant_DDD_Core_Entities_IHasCreationTime_Created_
  commentId: Overload:Aviant.DDD.Core.Entities.IHasCreationTime.Created
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IHasCreationTime.Created
  nameWithType: IHasCreationTime.Created
- uid: Aviant.DDD.Core.Entities.IHasDeletionTime
  name: IHasDeletionTime
  href: api/Aviant.DDD.Core.Entities.IHasDeletionTime.html
  commentId: T:Aviant.DDD.Core.Entities.IHasDeletionTime
  fullName: Aviant.DDD.Core.Entities.IHasDeletionTime
  nameWithType: IHasDeletionTime
- uid: Aviant.DDD.Core.Entities.IHasDeletionTime.Deleted
  name: Deleted
  href: api/Aviant.DDD.Core.Entities.IHasDeletionTime.html#Aviant_DDD_Core_Entities_IHasDeletionTime_Deleted
  commentId: P:Aviant.DDD.Core.Entities.IHasDeletionTime.Deleted
  fullName: Aviant.DDD.Core.Entities.IHasDeletionTime.Deleted
  nameWithType: IHasDeletionTime.Deleted
- uid: Aviant.DDD.Core.Entities.IHasDeletionTime.Deleted*
  name: Deleted
  href: api/Aviant.DDD.Core.Entities.IHasDeletionTime.html#Aviant_DDD_Core_Entities_IHasDeletionTime_Deleted_
  commentId: Overload:Aviant.DDD.Core.Entities.IHasDeletionTime.Deleted
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IHasDeletionTime.Deleted
  nameWithType: IHasDeletionTime.Deleted
- uid: Aviant.DDD.Core.Entities.IHasModificationTime
  name: IHasModificationTime
  href: api/Aviant.DDD.Core.Entities.IHasModificationTime.html
  commentId: T:Aviant.DDD.Core.Entities.IHasModificationTime
  fullName: Aviant.DDD.Core.Entities.IHasModificationTime
  nameWithType: IHasModificationTime
- uid: Aviant.DDD.Core.Entities.IHasModificationTime.LastModified
  name: LastModified
  href: api/Aviant.DDD.Core.Entities.IHasModificationTime.html#Aviant_DDD_Core_Entities_IHasModificationTime_LastModified
  commentId: P:Aviant.DDD.Core.Entities.IHasModificationTime.LastModified
  fullName: Aviant.DDD.Core.Entities.IHasModificationTime.LastModified
  nameWithType: IHasModificationTime.LastModified
- uid: Aviant.DDD.Core.Entities.IHasModificationTime.LastModified*
  name: LastModified
  href: api/Aviant.DDD.Core.Entities.IHasModificationTime.html#Aviant_DDD_Core_Entities_IHasModificationTime_LastModified_
  commentId: Overload:Aviant.DDD.Core.Entities.IHasModificationTime.LastModified
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IHasModificationTime.LastModified
  nameWithType: IHasModificationTime.LastModified
- uid: Aviant.DDD.Core.Entities.IModificationAudited
  name: IModificationAudited
  href: api/Aviant.DDD.Core.Entities.IModificationAudited.html
  commentId: T:Aviant.DDD.Core.Entities.IModificationAudited
  fullName: Aviant.DDD.Core.Entities.IModificationAudited
  nameWithType: IModificationAudited
- uid: Aviant.DDD.Core.Entities.IModificationAudited.LastModifiedBy
  name: LastModifiedBy
  href: api/Aviant.DDD.Core.Entities.IModificationAudited.html#Aviant_DDD_Core_Entities_IModificationAudited_LastModifiedBy
  commentId: P:Aviant.DDD.Core.Entities.IModificationAudited.LastModifiedBy
  fullName: Aviant.DDD.Core.Entities.IModificationAudited.LastModifiedBy
  nameWithType: IModificationAudited.LastModifiedBy
- uid: Aviant.DDD.Core.Entities.IModificationAudited.LastModifiedBy*
  name: LastModifiedBy
  href: api/Aviant.DDD.Core.Entities.IModificationAudited.html#Aviant_DDD_Core_Entities_IModificationAudited_LastModifiedBy_
  commentId: Overload:Aviant.DDD.Core.Entities.IModificationAudited.LastModifiedBy
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.IModificationAudited.LastModifiedBy
  nameWithType: IModificationAudited.LastModifiedBy
- uid: Aviant.DDD.Core.Entities.ISoftDelete
  name: ISoftDelete
  href: api/Aviant.DDD.Core.Entities.ISoftDelete.html
  commentId: T:Aviant.DDD.Core.Entities.ISoftDelete
  fullName: Aviant.DDD.Core.Entities.ISoftDelete
  nameWithType: ISoftDelete
- uid: Aviant.DDD.Core.Entities.ISoftDelete.IsDeleted
  name: IsDeleted
  href: api/Aviant.DDD.Core.Entities.ISoftDelete.html#Aviant_DDD_Core_Entities_ISoftDelete_IsDeleted
  commentId: P:Aviant.DDD.Core.Entities.ISoftDelete.IsDeleted
  fullName: Aviant.DDD.Core.Entities.ISoftDelete.IsDeleted
  nameWithType: ISoftDelete.IsDeleted
- uid: Aviant.DDD.Core.Entities.ISoftDelete.IsDeleted*
  name: IsDeleted
  href: api/Aviant.DDD.Core.Entities.ISoftDelete.html#Aviant_DDD_Core_Entities_ISoftDelete_IsDeleted_
  commentId: Overload:Aviant.DDD.Core.Entities.ISoftDelete.IsDeleted
  isSpec: "True"
  fullName: Aviant.DDD.Core.Entities.ISoftDelete.IsDeleted
  nameWithType: ISoftDelete.IsDeleted
- uid: Aviant.DDD.Core.Enums
  name: Aviant.DDD.Core.Enums
  href: api/Aviant.DDD.Core.Enums.html
  commentId: N:Aviant.DDD.Core.Enums
  fullName: Aviant.DDD.Core.Enums
  nameWithType: Aviant.DDD.Core.Enums
- uid: Aviant.DDD.Core.Enums.PriorityLevel
  name: PriorityLevel
  href: api/Aviant.DDD.Core.Enums.PriorityLevel.html
  commentId: T:Aviant.DDD.Core.Enums.PriorityLevel
  fullName: Aviant.DDD.Core.Enums.PriorityLevel
  nameWithType: PriorityLevel
- uid: Aviant.DDD.Core.Enums.PriorityLevel.High
  name: High
  href: api/Aviant.DDD.Core.Enums.PriorityLevel.html#Aviant_DDD_Core_Enums_PriorityLevel_High
  commentId: F:Aviant.DDD.Core.Enums.PriorityLevel.High
  fullName: Aviant.DDD.Core.Enums.PriorityLevel.High
  nameWithType: PriorityLevel.High
- uid: Aviant.DDD.Core.Enums.PriorityLevel.Low
  name: Low
  href: api/Aviant.DDD.Core.Enums.PriorityLevel.html#Aviant_DDD_Core_Enums_PriorityLevel_Low
  commentId: F:Aviant.DDD.Core.Enums.PriorityLevel.Low
  fullName: Aviant.DDD.Core.Enums.PriorityLevel.Low
  nameWithType: PriorityLevel.Low
- uid: Aviant.DDD.Core.Enums.PriorityLevel.Medium
  name: Medium
  href: api/Aviant.DDD.Core.Enums.PriorityLevel.html#Aviant_DDD_Core_Enums_PriorityLevel_Medium
  commentId: F:Aviant.DDD.Core.Enums.PriorityLevel.Medium
  fullName: Aviant.DDD.Core.Enums.PriorityLevel.Medium
  nameWithType: PriorityLevel.Medium
- uid: Aviant.DDD.Core.Enums.PriorityLevel.None
  name: None
  href: api/Aviant.DDD.Core.Enums.PriorityLevel.html#Aviant_DDD_Core_Enums_PriorityLevel_None
  commentId: F:Aviant.DDD.Core.Enums.PriorityLevel.None
  fullName: Aviant.DDD.Core.Enums.PriorityLevel.None
  nameWithType: PriorityLevel.None
- uid: Aviant.DDD.Core.Enums.State
  name: State
  href: api/Aviant.DDD.Core.Enums.State.html
  commentId: T:Aviant.DDD.Core.Enums.State
  fullName: Aviant.DDD.Core.Enums.State
  nameWithType: State
- uid: Aviant.DDD.Core.Enums.State.Active
  name: Active
  href: api/Aviant.DDD.Core.Enums.State.html#Aviant_DDD_Core_Enums_State_Active
  commentId: F:Aviant.DDD.Core.Enums.State.Active
  fullName: Aviant.DDD.Core.Enums.State.Active
  nameWithType: State.Active
- uid: Aviant.DDD.Core.Enums.State.Passive
  name: Passive
  href: api/Aviant.DDD.Core.Enums.State.html#Aviant_DDD_Core_Enums_State_Passive
  commentId: F:Aviant.DDD.Core.Enums.State.Passive
  fullName: Aviant.DDD.Core.Enums.State.Passive
  nameWithType: State.Passive
- uid: Aviant.DDD.Core.Enums.State.Paused
  name: Paused
  href: api/Aviant.DDD.Core.Enums.State.html#Aviant_DDD_Core_Enums_State_Paused
  commentId: F:Aviant.DDD.Core.Enums.State.Paused
  fullName: Aviant.DDD.Core.Enums.State.Paused
  nameWithType: State.Paused
- uid: Aviant.DDD.Core.EventBus
  name: Aviant.DDD.Core.EventBus
  href: api/Aviant.DDD.Core.EventBus.html
  commentId: N:Aviant.DDD.Core.EventBus
  fullName: Aviant.DDD.Core.EventBus
  nameWithType: Aviant.DDD.Core.EventBus
- uid: Aviant.DDD.Core.EventBus.EventReceived`1
  name: EventReceived<TDomainEvent>
  href: api/Aviant.DDD.Core.EventBus.EventReceived-1.html
  commentId: T:Aviant.DDD.Core.EventBus.EventReceived`1
  name.vb: EventReceived(Of TDomainEvent)
  fullName: Aviant.DDD.Core.EventBus.EventReceived<TDomainEvent>
  fullName.vb: Aviant.DDD.Core.EventBus.EventReceived(Of TDomainEvent)
  nameWithType: EventReceived<TDomainEvent>
  nameWithType.vb: EventReceived(Of TDomainEvent)
- uid: Aviant.DDD.Core.EventBus.EventReceived`1.#ctor(`0)
  name: EventReceived(TDomainEvent)
  href: api/Aviant.DDD.Core.EventBus.EventReceived-1.html#Aviant_DDD_Core_EventBus_EventReceived_1__ctor__0_
  commentId: M:Aviant.DDD.Core.EventBus.EventReceived`1.#ctor(`0)
  fullName: Aviant.DDD.Core.EventBus.EventReceived<TDomainEvent>.EventReceived(TDomainEvent)
  fullName.vb: Aviant.DDD.Core.EventBus.EventReceived(Of TDomainEvent).EventReceived(TDomainEvent)
  nameWithType: EventReceived<TDomainEvent>.EventReceived(TDomainEvent)
  nameWithType.vb: EventReceived(Of TDomainEvent).EventReceived(TDomainEvent)
- uid: Aviant.DDD.Core.EventBus.EventReceived`1.#ctor*
  name: EventReceived
  href: api/Aviant.DDD.Core.EventBus.EventReceived-1.html#Aviant_DDD_Core_EventBus_EventReceived_1__ctor_
  commentId: Overload:Aviant.DDD.Core.EventBus.EventReceived`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Core.EventBus.EventReceived<TDomainEvent>.EventReceived
  fullName.vb: Aviant.DDD.Core.EventBus.EventReceived(Of TDomainEvent).EventReceived
  nameWithType: EventReceived<TDomainEvent>.EventReceived
  nameWithType.vb: EventReceived(Of TDomainEvent).EventReceived
- uid: Aviant.DDD.Core.EventBus.EventReceived`1.Event
  name: Event
  href: api/Aviant.DDD.Core.EventBus.EventReceived-1.html#Aviant_DDD_Core_EventBus_EventReceived_1_Event
  commentId: P:Aviant.DDD.Core.EventBus.EventReceived`1.Event
  fullName: Aviant.DDD.Core.EventBus.EventReceived<TDomainEvent>.Event
  fullName.vb: Aviant.DDD.Core.EventBus.EventReceived(Of TDomainEvent).Event
  nameWithType: EventReceived<TDomainEvent>.Event
  nameWithType.vb: EventReceived(Of TDomainEvent).Event
- uid: Aviant.DDD.Core.EventBus.EventReceived`1.Event*
  name: Event
  href: api/Aviant.DDD.Core.EventBus.EventReceived-1.html#Aviant_DDD_Core_EventBus_EventReceived_1_Event_
  commentId: Overload:Aviant.DDD.Core.EventBus.EventReceived`1.Event
  isSpec: "True"
  fullName: Aviant.DDD.Core.EventBus.EventReceived<TDomainEvent>.Event
  fullName.vb: Aviant.DDD.Core.EventBus.EventReceived(Of TDomainEvent).Event
  nameWithType: EventReceived<TDomainEvent>.Event
  nameWithType.vb: EventReceived(Of TDomainEvent).Event
- uid: Aviant.DDD.Core.EventBus.EventReceivedHandlerAsync`1
  name: EventReceivedHandlerAsync<TAggregateId>
  href: api/Aviant.DDD.Core.EventBus.EventReceivedHandlerAsync-1.html
  commentId: T:Aviant.DDD.Core.EventBus.EventReceivedHandlerAsync`1
  name.vb: EventReceivedHandlerAsync(Of TAggregateId)
  fullName: Aviant.DDD.Core.EventBus.EventReceivedHandlerAsync<TAggregateId>
  fullName.vb: Aviant.DDD.Core.EventBus.EventReceivedHandlerAsync(Of TAggregateId)
  nameWithType: EventReceivedHandlerAsync<TAggregateId>
  nameWithType.vb: EventReceivedHandlerAsync(Of TAggregateId)
- uid: Aviant.DDD.Core.EventBus.IEventConsumer
  name: IEventConsumer
  href: api/Aviant.DDD.Core.EventBus.IEventConsumer.html
  commentId: T:Aviant.DDD.Core.EventBus.IEventConsumer
  fullName: Aviant.DDD.Core.EventBus.IEventConsumer
  nameWithType: IEventConsumer
- uid: Aviant.DDD.Core.EventBus.IEventConsumer.ConsumeAsync(CancellationToken)
  name: ConsumeAsync(CancellationToken)
  href: api/Aviant.DDD.Core.EventBus.IEventConsumer.html#Aviant_DDD_Core_EventBus_IEventConsumer_ConsumeAsync_CancellationToken_
  commentId: M:Aviant.DDD.Core.EventBus.IEventConsumer.ConsumeAsync(CancellationToken)
  fullName: Aviant.DDD.Core.EventBus.IEventConsumer.ConsumeAsync(CancellationToken)
  nameWithType: IEventConsumer.ConsumeAsync(CancellationToken)
- uid: Aviant.DDD.Core.EventBus.IEventConsumer.ConsumeAsync*
  name: ConsumeAsync
  href: api/Aviant.DDD.Core.EventBus.IEventConsumer.html#Aviant_DDD_Core_EventBus_IEventConsumer_ConsumeAsync_
  commentId: Overload:Aviant.DDD.Core.EventBus.IEventConsumer.ConsumeAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.EventBus.IEventConsumer.ConsumeAsync
  nameWithType: IEventConsumer.ConsumeAsync
- uid: Aviant.DDD.Core.EventBus.IEventConsumer`3
  name: IEventConsumer<TAggregate, TAggregateId, TDeserializer>
  href: api/Aviant.DDD.Core.EventBus.IEventConsumer-3.html
  commentId: T:Aviant.DDD.Core.EventBus.IEventConsumer`3
  name.vb: IEventConsumer(Of TAggregate, TAggregateId, TDeserializer)
  fullName: Aviant.DDD.Core.EventBus.IEventConsumer<TAggregate, TAggregateId, TDeserializer>
  fullName.vb: Aviant.DDD.Core.EventBus.IEventConsumer(Of TAggregate, TAggregateId, TDeserializer)
  nameWithType: IEventConsumer<TAggregate, TAggregateId, TDeserializer>
  nameWithType.vb: IEventConsumer(Of TAggregate, TAggregateId, TDeserializer)
- uid: Aviant.DDD.Core.EventBus.IEventConsumer`3.EventReceived
  name: EventReceived
  href: api/Aviant.DDD.Core.EventBus.IEventConsumer-3.html#Aviant_DDD_Core_EventBus_IEventConsumer_3_EventReceived
  commentId: E:Aviant.DDD.Core.EventBus.IEventConsumer`3.EventReceived
  fullName: Aviant.DDD.Core.EventBus.IEventConsumer<TAggregate, TAggregateId, TDeserializer>.EventReceived
  fullName.vb: Aviant.DDD.Core.EventBus.IEventConsumer(Of TAggregate, TAggregateId, TDeserializer).EventReceived
  nameWithType: IEventConsumer<TAggregate, TAggregateId, TDeserializer>.EventReceived
  nameWithType.vb: IEventConsumer(Of TAggregate, TAggregateId, TDeserializer).EventReceived
- uid: Aviant.DDD.Core.EventBus.IEventConsumerFactory
  name: IEventConsumerFactory
  href: api/Aviant.DDD.Core.EventBus.IEventConsumerFactory.html
  commentId: T:Aviant.DDD.Core.EventBus.IEventConsumerFactory
  fullName: Aviant.DDD.Core.EventBus.IEventConsumerFactory
  nameWithType: IEventConsumerFactory
- uid: Aviant.DDD.Core.EventBus.IEventConsumerFactory.Build*
  name: Build
  href: api/Aviant.DDD.Core.EventBus.IEventConsumerFactory.html#Aviant_DDD_Core_EventBus_IEventConsumerFactory_Build_
  commentId: Overload:Aviant.DDD.Core.EventBus.IEventConsumerFactory.Build
  isSpec: "True"
  fullName: Aviant.DDD.Core.EventBus.IEventConsumerFactory.Build
  nameWithType: IEventConsumerFactory.Build
- uid: Aviant.DDD.Core.EventBus.IEventConsumerFactory.Build``3
  name: Build<TAggregate, TAggregateId, TDeserializer>()
  href: api/Aviant.DDD.Core.EventBus.IEventConsumerFactory.html#Aviant_DDD_Core_EventBus_IEventConsumerFactory_Build__3
  commentId: M:Aviant.DDD.Core.EventBus.IEventConsumerFactory.Build``3
  name.vb: Build(Of TAggregate, TAggregateId, TDeserializer)()
  fullName: Aviant.DDD.Core.EventBus.IEventConsumerFactory.Build<TAggregate, TAggregateId, TDeserializer>()
  fullName.vb: Aviant.DDD.Core.EventBus.IEventConsumerFactory.Build(Of TAggregate, TAggregateId, TDeserializer)()
  nameWithType: IEventConsumerFactory.Build<TAggregate, TAggregateId, TDeserializer>()
  nameWithType.vb: IEventConsumerFactory.Build(Of TAggregate, TAggregateId, TDeserializer)()
- uid: Aviant.DDD.Core.EventBus.IEventProducer`2
  name: IEventProducer<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Core.EventBus.IEventProducer-2.html
  commentId: T:Aviant.DDD.Core.EventBus.IEventProducer`2
  name.vb: IEventProducer(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Core.EventBus.IEventProducer<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Core.EventBus.IEventProducer(Of TAggregate, TAggregateId)
  nameWithType: IEventProducer<TAggregate, TAggregateId>
  nameWithType.vb: IEventProducer(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Core.EventBus.IEventProducer`2.DispatchAsync(`0,CancellationToken)
  name: DispatchAsync(TAggregate, CancellationToken)
  href: api/Aviant.DDD.Core.EventBus.IEventProducer-2.html#Aviant_DDD_Core_EventBus_IEventProducer_2_DispatchAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.EventBus.IEventProducer`2.DispatchAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.EventBus.IEventProducer<TAggregate, TAggregateId>.DispatchAsync(TAggregate, CancellationToken)
  fullName.vb: Aviant.DDD.Core.EventBus.IEventProducer(Of TAggregate, TAggregateId).DispatchAsync(TAggregate, CancellationToken)
  nameWithType: IEventProducer<TAggregate, TAggregateId>.DispatchAsync(TAggregate, CancellationToken)
  nameWithType.vb: IEventProducer(Of TAggregate, TAggregateId).DispatchAsync(TAggregate, CancellationToken)
- uid: Aviant.DDD.Core.EventBus.IEventProducer`2.DispatchAsync*
  name: DispatchAsync
  href: api/Aviant.DDD.Core.EventBus.IEventProducer-2.html#Aviant_DDD_Core_EventBus_IEventProducer_2_DispatchAsync_
  commentId: Overload:Aviant.DDD.Core.EventBus.IEventProducer`2.DispatchAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.EventBus.IEventProducer<TAggregate, TAggregateId>.DispatchAsync
  fullName.vb: Aviant.DDD.Core.EventBus.IEventProducer(Of TAggregate, TAggregateId).DispatchAsync
  nameWithType: IEventProducer<TAggregate, TAggregateId>.DispatchAsync
  nameWithType.vb: IEventProducer(Of TAggregate, TAggregateId).DispatchAsync
- uid: Aviant.DDD.Core.Exceptions
  name: Aviant.DDD.Core.Exceptions
  href: api/Aviant.DDD.Core.Exceptions.html
  commentId: N:Aviant.DDD.Core.Exceptions
  fullName: Aviant.DDD.Core.Exceptions
  nameWithType: Aviant.DDD.Core.Exceptions
- uid: Aviant.DDD.Core.Exceptions.CoreException
  name: CoreException
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html
  commentId: T:Aviant.DDD.Core.Exceptions.CoreException
  fullName: Aviant.DDD.Core.Exceptions.CoreException
  nameWithType: CoreException
- uid: Aviant.DDD.Core.Exceptions.CoreException.#ctor
  name: CoreException()
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException__ctor
  commentId: M:Aviant.DDD.Core.Exceptions.CoreException.#ctor
  fullName: Aviant.DDD.Core.Exceptions.CoreException.CoreException()
  nameWithType: CoreException.CoreException()
- uid: Aviant.DDD.Core.Exceptions.CoreException.#ctor(SerializationInfo,StreamingContext)
  name: CoreException(SerializationInfo, StreamingContext)
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException__ctor_SerializationInfo_StreamingContext_
  commentId: M:Aviant.DDD.Core.Exceptions.CoreException.#ctor(SerializationInfo,StreamingContext)
  fullName: Aviant.DDD.Core.Exceptions.CoreException.CoreException(SerializationInfo, StreamingContext)
  nameWithType: CoreException.CoreException(SerializationInfo, StreamingContext)
- uid: Aviant.DDD.Core.Exceptions.CoreException.#ctor(System.String)
  name: CoreException(String)
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException__ctor_System_String_
  commentId: M:Aviant.DDD.Core.Exceptions.CoreException.#ctor(System.String)
  fullName: Aviant.DDD.Core.Exceptions.CoreException.CoreException(System.String)
  nameWithType: CoreException.CoreException(String)
- uid: Aviant.DDD.Core.Exceptions.CoreException.#ctor(System.String,Exception)
  name: CoreException(String, Exception)
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException__ctor_System_String_Exception_
  commentId: M:Aviant.DDD.Core.Exceptions.CoreException.#ctor(System.String,Exception)
  fullName: Aviant.DDD.Core.Exceptions.CoreException.CoreException(System.String, Exception)
  nameWithType: CoreException.CoreException(String, Exception)
- uid: Aviant.DDD.Core.Exceptions.CoreException.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{Exception})
  name: CoreException(String, Int32, Nullable<Int32>, Nullable<Exception>)
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException__ctor_System_String_System_Int32_System_Nullable_System_Int32__System_Nullable_Exception__
  commentId: M:Aviant.DDD.Core.Exceptions.CoreException.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{Exception})
  name.vb: CoreException(String, Int32, Nullable(Of Int32), Nullable(Of Exception))
  fullName: Aviant.DDD.Core.Exceptions.CoreException.CoreException(System.String, System.Int32, System.Nullable<System.Int32>, System.Nullable<Exception>)
  fullName.vb: Aviant.DDD.Core.Exceptions.CoreException.CoreException(System.String, System.Int32, System.Nullable(Of System.Int32), System.Nullable(Of Exception))
  nameWithType: CoreException.CoreException(String, Int32, Nullable<Int32>, Nullable<Exception>)
  nameWithType.vb: CoreException.CoreException(String, Int32, Nullable(Of Int32), Nullable(Of Exception))
- uid: Aviant.DDD.Core.Exceptions.CoreException.#ctor*
  name: CoreException
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException__ctor_
  commentId: Overload:Aviant.DDD.Core.Exceptions.CoreException.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.CoreException.CoreException
  nameWithType: CoreException.CoreException
- uid: Aviant.DDD.Core.Exceptions.CoreException.ErrorCode
  name: ErrorCode
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_ErrorCode
  commentId: P:Aviant.DDD.Core.Exceptions.CoreException.ErrorCode
  fullName: Aviant.DDD.Core.Exceptions.CoreException.ErrorCode
  nameWithType: CoreException.ErrorCode
- uid: Aviant.DDD.Core.Exceptions.CoreException.ErrorCode*
  name: ErrorCode
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_ErrorCode_
  commentId: Overload:Aviant.DDD.Core.Exceptions.CoreException.ErrorCode
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.CoreException.ErrorCode
  nameWithType: CoreException.ErrorCode
- uid: Aviant.DDD.Core.Exceptions.CoreException.ExceptionId
  name: ExceptionId
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_ExceptionId
  commentId: P:Aviant.DDD.Core.Exceptions.CoreException.ExceptionId
  fullName: Aviant.DDD.Core.Exceptions.CoreException.ExceptionId
  nameWithType: CoreException.ExceptionId
- uid: Aviant.DDD.Core.Exceptions.CoreException.ExceptionId*
  name: ExceptionId
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_ExceptionId_
  commentId: Overload:Aviant.DDD.Core.Exceptions.CoreException.ExceptionId
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.CoreException.ExceptionId
  nameWithType: CoreException.ExceptionId
- uid: Aviant.DDD.Core.Exceptions.CoreException.ExceptionName
  name: ExceptionName
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_ExceptionName
  commentId: P:Aviant.DDD.Core.Exceptions.CoreException.ExceptionName
  fullName: Aviant.DDD.Core.Exceptions.CoreException.ExceptionName
  nameWithType: CoreException.ExceptionName
- uid: Aviant.DDD.Core.Exceptions.CoreException.ExceptionName*
  name: ExceptionName
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_ExceptionName_
  commentId: Overload:Aviant.DDD.Core.Exceptions.CoreException.ExceptionName
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.CoreException.ExceptionName
  nameWithType: CoreException.ExceptionName
- uid: Aviant.DDD.Core.Exceptions.CoreException.FamilyCode
  name: FamilyCode
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_FamilyCode
  commentId: P:Aviant.DDD.Core.Exceptions.CoreException.FamilyCode
  fullName: Aviant.DDD.Core.Exceptions.CoreException.FamilyCode
  nameWithType: CoreException.FamilyCode
- uid: Aviant.DDD.Core.Exceptions.CoreException.FamilyCode*
  name: FamilyCode
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_FamilyCode_
  commentId: Overload:Aviant.DDD.Core.Exceptions.CoreException.FamilyCode
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.CoreException.FamilyCode
  nameWithType: CoreException.FamilyCode
- uid: Aviant.DDD.Core.Exceptions.CoreException.GetObjectData(SerializationInfo,StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_GetObjectData_SerializationInfo_StreamingContext_
  commentId: M:Aviant.DDD.Core.Exceptions.CoreException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: Aviant.DDD.Core.Exceptions.CoreException.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: CoreException.GetObjectData(SerializationInfo, StreamingContext)
- uid: Aviant.DDD.Core.Exceptions.CoreException.GetObjectData*
  name: GetObjectData
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_GetObjectData_
  commentId: Overload:Aviant.DDD.Core.Exceptions.CoreException.GetObjectData
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.CoreException.GetObjectData
  nameWithType: CoreException.GetObjectData
- uid: Aviant.DDD.Core.Exceptions.CoreException.Occurred
  name: Occurred
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_Occurred
  commentId: P:Aviant.DDD.Core.Exceptions.CoreException.Occurred
  fullName: Aviant.DDD.Core.Exceptions.CoreException.Occurred
  nameWithType: CoreException.Occurred
- uid: Aviant.DDD.Core.Exceptions.CoreException.Occurred*
  name: Occurred
  href: api/Aviant.DDD.Core.Exceptions.CoreException.html#Aviant_DDD_Core_Exceptions_CoreException_Occurred_
  commentId: Overload:Aviant.DDD.Core.Exceptions.CoreException.Occurred
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.CoreException.Occurred
  nameWithType: CoreException.Occurred
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException
  name: EntityNotFoundException
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html
  commentId: T:Aviant.DDD.Core.Exceptions.EntityNotFoundException
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException
  nameWithType: EntityNotFoundException
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor
  name: EntityNotFoundException()
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException__ctor
  commentId: M:Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityNotFoundException()
  nameWithType: EntityNotFoundException.EntityNotFoundException()
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor(System.Nullable{Type},System.Nullable{System.Object},Exception)
  name: EntityNotFoundException(Nullable<Type>, Nullable<Object>, Exception)
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException__ctor_System_Nullable_Type__System_Nullable_System_Object__Exception_
  commentId: M:Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor(System.Nullable{Type},System.Nullable{System.Object},Exception)
  name.vb: EntityNotFoundException(Nullable(Of Type), Nullable(Of Object), Exception)
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityNotFoundException(System.Nullable<Type>, System.Nullable<System.Object>, Exception)
  fullName.vb: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityNotFoundException(System.Nullable(Of Type), System.Nullable(Of System.Object), Exception)
  nameWithType: EntityNotFoundException.EntityNotFoundException(Nullable<Type>, Nullable<Object>, Exception)
  nameWithType.vb: EntityNotFoundException.EntityNotFoundException(Nullable(Of Type), Nullable(Of Object), Exception)
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor(System.String)
  name: EntityNotFoundException(String)
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException__ctor_System_String_
  commentId: M:Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor(System.String)
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityNotFoundException(System.String)
  nameWithType: EntityNotFoundException.EntityNotFoundException(String)
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor(System.String,Exception)
  name: EntityNotFoundException(String, Exception)
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException__ctor_System_String_Exception_
  commentId: M:Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor(System.String,Exception)
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityNotFoundException(System.String, Exception)
  nameWithType: EntityNotFoundException.EntityNotFoundException(String, Exception)
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor*
  name: EntityNotFoundException
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException__ctor_
  commentId: Overload:Aviant.DDD.Core.Exceptions.EntityNotFoundException.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityNotFoundException
  nameWithType: EntityNotFoundException.EntityNotFoundException
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityType
  name: EntityType
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException_EntityType
  commentId: P:Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityType
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityType
  nameWithType: EntityNotFoundException.EntityType
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityType*
  name: EntityType
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException_EntityType_
  commentId: Overload:Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityType
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.EntityType
  nameWithType: EntityNotFoundException.EntityType
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.Id
  name: Id
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException_Id
  commentId: P:Aviant.DDD.Core.Exceptions.EntityNotFoundException.Id
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.Id
  nameWithType: EntityNotFoundException.Id
- uid: Aviant.DDD.Core.Exceptions.EntityNotFoundException.Id*
  name: Id
  href: api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html#Aviant_DDD_Core_Exceptions_EntityNotFoundException_Id_
  commentId: Overload:Aviant.DDD.Core.Exceptions.EntityNotFoundException.Id
  isSpec: "True"
  fullName: Aviant.DDD.Core.Exceptions.EntityNotFoundException.Id
  nameWithType: EntityNotFoundException.Id
- uid: Aviant.DDD.Core.Messages
  name: Aviant.DDD.Core.Messages
  href: api/Aviant.DDD.Core.Messages.html
  commentId: N:Aviant.DDD.Core.Messages
  fullName: Aviant.DDD.Core.Messages
  nameWithType: Aviant.DDD.Core.Messages
- uid: Aviant.DDD.Core.Messages.IMessages
  name: IMessages
  href: api/Aviant.DDD.Core.Messages.IMessages.html
  commentId: T:Aviant.DDD.Core.Messages.IMessages
  fullName: Aviant.DDD.Core.Messages.IMessages
  nameWithType: IMessages
- uid: Aviant.DDD.Core.Messages.IMessages.AddMessage(System.String)
  name: AddMessage(String)
  href: api/Aviant.DDD.Core.Messages.IMessages.html#Aviant_DDD_Core_Messages_IMessages_AddMessage_System_String_
  commentId: M:Aviant.DDD.Core.Messages.IMessages.AddMessage(System.String)
  fullName: Aviant.DDD.Core.Messages.IMessages.AddMessage(System.String)
  nameWithType: IMessages.AddMessage(String)
- uid: Aviant.DDD.Core.Messages.IMessages.AddMessage*
  name: AddMessage
  href: api/Aviant.DDD.Core.Messages.IMessages.html#Aviant_DDD_Core_Messages_IMessages_AddMessage_
  commentId: Overload:Aviant.DDD.Core.Messages.IMessages.AddMessage
  isSpec: "True"
  fullName: Aviant.DDD.Core.Messages.IMessages.AddMessage
  nameWithType: IMessages.AddMessage
- uid: Aviant.DDD.Core.Messages.IMessages.CleanMessages
  name: CleanMessages()
  href: api/Aviant.DDD.Core.Messages.IMessages.html#Aviant_DDD_Core_Messages_IMessages_CleanMessages
  commentId: M:Aviant.DDD.Core.Messages.IMessages.CleanMessages
  fullName: Aviant.DDD.Core.Messages.IMessages.CleanMessages()
  nameWithType: IMessages.CleanMessages()
- uid: Aviant.DDD.Core.Messages.IMessages.CleanMessages*
  name: CleanMessages
  href: api/Aviant.DDD.Core.Messages.IMessages.html#Aviant_DDD_Core_Messages_IMessages_CleanMessages_
  commentId: Overload:Aviant.DDD.Core.Messages.IMessages.CleanMessages
  isSpec: "True"
  fullName: Aviant.DDD.Core.Messages.IMessages.CleanMessages
  nameWithType: IMessages.CleanMessages
- uid: Aviant.DDD.Core.Messages.IMessages.GetAll
  name: GetAll()
  href: api/Aviant.DDD.Core.Messages.IMessages.html#Aviant_DDD_Core_Messages_IMessages_GetAll
  commentId: M:Aviant.DDD.Core.Messages.IMessages.GetAll
  fullName: Aviant.DDD.Core.Messages.IMessages.GetAll()
  nameWithType: IMessages.GetAll()
- uid: Aviant.DDD.Core.Messages.IMessages.GetAll*
  name: GetAll
  href: api/Aviant.DDD.Core.Messages.IMessages.html#Aviant_DDD_Core_Messages_IMessages_GetAll_
  commentId: Overload:Aviant.DDD.Core.Messages.IMessages.GetAll
  isSpec: "True"
  fullName: Aviant.DDD.Core.Messages.IMessages.GetAll
  nameWithType: IMessages.GetAll
- uid: Aviant.DDD.Core.Messages.IMessages.HasMessages
  name: HasMessages()
  href: api/Aviant.DDD.Core.Messages.IMessages.html#Aviant_DDD_Core_Messages_IMessages_HasMessages
  commentId: M:Aviant.DDD.Core.Messages.IMessages.HasMessages
  fullName: Aviant.DDD.Core.Messages.IMessages.HasMessages()
  nameWithType: IMessages.HasMessages()
- uid: Aviant.DDD.Core.Messages.IMessages.HasMessages*
  name: HasMessages
  href: api/Aviant.DDD.Core.Messages.IMessages.html#Aviant_DDD_Core_Messages_IMessages_HasMessages_
  commentId: Overload:Aviant.DDD.Core.Messages.IMessages.HasMessages
  isSpec: "True"
  fullName: Aviant.DDD.Core.Messages.IMessages.HasMessages
  nameWithType: IMessages.HasMessages
- uid: Aviant.DDD.Core.Messages.Messages
  name: Messages
  href: api/Aviant.DDD.Core.Messages.Messages.html
  commentId: T:Aviant.DDD.Core.Messages.Messages
  fullName: Aviant.DDD.Core.Messages.Messages
  nameWithType: Messages
- uid: Aviant.DDD.Core.Messages.Messages.AddMessage(System.String)
  name: AddMessage(String)
  href: api/Aviant.DDD.Core.Messages.Messages.html#Aviant_DDD_Core_Messages_Messages_AddMessage_System_String_
  commentId: M:Aviant.DDD.Core.Messages.Messages.AddMessage(System.String)
  fullName: Aviant.DDD.Core.Messages.Messages.AddMessage(System.String)
  nameWithType: Messages.AddMessage(String)
- uid: Aviant.DDD.Core.Messages.Messages.AddMessage*
  name: AddMessage
  href: api/Aviant.DDD.Core.Messages.Messages.html#Aviant_DDD_Core_Messages_Messages_AddMessage_
  commentId: Overload:Aviant.DDD.Core.Messages.Messages.AddMessage
  isSpec: "True"
  fullName: Aviant.DDD.Core.Messages.Messages.AddMessage
  nameWithType: Messages.AddMessage
- uid: Aviant.DDD.Core.Messages.Messages.CleanMessages
  name: CleanMessages()
  href: api/Aviant.DDD.Core.Messages.Messages.html#Aviant_DDD_Core_Messages_Messages_CleanMessages
  commentId: M:Aviant.DDD.Core.Messages.Messages.CleanMessages
  fullName: Aviant.DDD.Core.Messages.Messages.CleanMessages()
  nameWithType: Messages.CleanMessages()
- uid: Aviant.DDD.Core.Messages.Messages.CleanMessages*
  name: CleanMessages
  href: api/Aviant.DDD.Core.Messages.Messages.html#Aviant_DDD_Core_Messages_Messages_CleanMessages_
  commentId: Overload:Aviant.DDD.Core.Messages.Messages.CleanMessages
  isSpec: "True"
  fullName: Aviant.DDD.Core.Messages.Messages.CleanMessages
  nameWithType: Messages.CleanMessages
- uid: Aviant.DDD.Core.Messages.Messages.GetAll
  name: GetAll()
  href: api/Aviant.DDD.Core.Messages.Messages.html#Aviant_DDD_Core_Messages_Messages_GetAll
  commentId: M:Aviant.DDD.Core.Messages.Messages.GetAll
  fullName: Aviant.DDD.Core.Messages.Messages.GetAll()
  nameWithType: Messages.GetAll()
- uid: Aviant.DDD.Core.Messages.Messages.GetAll*
  name: GetAll
  href: api/Aviant.DDD.Core.Messages.Messages.html#Aviant_DDD_Core_Messages_Messages_GetAll_
  commentId: Overload:Aviant.DDD.Core.Messages.Messages.GetAll
  isSpec: "True"
  fullName: Aviant.DDD.Core.Messages.Messages.GetAll
  nameWithType: Messages.GetAll
- uid: Aviant.DDD.Core.Messages.Messages.HasMessages
  name: HasMessages()
  href: api/Aviant.DDD.Core.Messages.Messages.html#Aviant_DDD_Core_Messages_Messages_HasMessages
  commentId: M:Aviant.DDD.Core.Messages.Messages.HasMessages
  fullName: Aviant.DDD.Core.Messages.Messages.HasMessages()
  nameWithType: Messages.HasMessages()
- uid: Aviant.DDD.Core.Messages.Messages.HasMessages*
  name: HasMessages
  href: api/Aviant.DDD.Core.Messages.Messages.html#Aviant_DDD_Core_Messages_Messages_HasMessages_
  commentId: Overload:Aviant.DDD.Core.Messages.Messages.HasMessages
  isSpec: "True"
  fullName: Aviant.DDD.Core.Messages.Messages.HasMessages
  nameWithType: Messages.HasMessages
- uid: Aviant.DDD.Core.Persistence
  name: Aviant.DDD.Core.Persistence
  href: api/Aviant.DDD.Core.Persistence.html
  commentId: N:Aviant.DDD.Core.Persistence
  fullName: Aviant.DDD.Core.Persistence
  nameWithType: Aviant.DDD.Core.Persistence
- uid: Aviant.DDD.Core.Persistence.IEventsRepository`2
  name: IEventsRepository<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Core.Persistence.IEventsRepository-2.html
  commentId: T:Aviant.DDD.Core.Persistence.IEventsRepository`2
  name.vb: IEventsRepository(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Core.Persistence.IEventsRepository<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Core.Persistence.IEventsRepository(Of TAggregate, TAggregateId)
  nameWithType: IEventsRepository<TAggregate, TAggregateId>
  nameWithType.vb: IEventsRepository(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Core.Persistence.IEventsRepository`2.AppendAsync(`0,CancellationToken)
  name: AppendAsync(TAggregate, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IEventsRepository-2.html#Aviant_DDD_Core_Persistence_IEventsRepository_2_AppendAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IEventsRepository`2.AppendAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IEventsRepository<TAggregate, TAggregateId>.AppendAsync(TAggregate, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IEventsRepository(Of TAggregate, TAggregateId).AppendAsync(TAggregate, CancellationToken)
  nameWithType: IEventsRepository<TAggregate, TAggregateId>.AppendAsync(TAggregate, CancellationToken)
  nameWithType.vb: IEventsRepository(Of TAggregate, TAggregateId).AppendAsync(TAggregate, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IEventsRepository`2.AppendAsync*
  name: AppendAsync
  href: api/Aviant.DDD.Core.Persistence.IEventsRepository-2.html#Aviant_DDD_Core_Persistence_IEventsRepository_2_AppendAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IEventsRepository`2.AppendAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IEventsRepository<TAggregate, TAggregateId>.AppendAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IEventsRepository(Of TAggregate, TAggregateId).AppendAsync
  nameWithType: IEventsRepository<TAggregate, TAggregateId>.AppendAsync
  nameWithType.vb: IEventsRepository(Of TAggregate, TAggregateId).AppendAsync
- uid: Aviant.DDD.Core.Persistence.IEventsRepository`2.RehydrateAsync(`1,CancellationToken)
  name: RehydrateAsync(TAggregateId, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IEventsRepository-2.html#Aviant_DDD_Core_Persistence_IEventsRepository_2_RehydrateAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IEventsRepository`2.RehydrateAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IEventsRepository<TAggregate, TAggregateId>.RehydrateAsync(TAggregateId, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IEventsRepository(Of TAggregate, TAggregateId).RehydrateAsync(TAggregateId, CancellationToken)
  nameWithType: IEventsRepository<TAggregate, TAggregateId>.RehydrateAsync(TAggregateId, CancellationToken)
  nameWithType.vb: IEventsRepository(Of TAggregate, TAggregateId).RehydrateAsync(TAggregateId, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IEventsRepository`2.RehydrateAsync*
  name: RehydrateAsync
  href: api/Aviant.DDD.Core.Persistence.IEventsRepository-2.html#Aviant_DDD_Core_Persistence_IEventsRepository_2_RehydrateAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IEventsRepository`2.RehydrateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IEventsRepository<TAggregate, TAggregateId>.RehydrateAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IEventsRepository(Of TAggregate, TAggregateId).RehydrateAsync
  nameWithType: IEventsRepository<TAggregate, TAggregateId>.RehydrateAsync
  nameWithType.vb: IEventsRepository(Of TAggregate, TAggregateId).RehydrateAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2
  name: IRepositoryRead<TEntity, TPrimaryKey>
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html
  commentId: T:Aviant.DDD.Core.Persistence.IRepositoryRead`2
  name.vb: IRepositoryRead(Of TEntity, TPrimaryKey)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.AllAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name: AllAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_AllAsync_Expression_Func__0_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.AllAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name.vb: AllAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.AllAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).AllAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.AllAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).AllAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.AllAsync*
  name: AllAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_AllAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.AllAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.AllAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).AllAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.AllAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).AllAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.AnyAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name: AnyAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_AnyAsync_Expression_Func__0_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.AnyAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name.vb: AnyAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.AnyAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).AnyAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.AnyAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).AnyAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.AnyAsync*
  name: AnyAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_AnyAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.AnyAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.AnyAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).AnyAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.AnyAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).AnyAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.Count
  name: Count()
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_Count
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.Count
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.Count()
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).Count()
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.Count()
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).Count()
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.Count(Expression{Func{`0,System.Boolean}})
  name: Count(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_Count_Expression_Func__0_System_Boolean___
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.Count(Expression{Func{`0,System.Boolean}})
  name.vb: Count(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.Count(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).Count(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.Count(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).Count(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.Count*
  name: Count
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_Count_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.Count
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.Count
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).Count
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.Count
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).Count
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.CountAsync(CancellationToken)
  name: CountAsync(CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_CountAsync_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.CountAsync(CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.CountAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).CountAsync(CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.CountAsync(CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).CountAsync(CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.CountAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name: CountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_CountAsync_Expression_Func__0_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.CountAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name.vb: CountAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.CountAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).CountAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.CountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).CountAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.CountAsync*
  name: CountAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_CountAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.CountAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.CountAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).CountAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.CountAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).CountAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FindBy(Expression{Func{`0,System.Boolean}})
  name: FindBy(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FindBy_Expression_Func__0_System_Boolean___
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FindBy(Expression{Func{`0,System.Boolean}})
  name.vb: FindBy(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FindBy(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FindBy(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FindBy(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FindBy(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FindBy*
  name: FindBy
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FindBy_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FindBy
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FindBy
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FindBy
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FindBy
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FindBy
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FindByIncluding(Expression{Func{`0,System.Boolean}},Expression{Func{`0,System.Object}}[])
  name: FindByIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FindByIncluding_Expression_Func__0_System_Boolean___Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FindByIncluding(Expression{Func{`0,System.Boolean}},Expression{Func{`0,System.Object}}[])
  name.vb: FindByIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FindByIncluding(Expression<Func<TEntity, System.Boolean>>, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FindByIncluding(Expression(Of Func(Of TEntity, System.Boolean)), Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FindByIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FindByIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FindByIncluding*
  name: FindByIncluding
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FindByIncluding_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FindByIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FindByIncluding
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FindByIncluding
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FindByIncluding
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FindByIncluding
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefault(`1)
  name: FirstOrDefault(TPrimaryKey)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefault__1_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefault(`1)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefault(TPrimaryKey)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefault(TPrimaryKey)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefault(TPrimaryKey)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefault(TPrimaryKey)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefault(Expression{Func{`0,System.Boolean}})
  name: FirstOrDefault(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefault_Expression_Func__0_System_Boolean___
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefault(Expression{Func{`0,System.Boolean}})
  name.vb: FirstOrDefault(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefault(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefault(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefault(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefault(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefault*
  name: FirstOrDefault
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefault_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefault
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefault
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefault
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefault
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefault
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultAsync(`1,CancellationToken)
  name: FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name: FirstOrDefaultAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultAsync_Expression_Func__0_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name.vb: FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultAsync*
  name: FirstOrDefaultAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncluding(`1,Expression{Func{`0,System.Object}}[])
  name: FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultIncluding__1_Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncluding(`1,Expression{Func{`0,System.Object}}[])
  name.vb: FirstOrDefaultIncluding(TPrimaryKey, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncluding(TPrimaryKey, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncluding(TPrimaryKey, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncluding(Expression{Func{`0,System.Boolean}},Expression{Func{`0,System.Object}}[])
  name: FirstOrDefaultIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultIncluding_Expression_Func__0_System_Boolean___Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncluding(Expression{Func{`0,System.Boolean}},Expression{Func{`0,System.Object}}[])
  name.vb: FirstOrDefaultIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncluding(Expression<Func<TEntity, System.Boolean>>, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncluding(Expression(Of Func(Of TEntity, System.Boolean)), Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncluding*
  name: FirstOrDefaultIncluding
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultIncluding_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncluding
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncluding
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncluding
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncluding
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncludingAsync(`1,CancellationToken,Expression{Func{`0,System.Object}}[])
  name: FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultIncludingAsync__1_CancellationToken_Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncludingAsync(`1,CancellationToken,Expression{Func{`0,System.Object}}[])
  name.vb: FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncludingAsync(Expression{Func{`0,System.Boolean}},CancellationToken,Expression{Func{`0,System.Object}}[])
  name: FirstOrDefaultIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultIncludingAsync_Expression_Func__0_System_Boolean___CancellationToken_Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncludingAsync(Expression{Func{`0,System.Boolean}},CancellationToken,Expression{Func{`0,System.Object}}[])
  name.vb: FirstOrDefaultIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncludingAsync*
  name: FirstOrDefaultIncludingAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_FirstOrDefaultIncludingAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.FirstOrDefaultIncludingAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.Get(`1)
  name: Get(TPrimaryKey)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_Get__1_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.Get(`1)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.Get(TPrimaryKey)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).Get(TPrimaryKey)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.Get(TPrimaryKey)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).Get(TPrimaryKey)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.Get*
  name: Get
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_Get_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.Get
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.Get
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).Get
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.Get
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).Get
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAll
  name: GetAll()
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAll
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAll
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAll()
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAll()
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAll()
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAll()
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAll*
  name: GetAll
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAll_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAll
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAll
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAll
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAll
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAll
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllIncluding(Expression{Func{`0,System.Object}}[])
  name: GetAllIncluding(Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllIncluding_Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllIncluding(Expression{Func{`0,System.Object}}[])
  name.vb: GetAllIncluding(Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllIncluding(Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllIncluding(Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllIncluding(Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllIncluding(Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllIncluding*
  name: GetAllIncluding
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllIncluding_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllIncluding
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllIncluding
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllIncluding
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllIncluding
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllList
  name: GetAllList()
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllList
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllList
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllList()
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllList()
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllList()
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllList()
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllList(Expression{Func{`0,System.Boolean}})
  name: GetAllList(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllList_Expression_Func__0_System_Boolean___
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllList(Expression{Func{`0,System.Boolean}})
  name.vb: GetAllList(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllList(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllList(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllList(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllList(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllList*
  name: GetAllList
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllList_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllList
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllList
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllList
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllList
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllList
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListAsync(CancellationToken)
  name: GetAllListAsync(CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllListAsync_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListAsync(CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllListAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListAsync(CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllListAsync(CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListAsync(CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name: GetAllListAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllListAsync_Expression_Func__0_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name.vb: GetAllListAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllListAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllListAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListAsync*
  name: GetAllListAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllListAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllListAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllListAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListIncluding(Expression{Func{`0,System.Boolean}},Expression{Func{`0,System.Object}}[])
  name: GetAllListIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllListIncluding_Expression_Func__0_System_Boolean___Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListIncluding(Expression{Func{`0,System.Boolean}},Expression{Func{`0,System.Object}}[])
  name.vb: GetAllListIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllListIncluding(Expression<Func<TEntity, System.Boolean>>, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListIncluding(Expression(Of Func(Of TEntity, System.Boolean)), Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllListIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListIncluding*
  name: GetAllListIncluding
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllListIncluding_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllListIncluding
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListIncluding
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllListIncluding
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListIncluding
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListIncludingAsync(Expression{Func{`0,System.Boolean}},CancellationToken,Expression{Func{`0,System.Object}}[])
  name: GetAllListIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllListIncludingAsync_Expression_Func__0_System_Boolean___CancellationToken_Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListIncludingAsync(Expression{Func{`0,System.Boolean}},CancellationToken,Expression{Func{`0,System.Object}}[])
  name.vb: GetAllListIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllListIncludingAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListIncludingAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllListIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListIncludingAsync*
  name: GetAllListIncludingAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAllListIncludingAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAllListIncludingAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAllListIncludingAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListIncludingAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAllListIncludingAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAllListIncludingAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAsync(`1,CancellationToken)
  name: GetAsync(TPrimaryKey, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAsync(TPrimaryKey, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAsync(TPrimaryKey, CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAsync(TPrimaryKey, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAsync(TPrimaryKey, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAsync*
  name: GetAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name: GetSingleAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetSingleAsync_Expression_Func__0_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name.vb: GetSingleAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetSingleAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetSingleAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleAsync*
  name: GetSingleAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetSingleAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetSingleAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetSingleAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleIncluding(Expression{Func{`0,System.Boolean}},Expression{Func{`0,System.Object}}[])
  name: GetSingleIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetSingleIncluding_Expression_Func__0_System_Boolean___Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleIncluding(Expression{Func{`0,System.Boolean}},Expression{Func{`0,System.Object}}[])
  name.vb: GetSingleIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetSingleIncluding(Expression<Func<TEntity, System.Boolean>>, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleIncluding(Expression(Of Func(Of TEntity, System.Boolean)), Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetSingleIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleIncluding*
  name: GetSingleIncluding
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetSingleIncluding_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetSingleIncluding
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleIncluding
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetSingleIncluding
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleIncluding
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleIncludingAsync(Expression{Func{`0,System.Boolean}},CancellationToken,Expression{Func{`0,System.Object}}[])
  name: GetSingleIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetSingleIncludingAsync_Expression_Func__0_System_Boolean___CancellationToken_Expression_Func__0_System_Object_____
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleIncludingAsync(Expression{Func{`0,System.Boolean}},CancellationToken,Expression{Func{`0,System.Object}}[])
  name.vb: GetSingleIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetSingleIncludingAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleIncludingAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetSingleIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleIncludingAsync*
  name: GetSingleIncludingAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_GetSingleIncludingAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.GetSingleIncludingAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.GetSingleIncludingAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleIncludingAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.GetSingleIncludingAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).GetSingleIncludingAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCount
  name: LongCount()
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_LongCount
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCount
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.LongCount()
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).LongCount()
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.LongCount()
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).LongCount()
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCount(Expression{Func{`0,System.Boolean}})
  name: LongCount(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_LongCount_Expression_Func__0_System_Boolean___
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCount(Expression{Func{`0,System.Boolean}})
  name.vb: LongCount(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.LongCount(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).LongCount(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.LongCount(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).LongCount(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCount*
  name: LongCount
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_LongCount_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCount
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.LongCount
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).LongCount
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.LongCount
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).LongCount
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCountAsync(CancellationToken)
  name: LongCountAsync(CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_LongCountAsync_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCountAsync(CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.LongCountAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).LongCountAsync(CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.LongCountAsync(CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).LongCountAsync(CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCountAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name: LongCountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_LongCountAsync_Expression_Func__0_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCountAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name.vb: LongCountAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.LongCountAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).LongCountAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.LongCountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).LongCountAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCountAsync*
  name: LongCountAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_LongCountAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.LongCountAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.LongCountAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).LongCountAsync
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.LongCountAsync
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).LongCountAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.Single(Expression{Func{`0,System.Boolean}})
  name: Single(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_Single_Expression_Func__0_System_Boolean___
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryRead`2.Single(Expression{Func{`0,System.Boolean}})
  name.vb: Single(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.Single(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).Single(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.Single(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).Single(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Core.Persistence.IRepositoryRead`2.Single*
  name: Single
  href: api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html#Aviant_DDD_Core_Persistence_IRepositoryRead_2_Single_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryRead`2.Single
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryRead<TEntity, TPrimaryKey>.Single
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryRead(Of TEntity, TPrimaryKey).Single
  nameWithType: IRepositoryRead<TEntity, TPrimaryKey>.Single
  nameWithType.vb: IRepositoryRead(Of TEntity, TPrimaryKey).Single
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2
  name: IRepositoryWrite<TEntity, TPrimaryKey>
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html
  commentId: T:Aviant.DDD.Core.Persistence.IRepositoryWrite`2
  name.vb: IRepositoryWrite(Of TEntity, TPrimaryKey)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Delete(`0)
  name: Delete(TEntity)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Delete__0_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Delete(`0)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Delete(TEntity)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Delete(TEntity)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Delete(TEntity)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Delete(TEntity)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Delete(`1)
  name: Delete(TPrimaryKey)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Delete__1_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Delete(`1)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Delete(TPrimaryKey)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Delete(TPrimaryKey)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Delete(TPrimaryKey)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Delete(TPrimaryKey)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Delete(Expression{Func{`0,System.Boolean}})
  name: Delete(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Delete_Expression_Func__0_System_Boolean___
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Delete(Expression{Func{`0,System.Boolean}})
  name.vb: Delete(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Delete(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Delete(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Delete(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Delete(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Delete*
  name: Delete
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Delete_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Delete
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Delete
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Delete
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Delete
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Delete
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.DeleteAsync(`0,CancellationToken)
  name: DeleteAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_DeleteAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.DeleteAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.DeleteAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).DeleteAsync(TEntity, CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.DeleteAsync(TEntity, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).DeleteAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.DeleteAsync(`1,CancellationToken)
  name: DeleteAsync(TPrimaryKey, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_DeleteAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.DeleteAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.DeleteAsync(TPrimaryKey, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).DeleteAsync(TPrimaryKey, CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.DeleteAsync(TPrimaryKey, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).DeleteAsync(TPrimaryKey, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.DeleteAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name: DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_DeleteAsync_Expression_Func__0_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.DeleteAsync(Expression{Func{`0,System.Boolean}},CancellationToken)
  name.vb: DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).DeleteAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.DeleteAsync*
  name: DeleteAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_DeleteAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.DeleteAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.DeleteAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).DeleteAsync
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.DeleteAsync
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).DeleteAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Insert(`0)
  name: Insert(TEntity)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Insert__0_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Insert(`0)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Insert(TEntity)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Insert(TEntity)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Insert(TEntity)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Insert(TEntity)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Insert*
  name: Insert
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Insert_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Insert
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Insert
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Insert
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Insert
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Insert
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAndGetId(`0)
  name: InsertAndGetId(TEntity)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertAndGetId__0_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAndGetId(`0)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertAndGetId(TEntity)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAndGetId(TEntity)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertAndGetId(TEntity)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAndGetId(TEntity)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAndGetId*
  name: InsertAndGetId
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertAndGetId_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAndGetId
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertAndGetId
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAndGetId
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertAndGetId
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAndGetId
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAndGetIdAsync(`0,CancellationToken)
  name: InsertAndGetIdAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertAndGetIdAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAndGetIdAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertAndGetIdAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAndGetIdAsync(TEntity, CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertAndGetIdAsync(TEntity, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAndGetIdAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAndGetIdAsync*
  name: InsertAndGetIdAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertAndGetIdAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAndGetIdAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertAndGetIdAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAndGetIdAsync
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertAndGetIdAsync
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAndGetIdAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAsync(`0,CancellationToken)
  name: InsertAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAsync(TEntity, CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertAsync(TEntity, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAsync*
  name: InsertAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAsync
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertAsync
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdate(`0)
  name: InsertOrUpdate(TEntity)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertOrUpdate__0_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdate(`0)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdate(TEntity)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdate(TEntity)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdate(TEntity)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdate(TEntity)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdate*
  name: InsertOrUpdate
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertOrUpdate_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdate
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdate
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdate
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdate
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdate
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAndGetId(`0)
  name: InsertOrUpdateAndGetId(TEntity)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertOrUpdateAndGetId__0_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAndGetId(`0)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAndGetId(TEntity)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAndGetId(TEntity)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAndGetId(TEntity)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAndGetId(TEntity)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAndGetId*
  name: InsertOrUpdateAndGetId
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertOrUpdateAndGetId_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAndGetId
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAndGetId
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAndGetId
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAndGetId
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAndGetId
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAndGetIdAsync(`0,CancellationToken)
  name: InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertOrUpdateAndGetIdAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAndGetIdAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAndGetIdAsync*
  name: InsertOrUpdateAndGetIdAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertOrUpdateAndGetIdAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAndGetIdAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAndGetIdAsync
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAndGetIdAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAsync(`0,CancellationToken)
  name: InsertOrUpdateAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertOrUpdateAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAsync*
  name: InsertOrUpdateAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_InsertOrUpdateAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.InsertOrUpdateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAsync
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.InsertOrUpdateAsync
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).InsertOrUpdateAsync
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Update(`0)
  name: Update(TEntity)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Update__0_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Update(`0)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Update(TEntity)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Update(TEntity)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Update(TEntity)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Update(TEntity)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Update(`1,Action{`0})
  name: Update(TPrimaryKey, Action<TEntity>)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Update__1_Action__0__
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Update(`1,Action{`0})
  name.vb: Update(TPrimaryKey, Action(Of TEntity))
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Update(TPrimaryKey, Action<TEntity>)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Update(TPrimaryKey, Action(Of TEntity))
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Update(TPrimaryKey, Action<TEntity>)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Update(TPrimaryKey, Action(Of TEntity))
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Update*
  name: Update
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_Update_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.Update
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.Update
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).Update
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.Update
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).Update
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.UpdateAsync(`0,CancellationToken)
  name: UpdateAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_UpdateAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.UpdateAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.UpdateAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).UpdateAsync(TEntity, CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.UpdateAsync(TEntity, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).UpdateAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.UpdateAsync(`1,Func{`0,Task},CancellationToken)
  name: UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken)
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_UpdateAsync__1_Func__0_Task__CancellationToken_
  commentId: M:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.UpdateAsync(`1,Func{`0,Task},CancellationToken)
  name.vb: UpdateAsync(TPrimaryKey, Func(Of TEntity, Task), CancellationToken)
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).UpdateAsync(TPrimaryKey, Func(Of TEntity, Task), CancellationToken)
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken)
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).UpdateAsync(TPrimaryKey, Func(Of TEntity, Task), CancellationToken)
- uid: Aviant.DDD.Core.Persistence.IRepositoryWrite`2.UpdateAsync*
  name: UpdateAsync
  href: api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html#Aviant_DDD_Core_Persistence_IRepositoryWrite_2_UpdateAsync_
  commentId: Overload:Aviant.DDD.Core.Persistence.IRepositoryWrite`2.UpdateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Persistence.IRepositoryWrite<TEntity, TPrimaryKey>.UpdateAsync
  fullName.vb: Aviant.DDD.Core.Persistence.IRepositoryWrite(Of TEntity, TPrimaryKey).UpdateAsync
  nameWithType: IRepositoryWrite<TEntity, TPrimaryKey>.UpdateAsync
  nameWithType.vb: IRepositoryWrite(Of TEntity, TPrimaryKey).UpdateAsync
- uid: Aviant.DDD.Core.Services
  name: Aviant.DDD.Core.Services
  href: api/Aviant.DDD.Core.Services.html
  commentId: N:Aviant.DDD.Core.Services
  fullName: Aviant.DDD.Core.Services
  nameWithType: Aviant.DDD.Core.Services
- uid: Aviant.DDD.Core.Services.IEventDeserializer
  name: IEventDeserializer
  href: api/Aviant.DDD.Core.Services.IEventDeserializer.html
  commentId: T:Aviant.DDD.Core.Services.IEventDeserializer
  fullName: Aviant.DDD.Core.Services.IEventDeserializer
  nameWithType: IEventDeserializer
- uid: Aviant.DDD.Core.Services.IEventDeserializer.Deserialize*
  name: Deserialize
  href: api/Aviant.DDD.Core.Services.IEventDeserializer.html#Aviant_DDD_Core_Services_IEventDeserializer_Deserialize_
  commentId: Overload:Aviant.DDD.Core.Services.IEventDeserializer.Deserialize
  isSpec: "True"
  fullName: Aviant.DDD.Core.Services.IEventDeserializer.Deserialize
  nameWithType: IEventDeserializer.Deserialize
- uid: Aviant.DDD.Core.Services.IEventDeserializer.Deserialize``1(System.String,System.Byte[])
  name: Deserialize<TAggregateId>(String, Byte[])
  href: api/Aviant.DDD.Core.Services.IEventDeserializer.html#Aviant_DDD_Core_Services_IEventDeserializer_Deserialize__1_System_String_System_Byte___
  commentId: M:Aviant.DDD.Core.Services.IEventDeserializer.Deserialize``1(System.String,System.Byte[])
  name.vb: Deserialize(Of TAggregateId)(String, Byte())
  fullName: Aviant.DDD.Core.Services.IEventDeserializer.Deserialize<TAggregateId>(System.String, System.Byte[])
  fullName.vb: Aviant.DDD.Core.Services.IEventDeserializer.Deserialize(Of TAggregateId)(System.String, System.Byte())
  nameWithType: IEventDeserializer.Deserialize<TAggregateId>(String, Byte[])
  nameWithType.vb: IEventDeserializer.Deserialize(Of TAggregateId)(String, Byte())
- uid: Aviant.DDD.Core.Services.IEventDeserializer.Deserialize``1(System.String,System.String)
  name: Deserialize<TAggregateId>(String, String)
  href: api/Aviant.DDD.Core.Services.IEventDeserializer.html#Aviant_DDD_Core_Services_IEventDeserializer_Deserialize__1_System_String_System_String_
  commentId: M:Aviant.DDD.Core.Services.IEventDeserializer.Deserialize``1(System.String,System.String)
  name.vb: Deserialize(Of TAggregateId)(String, String)
  fullName: Aviant.DDD.Core.Services.IEventDeserializer.Deserialize<TAggregateId>(System.String, System.String)
  fullName.vb: Aviant.DDD.Core.Services.IEventDeserializer.Deserialize(Of TAggregateId)(System.String, System.String)
  nameWithType: IEventDeserializer.Deserialize<TAggregateId>(String, String)
  nameWithType.vb: IEventDeserializer.Deserialize(Of TAggregateId)(String, String)
- uid: Aviant.DDD.Core.Services.IEventsService`2
  name: IEventsService<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Core.Services.IEventsService-2.html
  commentId: T:Aviant.DDD.Core.Services.IEventsService`2
  name.vb: IEventsService(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Core.Services.IEventsService<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Core.Services.IEventsService(Of TAggregate, TAggregateId)
  nameWithType: IEventsService<TAggregate, TAggregateId>
  nameWithType.vb: IEventsService(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Core.Services.IEventsService`2.PersistAsync(`0,CancellationToken)
  name: PersistAsync(TAggregate, CancellationToken)
  href: api/Aviant.DDD.Core.Services.IEventsService-2.html#Aviant_DDD_Core_Services_IEventsService_2_PersistAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Core.Services.IEventsService`2.PersistAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Core.Services.IEventsService<TAggregate, TAggregateId>.PersistAsync(TAggregate, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Services.IEventsService(Of TAggregate, TAggregateId).PersistAsync(TAggregate, CancellationToken)
  nameWithType: IEventsService<TAggregate, TAggregateId>.PersistAsync(TAggregate, CancellationToken)
  nameWithType.vb: IEventsService(Of TAggregate, TAggregateId).PersistAsync(TAggregate, CancellationToken)
- uid: Aviant.DDD.Core.Services.IEventsService`2.PersistAsync*
  name: PersistAsync
  href: api/Aviant.DDD.Core.Services.IEventsService-2.html#Aviant_DDD_Core_Services_IEventsService_2_PersistAsync_
  commentId: Overload:Aviant.DDD.Core.Services.IEventsService`2.PersistAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Services.IEventsService<TAggregate, TAggregateId>.PersistAsync
  fullName.vb: Aviant.DDD.Core.Services.IEventsService(Of TAggregate, TAggregateId).PersistAsync
  nameWithType: IEventsService<TAggregate, TAggregateId>.PersistAsync
  nameWithType.vb: IEventsService(Of TAggregate, TAggregateId).PersistAsync
- uid: Aviant.DDD.Core.Services.IEventsService`2.RehydrateAsync(`1,CancellationToken)
  name: RehydrateAsync(TAggregateId, CancellationToken)
  href: api/Aviant.DDD.Core.Services.IEventsService-2.html#Aviant_DDD_Core_Services_IEventsService_2_RehydrateAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Core.Services.IEventsService`2.RehydrateAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Core.Services.IEventsService<TAggregate, TAggregateId>.RehydrateAsync(TAggregateId, CancellationToken)
  fullName.vb: Aviant.DDD.Core.Services.IEventsService(Of TAggregate, TAggregateId).RehydrateAsync(TAggregateId, CancellationToken)
  nameWithType: IEventsService<TAggregate, TAggregateId>.RehydrateAsync(TAggregateId, CancellationToken)
  nameWithType.vb: IEventsService(Of TAggregate, TAggregateId).RehydrateAsync(TAggregateId, CancellationToken)
- uid: Aviant.DDD.Core.Services.IEventsService`2.RehydrateAsync*
  name: RehydrateAsync
  href: api/Aviant.DDD.Core.Services.IEventsService-2.html#Aviant_DDD_Core_Services_IEventsService_2_RehydrateAsync_
  commentId: Overload:Aviant.DDD.Core.Services.IEventsService`2.RehydrateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Core.Services.IEventsService<TAggregate, TAggregateId>.RehydrateAsync
  fullName.vb: Aviant.DDD.Core.Services.IEventsService(Of TAggregate, TAggregateId).RehydrateAsync
  nameWithType: IEventsService<TAggregate, TAggregateId>.RehydrateAsync
  nameWithType.vb: IEventsService(Of TAggregate, TAggregateId).RehydrateAsync
- uid: Aviant.DDD.Core.Services.IRetry
  name: IRetry
  href: api/Aviant.DDD.Core.Services.IRetry.html
  commentId: T:Aviant.DDD.Core.Services.IRetry
  fullName: Aviant.DDD.Core.Services.IRetry
  nameWithType: IRetry
- uid: Aviant.DDD.Core.Services.IRetry.RetryPolicy
  name: RetryPolicy()
  href: api/Aviant.DDD.Core.Services.IRetry.html#Aviant_DDD_Core_Services_IRetry_RetryPolicy
  commentId: M:Aviant.DDD.Core.Services.IRetry.RetryPolicy
  fullName: Aviant.DDD.Core.Services.IRetry.RetryPolicy()
  nameWithType: IRetry.RetryPolicy()
- uid: Aviant.DDD.Core.Services.IRetry.RetryPolicy*
  name: RetryPolicy
  href: api/Aviant.DDD.Core.Services.IRetry.html#Aviant_DDD_Core_Services_IRetry_RetryPolicy_
  commentId: Overload:Aviant.DDD.Core.Services.IRetry.RetryPolicy
  isSpec: "True"
  fullName: Aviant.DDD.Core.Services.IRetry.RetryPolicy
  nameWithType: IRetry.RetryPolicy
- uid: Aviant.DDD.Core.Services.IServiceContainer
  name: IServiceContainer
  href: api/Aviant.DDD.Core.Services.IServiceContainer.html
  commentId: T:Aviant.DDD.Core.Services.IServiceContainer
  fullName: Aviant.DDD.Core.Services.IServiceContainer
  nameWithType: IServiceContainer
- uid: Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService(Type)
  name: GetRequiredService(Type)
  href: api/Aviant.DDD.Core.Services.IServiceContainer.html#Aviant_DDD_Core_Services_IServiceContainer_GetRequiredService_Type_
  commentId: M:Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService(Type)
  fullName: Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService(Type)
  nameWithType: IServiceContainer.GetRequiredService(Type)
- uid: Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService*
  name: GetRequiredService
  href: api/Aviant.DDD.Core.Services.IServiceContainer.html#Aviant_DDD_Core_Services_IServiceContainer_GetRequiredService_
  commentId: Overload:Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService
  isSpec: "True"
  fullName: Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService
  nameWithType: IServiceContainer.GetRequiredService
- uid: Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService``1(Type)
  name: GetRequiredService<T>(Type)
  href: api/Aviant.DDD.Core.Services.IServiceContainer.html#Aviant_DDD_Core_Services_IServiceContainer_GetRequiredService__1_Type_
  commentId: M:Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService``1(Type)
  name.vb: GetRequiredService(Of T)(Type)
  fullName: Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService<T>(Type)
  fullName.vb: Aviant.DDD.Core.Services.IServiceContainer.GetRequiredService(Of T)(Type)
  nameWithType: IServiceContainer.GetRequiredService<T>(Type)
  nameWithType.vb: IServiceContainer.GetRequiredService(Of T)(Type)
- uid: Aviant.DDD.Core.Services.IServiceContainer.GetService(Type)
  name: GetService(Type)
  href: api/Aviant.DDD.Core.Services.IServiceContainer.html#Aviant_DDD_Core_Services_IServiceContainer_GetService_Type_
  commentId: M:Aviant.DDD.Core.Services.IServiceContainer.GetService(Type)
  fullName: Aviant.DDD.Core.Services.IServiceContainer.GetService(Type)
  nameWithType: IServiceContainer.GetService(Type)
- uid: Aviant.DDD.Core.Services.IServiceContainer.GetService*
  name: GetService
  href: api/Aviant.DDD.Core.Services.IServiceContainer.html#Aviant_DDD_Core_Services_IServiceContainer_GetService_
  commentId: Overload:Aviant.DDD.Core.Services.IServiceContainer.GetService
  isSpec: "True"
  fullName: Aviant.DDD.Core.Services.IServiceContainer.GetService
  nameWithType: IServiceContainer.GetService
- uid: Aviant.DDD.Core.Services.IServiceContainer.GetService``1(Type)
  name: GetService<T>(Type)
  href: api/Aviant.DDD.Core.Services.IServiceContainer.html#Aviant_DDD_Core_Services_IServiceContainer_GetService__1_Type_
  commentId: M:Aviant.DDD.Core.Services.IServiceContainer.GetService``1(Type)
  name.vb: GetService(Of T)(Type)
  fullName: Aviant.DDD.Core.Services.IServiceContainer.GetService<T>(Type)
  fullName.vb: Aviant.DDD.Core.Services.IServiceContainer.GetService(Of T)(Type)
  nameWithType: IServiceContainer.GetService<T>(Type)
  nameWithType.vb: IServiceContainer.GetService(Of T)(Type)
- uid: Aviant.DDD.Core.Services.ServiceLocator
  name: ServiceLocator
  href: api/Aviant.DDD.Core.Services.ServiceLocator.html
  commentId: T:Aviant.DDD.Core.Services.ServiceLocator
  fullName: Aviant.DDD.Core.Services.ServiceLocator
  nameWithType: ServiceLocator
- uid: Aviant.DDD.Core.Services.ServiceLocator.Initialise(IServiceProvider)
  name: Initialise(IServiceProvider)
  href: api/Aviant.DDD.Core.Services.ServiceLocator.html#Aviant_DDD_Core_Services_ServiceLocator_Initialise_IServiceProvider_
  commentId: M:Aviant.DDD.Core.Services.ServiceLocator.Initialise(IServiceProvider)
  fullName: Aviant.DDD.Core.Services.ServiceLocator.Initialise(IServiceProvider)
  nameWithType: ServiceLocator.Initialise(IServiceProvider)
- uid: Aviant.DDD.Core.Services.ServiceLocator.Initialise*
  name: Initialise
  href: api/Aviant.DDD.Core.Services.ServiceLocator.html#Aviant_DDD_Core_Services_ServiceLocator_Initialise_
  commentId: Overload:Aviant.DDD.Core.Services.ServiceLocator.Initialise
  isSpec: "True"
  fullName: Aviant.DDD.Core.Services.ServiceLocator.Initialise
  nameWithType: ServiceLocator.Initialise
- uid: Aviant.DDD.Core.Services.ServiceLocator.ServiceContainer
  name: ServiceContainer
  href: api/Aviant.DDD.Core.Services.ServiceLocator.html#Aviant_DDD_Core_Services_ServiceLocator_ServiceContainer
  commentId: P:Aviant.DDD.Core.Services.ServiceLocator.ServiceContainer
  fullName: Aviant.DDD.Core.Services.ServiceLocator.ServiceContainer
  nameWithType: ServiceLocator.ServiceContainer
- uid: Aviant.DDD.Core.Services.ServiceLocator.ServiceContainer*
  name: ServiceContainer
  href: api/Aviant.DDD.Core.Services.ServiceLocator.html#Aviant_DDD_Core_Services_ServiceLocator_ServiceContainer_
  commentId: Overload:Aviant.DDD.Core.Services.ServiceLocator.ServiceContainer
  isSpec: "True"
  fullName: Aviant.DDD.Core.Services.ServiceLocator.ServiceContainer
  nameWithType: ServiceLocator.ServiceContainer
- uid: Aviant.DDD.Core.TransferObjects
  name: Aviant.DDD.Core.TransferObjects
  href: api/Aviant.DDD.Core.TransferObjects.html
  commentId: N:Aviant.DDD.Core.TransferObjects
  fullName: Aviant.DDD.Core.TransferObjects
  nameWithType: Aviant.DDD.Core.TransferObjects
- uid: Aviant.DDD.Core.TransferObjects.Dto
  name: Dto
  href: api/Aviant.DDD.Core.TransferObjects.Dto.html
  commentId: T:Aviant.DDD.Core.TransferObjects.Dto
  fullName: Aviant.DDD.Core.TransferObjects.Dto
  nameWithType: Dto
- uid: Aviant.DDD.Core.TransferObjects.Eto
  name: Eto
  href: api/Aviant.DDD.Core.TransferObjects.Eto.html
  commentId: T:Aviant.DDD.Core.TransferObjects.Eto
  fullName: Aviant.DDD.Core.TransferObjects.Eto
  nameWithType: Eto
- uid: Aviant.DDD.Core.TransferObjects.TransferObject
  name: TransferObject
  href: api/Aviant.DDD.Core.TransferObjects.TransferObject.html
  commentId: T:Aviant.DDD.Core.TransferObjects.TransferObject
  fullName: Aviant.DDD.Core.TransferObjects.TransferObject
  nameWithType: TransferObject
- uid: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson
  name: ToJson()
  href: api/Aviant.DDD.Core.TransferObjects.TransferObject.html#Aviant_DDD_Core_TransferObjects_TransferObject_ToJson
  commentId: M:Aviant.DDD.Core.TransferObjects.TransferObject.ToJson
  fullName: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson()
  nameWithType: TransferObject.ToJson()
- uid: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(Formatting)
  name: ToJson(Formatting)
  href: api/Aviant.DDD.Core.TransferObjects.TransferObject.html#Aviant_DDD_Core_TransferObjects_TransferObject_ToJson_Formatting_
  commentId: M:Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(Formatting)
  fullName: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(Formatting)
  nameWithType: TransferObject.ToJson(Formatting)
- uid: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(Formatting,JsonSerializerSettings)
  name: ToJson(Formatting, JsonSerializerSettings)
  href: api/Aviant.DDD.Core.TransferObjects.TransferObject.html#Aviant_DDD_Core_TransferObjects_TransferObject_ToJson_Formatting_JsonSerializerSettings_
  commentId: M:Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(Formatting,JsonSerializerSettings)
  fullName: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(Formatting, JsonSerializerSettings)
  nameWithType: TransferObject.ToJson(Formatting, JsonSerializerSettings)
- uid: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(JsonSerializerSettings)
  name: ToJson(JsonSerializerSettings)
  href: api/Aviant.DDD.Core.TransferObjects.TransferObject.html#Aviant_DDD_Core_TransferObjects_TransferObject_ToJson_JsonSerializerSettings_
  commentId: M:Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(JsonSerializerSettings)
  fullName: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson(JsonSerializerSettings)
  nameWithType: TransferObject.ToJson(JsonSerializerSettings)
- uid: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson*
  name: ToJson
  href: api/Aviant.DDD.Core.TransferObjects.TransferObject.html#Aviant_DDD_Core_TransferObjects_TransferObject_ToJson_
  commentId: Overload:Aviant.DDD.Core.TransferObjects.TransferObject.ToJson
  isSpec: "True"
  fullName: Aviant.DDD.Core.TransferObjects.TransferObject.ToJson
  nameWithType: TransferObject.ToJson
- uid: Aviant.DDD.Core.Validators
  name: Aviant.DDD.Core.Validators
  href: api/Aviant.DDD.Core.Validators.html
  commentId: N:Aviant.DDD.Core.Validators
  fullName: Aviant.DDD.Core.Validators
  nameWithType: Aviant.DDD.Core.Validators
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator
  name: AssertionsConcernValidator
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html
  commentId: T:Aviant.DDD.Core.Validators.AssertionsConcernValidator
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator
  nameWithType: AssertionsConcernValidator
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasLengthEqual(System.String,System.Int32,System.String)
  name: HasLengthEqual(String, Int32, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_HasLengthEqual_System_String_System_Int32_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasLengthEqual(System.String,System.Int32,System.String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasLengthEqual(System.String, System.Int32, System.String)
  nameWithType: AssertionsConcernValidator.HasLengthEqual(String, Int32, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasLengthEqual*
  name: HasLengthEqual
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_HasLengthEqual_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasLengthEqual
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasLengthEqual
  nameWithType: AssertionsConcernValidator.HasLengthEqual
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasMinimumLength(System.String,System.Int32,System.String)
  name: HasMinimumLength(String, Int32, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_HasMinimumLength_System_String_System_Int32_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasMinimumLength(System.String,System.Int32,System.String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasMinimumLength(System.String, System.Int32, System.String)
  nameWithType: AssertionsConcernValidator.HasMinimumLength(String, Int32, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasMinimumLength*
  name: HasMinimumLength
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_HasMinimumLength_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasMinimumLength
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasMinimumLength
  nameWithType: AssertionsConcernValidator.HasMinimumLength
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasNotifications
  name: HasNotifications()
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_HasNotifications
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasNotifications
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasNotifications()
  nameWithType: AssertionsConcernValidator.HasNotifications()
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasNotifications*
  name: HasNotifications
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_HasNotifications_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasNotifications
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.HasNotifications
  nameWithType: AssertionsConcernValidator.HasNotifications
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsDateEqual(DateTime,DateTime,System.String)
  name: IsDateEqual(DateTime, DateTime, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsDateEqual_DateTime_DateTime_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsDateEqual(DateTime,DateTime,System.String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsDateEqual(DateTime, DateTime, System.String)
  nameWithType: AssertionsConcernValidator.IsDateEqual(DateTime, DateTime, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsDateEqual*
  name: IsDateEqual
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsDateEqual_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsDateEqual
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsDateEqual
  nameWithType: AssertionsConcernValidator.IsDateEqual
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual(System.Int32,System.Int32,System.String)
  name: IsEqual(Int32, Int32, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsEqual_System_Int32_System_Int32_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual(System.Int32,System.Int32,System.String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual(System.Int32, System.Int32, System.String)
  nameWithType: AssertionsConcernValidator.IsEqual(Int32, Int32, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual(System.String,System.String,System.String)
  name: IsEqual(String, String, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsEqual_System_String_System_String_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual(System.String,System.String,System.String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual(System.String, System.String, System.String)
  nameWithType: AssertionsConcernValidator.IsEqual(String, String, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual*
  name: IsEqual
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsEqual_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsEqual
  nameWithType: AssertionsConcernValidator.IsEqual
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable{DateTime},DateTime,System.String)
  name: IsGreaterThan(Nullable<DateTime>, DateTime, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGreaterThan_System_Nullable_DateTime__DateTime_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable{DateTime},DateTime,System.String)
  name.vb: IsGreaterThan(Nullable(Of DateTime), DateTime, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable<DateTime>, DateTime, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable(Of DateTime), DateTime, System.String)
  nameWithType: AssertionsConcernValidator.IsGreaterThan(Nullable<DateTime>, DateTime, String)
  nameWithType.vb: AssertionsConcernValidator.IsGreaterThan(Nullable(Of DateTime), DateTime, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable{System.Decimal},System.Decimal,System.String)
  name: IsGreaterThan(Nullable<Decimal>, Decimal, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGreaterThan_System_Nullable_System_Decimal__System_Decimal_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable{System.Decimal},System.Decimal,System.String)
  name.vb: IsGreaterThan(Nullable(Of Decimal), Decimal, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable<System.Decimal>, System.Decimal, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable(Of System.Decimal), System.Decimal, System.String)
  nameWithType: AssertionsConcernValidator.IsGreaterThan(Nullable<Decimal>, Decimal, String)
  nameWithType.vb: AssertionsConcernValidator.IsGreaterThan(Nullable(Of Decimal), Decimal, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable{System.Int32},System.Int32,System.String)
  name: IsGreaterThan(Nullable<Int32>, Int32, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGreaterThan_System_Nullable_System_Int32__System_Int32_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable{System.Int32},System.Int32,System.String)
  name.vb: IsGreaterThan(Nullable(Of Int32), Int32, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable<System.Int32>, System.Int32, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan(System.Nullable(Of System.Int32), System.Int32, System.String)
  nameWithType: AssertionsConcernValidator.IsGreaterThan(Nullable<Int32>, Int32, String)
  nameWithType.vb: AssertionsConcernValidator.IsGreaterThan(Nullable(Of Int32), Int32, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan*
  name: IsGreaterThan
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGreaterThan_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThan
  nameWithType: AssertionsConcernValidator.IsGreaterThan
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable{DateTime},DateTime,System.String)
  name: IsGreaterThanOrEqual(Nullable<DateTime>, DateTime, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGreaterThanOrEqual_System_Nullable_DateTime__DateTime_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable{DateTime},DateTime,System.String)
  name.vb: IsGreaterThanOrEqual(Nullable(Of DateTime), DateTime, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable<DateTime>, DateTime, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable(Of DateTime), DateTime, System.String)
  nameWithType: AssertionsConcernValidator.IsGreaterThanOrEqual(Nullable<DateTime>, DateTime, String)
  nameWithType.vb: AssertionsConcernValidator.IsGreaterThanOrEqual(Nullable(Of DateTime), DateTime, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable{System.Decimal},System.Decimal,System.String)
  name: IsGreaterThanOrEqual(Nullable<Decimal>, Decimal, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGreaterThanOrEqual_System_Nullable_System_Decimal__System_Decimal_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable{System.Decimal},System.Decimal,System.String)
  name.vb: IsGreaterThanOrEqual(Nullable(Of Decimal), Decimal, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable<System.Decimal>, System.Decimal, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable(Of System.Decimal), System.Decimal, System.String)
  nameWithType: AssertionsConcernValidator.IsGreaterThanOrEqual(Nullable<Decimal>, Decimal, String)
  nameWithType.vb: AssertionsConcernValidator.IsGreaterThanOrEqual(Nullable(Of Decimal), Decimal, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable{System.Int32},System.Int32,System.String)
  name: IsGreaterThanOrEqual(Nullable<Int32>, Int32, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGreaterThanOrEqual_System_Nullable_System_Int32__System_Int32_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable{System.Int32},System.Int32,System.String)
  name.vb: IsGreaterThanOrEqual(Nullable(Of Int32), Int32, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable<System.Int32>, System.Int32, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual(System.Nullable(Of System.Int32), System.Int32, System.String)
  nameWithType: AssertionsConcernValidator.IsGreaterThanOrEqual(Nullable<Int32>, Int32, String)
  nameWithType.vb: AssertionsConcernValidator.IsGreaterThanOrEqual(Nullable(Of Int32), Int32, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual*
  name: IsGreaterThanOrEqual
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGreaterThanOrEqual_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGreaterThanOrEqual
  nameWithType: AssertionsConcernValidator.IsGreaterThanOrEqual
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotEmpty(Guid,System.String)
  name: IsGuidNotEmpty(Guid, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGuidNotEmpty_Guid_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotEmpty(Guid,System.String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotEmpty(Guid, System.String)
  nameWithType: AssertionsConcernValidator.IsGuidNotEmpty(Guid, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotEmpty*
  name: IsGuidNotEmpty
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGuidNotEmpty_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotEmpty
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotEmpty
  nameWithType: AssertionsConcernValidator.IsGuidNotEmpty
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotNull(System.Nullable{Guid},System.String)
  name: IsGuidNotNull(Nullable<Guid>, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGuidNotNull_System_Nullable_Guid__System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotNull(System.Nullable{Guid},System.String)
  name.vb: IsGuidNotNull(Nullable(Of Guid), String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotNull(System.Nullable<Guid>, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotNull(System.Nullable(Of Guid), System.String)
  nameWithType: AssertionsConcernValidator.IsGuidNotNull(Nullable<Guid>, String)
  nameWithType.vb: AssertionsConcernValidator.IsGuidNotNull(Nullable(Of Guid), String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotNull*
  name: IsGuidNotNull
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsGuidNotNull_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotNull
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsGuidNotNull
  nameWithType: AssertionsConcernValidator.IsGuidNotNull
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable{DateTime},DateTime,System.String)
  name: IsLowerThan(Nullable<DateTime>, DateTime, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsLowerThan_System_Nullable_DateTime__DateTime_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable{DateTime},DateTime,System.String)
  name.vb: IsLowerThan(Nullable(Of DateTime), DateTime, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable<DateTime>, DateTime, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable(Of DateTime), DateTime, System.String)
  nameWithType: AssertionsConcernValidator.IsLowerThan(Nullable<DateTime>, DateTime, String)
  nameWithType.vb: AssertionsConcernValidator.IsLowerThan(Nullable(Of DateTime), DateTime, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable{System.Decimal},System.Decimal,System.String)
  name: IsLowerThan(Nullable<Decimal>, Decimal, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsLowerThan_System_Nullable_System_Decimal__System_Decimal_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable{System.Decimal},System.Decimal,System.String)
  name.vb: IsLowerThan(Nullable(Of Decimal), Decimal, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable<System.Decimal>, System.Decimal, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable(Of System.Decimal), System.Decimal, System.String)
  nameWithType: AssertionsConcernValidator.IsLowerThan(Nullable<Decimal>, Decimal, String)
  nameWithType.vb: AssertionsConcernValidator.IsLowerThan(Nullable(Of Decimal), Decimal, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable{System.Int32},System.Int32,System.String)
  name: IsLowerThan(Nullable<Int32>, Int32, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsLowerThan_System_Nullable_System_Int32__System_Int32_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable{System.Int32},System.Int32,System.String)
  name.vb: IsLowerThan(Nullable(Of Int32), Int32, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable<System.Int32>, System.Int32, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan(System.Nullable(Of System.Int32), System.Int32, System.String)
  nameWithType: AssertionsConcernValidator.IsLowerThan(Nullable<Int32>, Int32, String)
  nameWithType.vb: AssertionsConcernValidator.IsLowerThan(Nullable(Of Int32), Int32, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan*
  name: IsLowerThan
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsLowerThan_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThan
  nameWithType: AssertionsConcernValidator.IsLowerThan
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable{DateTime},DateTime,System.String)
  name: IsLowerThanOrEqual(Nullable<DateTime>, DateTime, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsLowerThanOrEqual_System_Nullable_DateTime__DateTime_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable{DateTime},DateTime,System.String)
  name.vb: IsLowerThanOrEqual(Nullable(Of DateTime), DateTime, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable<DateTime>, DateTime, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable(Of DateTime), DateTime, System.String)
  nameWithType: AssertionsConcernValidator.IsLowerThanOrEqual(Nullable<DateTime>, DateTime, String)
  nameWithType.vb: AssertionsConcernValidator.IsLowerThanOrEqual(Nullable(Of DateTime), DateTime, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable{System.Decimal},System.Decimal,System.String)
  name: IsLowerThanOrEqual(Nullable<Decimal>, Decimal, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsLowerThanOrEqual_System_Nullable_System_Decimal__System_Decimal_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable{System.Decimal},System.Decimal,System.String)
  name.vb: IsLowerThanOrEqual(Nullable(Of Decimal), Decimal, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable<System.Decimal>, System.Decimal, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable(Of System.Decimal), System.Decimal, System.String)
  nameWithType: AssertionsConcernValidator.IsLowerThanOrEqual(Nullable<Decimal>, Decimal, String)
  nameWithType.vb: AssertionsConcernValidator.IsLowerThanOrEqual(Nullable(Of Decimal), Decimal, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable{System.Int32},System.Int32,System.String)
  name: IsLowerThanOrEqual(Nullable<Int32>, Int32, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsLowerThanOrEqual_System_Nullable_System_Int32__System_Int32_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable{System.Int32},System.Int32,System.String)
  name.vb: IsLowerThanOrEqual(Nullable(Of Int32), Int32, String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable<System.Int32>, System.Int32, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual(System.Nullable(Of System.Int32), System.Int32, System.String)
  nameWithType: AssertionsConcernValidator.IsLowerThanOrEqual(Nullable<Int32>, Int32, String)
  nameWithType.vb: AssertionsConcernValidator.IsLowerThanOrEqual(Nullable(Of Int32), Int32, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual*
  name: IsLowerThanOrEqual
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsLowerThanOrEqual_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsLowerThanOrEqual
  nameWithType: AssertionsConcernValidator.IsLowerThanOrEqual
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNotNull(System.Nullable{System.Object},System.String)
  name: IsNotNull(Nullable<Object>, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsNotNull_System_Nullable_System_Object__System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNotNull(System.Nullable{System.Object},System.String)
  name.vb: IsNotNull(Nullable(Of Object), String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNotNull(System.Nullable<System.Object>, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNotNull(System.Nullable(Of System.Object), System.String)
  nameWithType: AssertionsConcernValidator.IsNotNull(Nullable<Object>, String)
  nameWithType.vb: AssertionsConcernValidator.IsNotNull(Nullable(Of Object), String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNotNull*
  name: IsNotNull
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsNotNull_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNotNull
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNotNull
  nameWithType: AssertionsConcernValidator.IsNotNull
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNull(System.Nullable{System.Object},System.String)
  name: IsNull(Nullable<Object>, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsNull_System_Nullable_System_Object__System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNull(System.Nullable{System.Object},System.String)
  name.vb: IsNull(Nullable(Of Object), String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNull(System.Nullable<System.Object>, System.String)
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNull(System.Nullable(Of System.Object), System.String)
  nameWithType: AssertionsConcernValidator.IsNull(Nullable<Object>, String)
  nameWithType.vb: AssertionsConcernValidator.IsNull(Nullable(Of Object), String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNull*
  name: IsNull
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsNull_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNull
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsNull
  nameWithType: AssertionsConcernValidator.IsNull
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsSatisfiedBy(Func{System.Boolean}[])
  name: IsSatisfiedBy(Func<Boolean>[])
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsSatisfiedBy_Func_System_Boolean____
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsSatisfiedBy(Func{System.Boolean}[])
  name.vb: IsSatisfiedBy(Func(Of Boolean)())
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsSatisfiedBy(Func<System.Boolean>[])
  fullName.vb: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsSatisfiedBy(Func(Of System.Boolean)())
  nameWithType: AssertionsConcernValidator.IsSatisfiedBy(Func<Boolean>[])
  nameWithType.vb: AssertionsConcernValidator.IsSatisfiedBy(Func(Of Boolean)())
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsSatisfiedBy*
  name: IsSatisfiedBy
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsSatisfiedBy_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsSatisfiedBy
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsSatisfiedBy
  nameWithType: AssertionsConcernValidator.IsSatisfiedBy
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsStringNotNullOrWhiteSpace(System.String,System.String)
  name: IsStringNotNullOrWhiteSpace(String, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsStringNotNullOrWhiteSpace_System_String_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsStringNotNullOrWhiteSpace(System.String,System.String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsStringNotNullOrWhiteSpace(System.String, System.String)
  nameWithType: AssertionsConcernValidator.IsStringNotNullOrWhiteSpace(String, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsStringNotNullOrWhiteSpace*
  name: IsStringNotNullOrWhiteSpace
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_IsStringNotNullOrWhiteSpace_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsStringNotNullOrWhiteSpace
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.IsStringNotNullOrWhiteSpace
  nameWithType: AssertionsConcernValidator.IsStringNotNullOrWhiteSpace
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.ValidateGuidFromString(System.String,System.String,System.String,System.String)
  name: ValidateGuidFromString(String, String, String, String)
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_ValidateGuidFromString_System_String_System_String_System_String_System_String_
  commentId: M:Aviant.DDD.Core.Validators.AssertionsConcernValidator.ValidateGuidFromString(System.String,System.String,System.String,System.String)
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.ValidateGuidFromString(System.String, System.String, System.String, System.String)
  nameWithType: AssertionsConcernValidator.ValidateGuidFromString(String, String, String, String)
- uid: Aviant.DDD.Core.Validators.AssertionsConcernValidator.ValidateGuidFromString*
  name: ValidateGuidFromString
  href: api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html#Aviant_DDD_Core_Validators_AssertionsConcernValidator_ValidateGuidFromString_
  commentId: Overload:Aviant.DDD.Core.Validators.AssertionsConcernValidator.ValidateGuidFromString
  isSpec: "True"
  fullName: Aviant.DDD.Core.Validators.AssertionsConcernValidator.ValidateGuidFromString
  nameWithType: AssertionsConcernValidator.ValidateGuidFromString
- uid: Aviant.DDD.Core.ValueObjects
  name: Aviant.DDD.Core.ValueObjects
  href: api/Aviant.DDD.Core.ValueObjects.html
  commentId: N:Aviant.DDD.Core.ValueObjects
  fullName: Aviant.DDD.Core.ValueObjects
  nameWithType: Aviant.DDD.Core.ValueObjects
- uid: Aviant.DDD.Core.ValueObjects.ValueObject
  name: ValueObject
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html
  commentId: T:Aviant.DDD.Core.ValueObjects.ValueObject
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject
  nameWithType: ValueObject
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.Equals(Aviant.DDD.Core.ValueObjects.ValueObject)
  name: Equals(ValueObject)
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_Equals_Aviant_DDD_Core_ValueObjects_ValueObject_
  commentId: M:Aviant.DDD.Core.ValueObjects.ValueObject.Equals(Aviant.DDD.Core.ValueObjects.ValueObject)
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.Equals(Aviant.DDD.Core.ValueObjects.ValueObject)
  nameWithType: ValueObject.Equals(ValueObject)
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_Equals_System_Nullable_System_Object__
  commentId: M:Aviant.DDD.Core.ValueObjects.ValueObject.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.Equals(System.Nullable<System.Object>)
  fullName.vb: Aviant.DDD.Core.ValueObjects.ValueObject.Equals(System.Nullable(Of System.Object))
  nameWithType: ValueObject.Equals(Nullable<Object>)
  nameWithType.vb: ValueObject.Equals(Nullable(Of Object))
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.Equals*
  name: Equals
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_Equals_
  commentId: Overload:Aviant.DDD.Core.ValueObjects.ValueObject.Equals
  isSpec: "True"
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.Equals
  nameWithType: ValueObject.Equals
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.GetHashCode
  name: GetHashCode()
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_GetHashCode
  commentId: M:Aviant.DDD.Core.ValueObjects.ValueObject.GetHashCode
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.GetHashCode()
  nameWithType: ValueObject.GetHashCode()
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.GetHashCode*
  name: GetHashCode
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_GetHashCode_
  commentId: Overload:Aviant.DDD.Core.ValueObjects.ValueObject.GetHashCode
  isSpec: "True"
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.GetHashCode
  nameWithType: ValueObject.GetHashCode
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.HashValue(System.Int32,System.Nullable{System.Object})
  name: HashValue(Int32, Nullable<Object>)
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_HashValue_System_Int32_System_Nullable_System_Object__
  commentId: M:Aviant.DDD.Core.ValueObjects.ValueObject.HashValue(System.Int32,System.Nullable{System.Object})
  name.vb: HashValue(Int32, Nullable(Of Object))
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.HashValue(System.Int32, System.Nullable<System.Object>)
  fullName.vb: Aviant.DDD.Core.ValueObjects.ValueObject.HashValue(System.Int32, System.Nullable(Of System.Object))
  nameWithType: ValueObject.HashValue(Int32, Nullable<Object>)
  nameWithType.vb: ValueObject.HashValue(Int32, Nullable(Of Object))
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.HashValue*
  name: HashValue
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_HashValue_
  commentId: Overload:Aviant.DDD.Core.ValueObjects.ValueObject.HashValue
  isSpec: "True"
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.HashValue
  nameWithType: ValueObject.HashValue
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.op_Equality(Aviant.DDD.Core.ValueObjects.ValueObject,Aviant.DDD.Core.ValueObjects.ValueObject)
  name: Equality(ValueObject, ValueObject)
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_op_Equality_Aviant_DDD_Core_ValueObjects_ValueObject_Aviant_DDD_Core_ValueObjects_ValueObject_
  commentId: M:Aviant.DDD.Core.ValueObjects.ValueObject.op_Equality(Aviant.DDD.Core.ValueObjects.ValueObject,Aviant.DDD.Core.ValueObjects.ValueObject)
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.Equality(Aviant.DDD.Core.ValueObjects.ValueObject, Aviant.DDD.Core.ValueObjects.ValueObject)
  nameWithType: ValueObject.Equality(ValueObject, ValueObject)
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.op_Equality*
  name: Equality
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_op_Equality_
  commentId: Overload:Aviant.DDD.Core.ValueObjects.ValueObject.op_Equality
  isSpec: "True"
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.Equality
  nameWithType: ValueObject.Equality
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.op_Inequality(Aviant.DDD.Core.ValueObjects.ValueObject,Aviant.DDD.Core.ValueObjects.ValueObject)
  name: Inequality(ValueObject, ValueObject)
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_op_Inequality_Aviant_DDD_Core_ValueObjects_ValueObject_Aviant_DDD_Core_ValueObjects_ValueObject_
  commentId: M:Aviant.DDD.Core.ValueObjects.ValueObject.op_Inequality(Aviant.DDD.Core.ValueObjects.ValueObject,Aviant.DDD.Core.ValueObjects.ValueObject)
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.Inequality(Aviant.DDD.Core.ValueObjects.ValueObject, Aviant.DDD.Core.ValueObjects.ValueObject)
  nameWithType: ValueObject.Inequality(ValueObject, ValueObject)
- uid: Aviant.DDD.Core.ValueObjects.ValueObject.op_Inequality*
  name: Inequality
  href: api/Aviant.DDD.Core.ValueObjects.ValueObject.html#Aviant_DDD_Core_ValueObjects_ValueObject_op_Inequality_
  commentId: Overload:Aviant.DDD.Core.ValueObjects.ValueObject.op_Inequality
  isSpec: "True"
  fullName: Aviant.DDD.Core.ValueObjects.ValueObject.Inequality
  nameWithType: ValueObject.Inequality
- uid: Aviant.DDD.Infrastructure.CrossCutting
  name: Aviant.DDD.Infrastructure.CrossCutting
  href: api/Aviant.DDD.Infrastructure.CrossCutting.html
  commentId: N:Aviant.DDD.Infrastructure.CrossCutting
  fullName: Aviant.DDD.Infrastructure.CrossCutting
  nameWithType: Aviant.DDD.Infrastructure.CrossCutting
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry
  name: DependencyInjectionRegistry
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html
  commentId: T:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry
  nameWithType: DependencyInjectionRegistry
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationBuilder
  name: ConfigurationBuilder
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_ConfigurationBuilder
  commentId: P:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationBuilder
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationBuilder
  nameWithType: DependencyInjectionRegistry.ConfigurationBuilder
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationBuilder*
  name: ConfigurationBuilder
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_ConfigurationBuilder_
  commentId: Overload:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationBuilder
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationBuilder
  nameWithType: DependencyInjectionRegistry.ConfigurationBuilder
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationWithDomains
  name: ConfigurationWithDomains
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_ConfigurationWithDomains
  commentId: P:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationWithDomains
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationWithDomains
  nameWithType: DependencyInjectionRegistry.ConfigurationWithDomains
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationWithDomains*
  name: ConfigurationWithDomains
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_ConfigurationWithDomains_
  commentId: Overload:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationWithDomains
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.ConfigurationWithDomains
  nameWithType: DependencyInjectionRegistry.ConfigurationWithDomains
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.CurrentEnvironment
  name: CurrentEnvironment
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_CurrentEnvironment
  commentId: P:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.CurrentEnvironment
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.CurrentEnvironment
  nameWithType: DependencyInjectionRegistry.CurrentEnvironment
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.CurrentEnvironment*
  name: CurrentEnvironment
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_CurrentEnvironment_
  commentId: Overload:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.CurrentEnvironment
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.CurrentEnvironment
  nameWithType: DependencyInjectionRegistry.CurrentEnvironment
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.DefaultConfiguration
  name: DefaultConfiguration
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_DefaultConfiguration
  commentId: P:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.DefaultConfiguration
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.DefaultConfiguration
  nameWithType: DependencyInjectionRegistry.DefaultConfiguration
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.DefaultConfiguration*
  name: DefaultConfiguration
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_DefaultConfiguration_
  commentId: Overload:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.DefaultConfiguration
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.DefaultConfiguration
  nameWithType: DependencyInjectionRegistry.DefaultConfiguration
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.GetDomainConfiguration(System.String)
  name: GetDomainConfiguration(String)
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_GetDomainConfiguration_System_String_
  commentId: M:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.GetDomainConfiguration(System.String)
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.GetDomainConfiguration(System.String)
  nameWithType: DependencyInjectionRegistry.GetDomainConfiguration(String)
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.GetDomainConfiguration*
  name: GetDomainConfiguration
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_GetDomainConfiguration_
  commentId: Overload:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.GetDomainConfiguration
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.GetDomainConfiguration
  nameWithType: DependencyInjectionRegistry.GetDomainConfiguration
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.SetConfiguration(IConfigurationBuilder)
  name: SetConfiguration(IConfigurationBuilder)
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_SetConfiguration_IConfigurationBuilder_
  commentId: M:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.SetConfiguration(IConfigurationBuilder)
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.SetConfiguration(IConfigurationBuilder)
  nameWithType: DependencyInjectionRegistry.SetConfiguration(IConfigurationBuilder)
- uid: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.SetConfiguration*
  name: SetConfiguration
  href: api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html#Aviant_DDD_Infrastructure_CrossCutting_DependencyInjectionRegistry_SetConfiguration_
  commentId: Overload:Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.SetConfiguration
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.SetConfiguration
  nameWithType: DependencyInjectionRegistry.SetConfiguration
- uid: Aviant.DDD.Infrastructure.Exceptions
  name: Aviant.DDD.Infrastructure.Exceptions
  href: api/Aviant.DDD.Infrastructure.Exceptions.html
  commentId: N:Aviant.DDD.Infrastructure.Exceptions
  fullName: Aviant.DDD.Infrastructure.Exceptions
  nameWithType: Aviant.DDD.Infrastructure.Exceptions
- uid: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException
  name: InfrastructureException
  href: api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html
  commentId: T:Aviant.DDD.Infrastructure.Exceptions.InfrastructureException
  fullName: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException
  nameWithType: InfrastructureException
- uid: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor
  name: InfrastructureException()
  href: api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html#Aviant_DDD_Infrastructure_Exceptions_InfrastructureException__ctor
  commentId: M:Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor
  fullName: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.InfrastructureException()
  nameWithType: InfrastructureException.InfrastructureException()
- uid: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor(SerializationInfo,StreamingContext)
  name: InfrastructureException(SerializationInfo, StreamingContext)
  href: api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html#Aviant_DDD_Infrastructure_Exceptions_InfrastructureException__ctor_SerializationInfo_StreamingContext_
  commentId: M:Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor(SerializationInfo,StreamingContext)
  fullName: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.InfrastructureException(SerializationInfo, StreamingContext)
  nameWithType: InfrastructureException.InfrastructureException(SerializationInfo, StreamingContext)
- uid: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor(System.String)
  name: InfrastructureException(String)
  href: api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html#Aviant_DDD_Infrastructure_Exceptions_InfrastructureException__ctor_System_String_
  commentId: M:Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor(System.String)
  fullName: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.InfrastructureException(System.String)
  nameWithType: InfrastructureException.InfrastructureException(String)
- uid: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor(System.String,Exception)
  name: InfrastructureException(String, Exception)
  href: api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html#Aviant_DDD_Infrastructure_Exceptions_InfrastructureException__ctor_System_String_Exception_
  commentId: M:Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor(System.String,Exception)
  fullName: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.InfrastructureException(System.String, Exception)
  nameWithType: InfrastructureException.InfrastructureException(String, Exception)
- uid: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{Exception})
  name: InfrastructureException(String, Int32, Nullable<Int32>, Nullable<Exception>)
  href: api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html#Aviant_DDD_Infrastructure_Exceptions_InfrastructureException__ctor_System_String_System_Int32_System_Nullable_System_Int32__System_Nullable_Exception__
  commentId: M:Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{Exception})
  name.vb: InfrastructureException(String, Int32, Nullable(Of Int32), Nullable(Of Exception))
  fullName: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.InfrastructureException(System.String, System.Int32, System.Nullable<System.Int32>, System.Nullable<Exception>)
  fullName.vb: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.InfrastructureException(System.String, System.Int32, System.Nullable(Of System.Int32), System.Nullable(Of Exception))
  nameWithType: InfrastructureException.InfrastructureException(String, Int32, Nullable<Int32>, Nullable<Exception>)
  nameWithType.vb: InfrastructureException.InfrastructureException(String, Int32, Nullable(Of Int32), Nullable(Of Exception))
- uid: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor*
  name: InfrastructureException
  href: api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html#Aviant_DDD_Infrastructure_Exceptions_InfrastructureException__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.InfrastructureException
  nameWithType: InfrastructureException.InfrastructureException
- uid: Aviant.DDD.Infrastructure.Persistence
  name: Aviant.DDD.Infrastructure.Persistence
  href: api/Aviant.DDD.Infrastructure.Persistence.html
  commentId: N:Aviant.DDD.Infrastructure.Persistence
  fullName: Aviant.DDD.Infrastructure.Persistence
  nameWithType: Aviant.DDD.Infrastructure.Persistence
- uid: Aviant.DDD.Infrastructure.Persistence.Configurations
  name: Aviant.DDD.Infrastructure.Persistence.Configurations
  href: api/Aviant.DDD.Infrastructure.Persistence.Configurations.html
  commentId: N:Aviant.DDD.Infrastructure.Persistence.Configurations
  fullName: Aviant.DDD.Infrastructure.Persistence.Configurations
  nameWithType: Aviant.DDD.Infrastructure.Persistence.Configurations
- uid: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration`2
  name: EntityConfiguration<TEntity, T>
  href: api/Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration-2.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration`2
  name.vb: EntityConfiguration(Of TEntity, T)
  fullName: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration<TEntity, T>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration(Of TEntity, T)
  nameWithType: EntityConfiguration<TEntity, T>
  nameWithType.vb: EntityConfiguration(Of TEntity, T)
- uid: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration`2.Configure(EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<TEntity>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration-2.html#Aviant_DDD_Infrastructure_Persistence_Configurations_EntityConfiguration_2_Configure_EntityTypeBuilder__0__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration`2.Configure(EntityTypeBuilder{`0})
  name.vb: Configure(EntityTypeBuilder(Of TEntity))
  fullName: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration<TEntity, T>.Configure(EntityTypeBuilder<TEntity>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration(Of TEntity, T).Configure(EntityTypeBuilder(Of TEntity))
  nameWithType: EntityConfiguration<TEntity, T>.Configure(EntityTypeBuilder<TEntity>)
  nameWithType.vb: EntityConfiguration(Of TEntity, T).Configure(EntityTypeBuilder(Of TEntity))
- uid: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration`2.Configure*
  name: Configure
  href: api/Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration-2.html#Aviant_DDD_Infrastructure_Persistence_Configurations_EntityConfiguration_2_Configure_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration`2.Configure
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration<TEntity, T>.Configure
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration(Of TEntity, T).Configure
  nameWithType: EntityConfiguration<TEntity, T>.Configure
  nameWithType.vb: EntityConfiguration(Of TEntity, T).Configure
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts
  name: Aviant.DDD.Infrastructure.Persistence.Contexts
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.html
  commentId: N:Aviant.DDD.Infrastructure.Persistence.Contexts
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts
  nameWithType: Aviant.DDD.Infrastructure.Persistence.Contexts
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`1
  name: ApiAuthorizationDbContext<TUser>
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-1.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`1
  name.vb: ApiAuthorizationDbContext(Of TUser)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser)
  nameWithType: ApiAuthorizationDbContext<TUser>
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`1.#ctor(DbContextOptions,IOptions{OperationalStoreOptions})
  name: ApiAuthorizationDbContext(DbContextOptions, IOptions<OperationalStoreOptions>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_1__ctor_DbContextOptions_IOptions_OperationalStoreOptions__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`1.#ctor(DbContextOptions,IOptions{OperationalStoreOptions})
  name.vb: ApiAuthorizationDbContext(DbContextOptions, IOptions(Of OperationalStoreOptions))
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser>.ApiAuthorizationDbContext(DbContextOptions, IOptions<OperationalStoreOptions>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser).ApiAuthorizationDbContext(DbContextOptions, IOptions(Of OperationalStoreOptions))
  nameWithType: ApiAuthorizationDbContext<TUser>.ApiAuthorizationDbContext(DbContextOptions, IOptions<OperationalStoreOptions>)
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser).ApiAuthorizationDbContext(DbContextOptions, IOptions(Of OperationalStoreOptions))
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`1.#ctor*
  name: ApiAuthorizationDbContext
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_1__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser>.ApiAuthorizationDbContext
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser).ApiAuthorizationDbContext
  nameWithType: ApiAuthorizationDbContext<TUser>.ApiAuthorizationDbContext
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser).ApiAuthorizationDbContext
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3
  name: ApiAuthorizationDbContext<TUser, TRole, TKey>
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3
  name.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey)
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.#ctor(DbContextOptions,IOptions{OperationalStoreOptions})
  name: ApiAuthorizationDbContext(DbContextOptions, IOptions<OperationalStoreOptions>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_3__ctor_DbContextOptions_IOptions_OperationalStoreOptions__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.#ctor(DbContextOptions,IOptions{OperationalStoreOptions})
  name.vb: ApiAuthorizationDbContext(DbContextOptions, IOptions(Of OperationalStoreOptions))
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>.ApiAuthorizationDbContext(DbContextOptions, IOptions<OperationalStoreOptions>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey).ApiAuthorizationDbContext(DbContextOptions, IOptions(Of OperationalStoreOptions))
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>.ApiAuthorizationDbContext(DbContextOptions, IOptions<OperationalStoreOptions>)
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey).ApiAuthorizationDbContext(DbContextOptions, IOptions(Of OperationalStoreOptions))
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.#ctor*
  name: ApiAuthorizationDbContext
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_3__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>.ApiAuthorizationDbContext
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey).ApiAuthorizationDbContext
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>.ApiAuthorizationDbContext
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey).ApiAuthorizationDbContext
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.DeviceFlowCodes
  name: DeviceFlowCodes
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_3_DeviceFlowCodes
  commentId: P:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.DeviceFlowCodes
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>.DeviceFlowCodes
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey).DeviceFlowCodes
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>.DeviceFlowCodes
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey).DeviceFlowCodes
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.DeviceFlowCodes*
  name: DeviceFlowCodes
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_3_DeviceFlowCodes_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.DeviceFlowCodes
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>.DeviceFlowCodes
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey).DeviceFlowCodes
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>.DeviceFlowCodes
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey).DeviceFlowCodes
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.OnModelCreating(ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_3_OnModelCreating_ModelBuilder_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.OnModelCreating(ModelBuilder)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>.OnModelCreating(ModelBuilder)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey).OnModelCreating(ModelBuilder)
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>.OnModelCreating(ModelBuilder)
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey).OnModelCreating(ModelBuilder)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.OnModelCreating*
  name: OnModelCreating
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_3_OnModelCreating_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.OnModelCreating
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>.OnModelCreating
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey).OnModelCreating
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>.OnModelCreating
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey).OnModelCreating
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.PersistedGrants
  name: PersistedGrants
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_3_PersistedGrants
  commentId: P:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.PersistedGrants
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>.PersistedGrants
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey).PersistedGrants
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>.PersistedGrants
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey).PersistedGrants
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.PersistedGrants*
  name: PersistedGrants
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_ApiAuthorizationDbContext_3_PersistedGrants_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext`3.PersistedGrants
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TUser, TRole, TKey>.PersistedGrants
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext(Of TUser, TRole, TKey).PersistedGrants
  nameWithType: ApiAuthorizationDbContext<TUser, TRole, TKey>.PersistedGrants
  nameWithType.vb: ApiAuthorizationDbContext(Of TUser, TRole, TKey).PersistedGrants
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2
  name: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2
  name.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole)
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.#ctor(DbContextOptions,IOptions{OperationalStoreOptions})
  name: AuthorizationDbContextRead(DbContextOptions, IOptions<OperationalStoreOptions>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2__ctor_DbContextOptions_IOptions_OperationalStoreOptions__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.#ctor(DbContextOptions,IOptions{OperationalStoreOptions})
  name.vb: AuthorizationDbContextRead(DbContextOptions, IOptions(Of OperationalStoreOptions))
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.AuthorizationDbContextRead(DbContextOptions, IOptions<OperationalStoreOptions>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).AuthorizationDbContextRead(DbContextOptions, IOptions(Of OperationalStoreOptions))
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.AuthorizationDbContextRead(DbContextOptions, IOptions<OperationalStoreOptions>)
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).AuthorizationDbContextRead(DbContextOptions, IOptions(Of OperationalStoreOptions))
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.#ctor*
  name: AuthorizationDbContextRead
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.AuthorizationDbContextRead
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).AuthorizationDbContextRead
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.AuthorizationDbContextRead
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).AuthorizationDbContextRead
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.OnModelCreating(ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2_OnModelCreating_ModelBuilder_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.OnModelCreating(ModelBuilder)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.OnModelCreating(ModelBuilder)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).OnModelCreating(ModelBuilder)
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.OnModelCreating(ModelBuilder)
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).OnModelCreating(ModelBuilder)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.OnModelCreating*
  name: OnModelCreating
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2_OnModelCreating_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.OnModelCreating
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.OnModelCreating
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).OnModelCreating
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.OnModelCreating
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).OnModelCreating
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChanges
  name: SaveChanges()
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2_SaveChanges
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChanges
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChanges()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChanges()
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChanges()
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChanges()
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChanges(System.Boolean)
  name: SaveChanges(Boolean)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2_SaveChanges_System_Boolean_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChanges(System.Boolean)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChanges(System.Boolean)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChanges(System.Boolean)
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChanges(Boolean)
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChanges(Boolean)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChanges*
  name: SaveChanges
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2_SaveChanges_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChanges
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChanges
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChanges
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChanges
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChanges
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChangesAsync(CancellationToken)
  name: SaveChangesAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2_SaveChangesAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChangesAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChangesAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChangesAsync(CancellationToken)
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChangesAsync(CancellationToken)
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChangesAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChangesAsync(System.Boolean,CancellationToken)
  name: SaveChangesAsync(Boolean, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2_SaveChangesAsync_System_Boolean_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChangesAsync(System.Boolean,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChangesAsync(System.Boolean, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChangesAsync(System.Boolean, CancellationToken)
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChangesAsync(Boolean, CancellationToken)
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChangesAsync(Boolean, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextRead_2_SaveChangesAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead`2.SaveChangesAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChangesAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChangesAsync
  nameWithType: AuthorizationDbContextRead<TApplicationUser, TApplicationRole>.SaveChangesAsync
  nameWithType.vb: AuthorizationDbContextRead(Of TApplicationUser, TApplicationRole).SaveChangesAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3
  name: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3
  name.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole)
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.#ctor(DbContextOptions,IOptions{OperationalStoreOptions})
  name: AuthorizationDbContextWrite(DbContextOptions, IOptions<OperationalStoreOptions>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextWrite_3__ctor_DbContextOptions_IOptions_OperationalStoreOptions__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.#ctor(DbContextOptions,IOptions{OperationalStoreOptions})
  name.vb: AuthorizationDbContextWrite(DbContextOptions, IOptions(Of OperationalStoreOptions))
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.AuthorizationDbContextWrite(DbContextOptions, IOptions<OperationalStoreOptions>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).AuthorizationDbContextWrite(DbContextOptions, IOptions(Of OperationalStoreOptions))
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.AuthorizationDbContextWrite(DbContextOptions, IOptions<OperationalStoreOptions>)
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).AuthorizationDbContextWrite(DbContextOptions, IOptions(Of OperationalStoreOptions))
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.#ctor*
  name: AuthorizationDbContextWrite
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextWrite_3__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.AuthorizationDbContextWrite
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).AuthorizationDbContextWrite
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.AuthorizationDbContextWrite
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).AuthorizationDbContextWrite
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.AddConfigurationAssemblyFromEntity*
  name: AddConfigurationAssemblyFromEntity
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextWrite_3_AddConfigurationAssemblyFromEntity_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.AddConfigurationAssemblyFromEntity
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.AddConfigurationAssemblyFromEntity
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).AddConfigurationAssemblyFromEntity
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.AddConfigurationAssemblyFromEntity
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).AddConfigurationAssemblyFromEntity
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.AddConfigurationAssemblyFromEntity``2(Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration{``0,``1})
  name: AddConfigurationAssemblyFromEntity<TEntity, TKey>(EntityConfiguration<TEntity, TKey>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextWrite_3_AddConfigurationAssemblyFromEntity__2_Aviant_DDD_Infrastructure_Persistence_Configurations_EntityConfiguration___0___1__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.AddConfigurationAssemblyFromEntity``2(Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration{``0,``1})
  name.vb: AddConfigurationAssemblyFromEntity(Of TEntity, TKey)(EntityConfiguration(Of TEntity, TKey))
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.AddConfigurationAssemblyFromEntity<TEntity, TKey>(Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration<TEntity, TKey>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).AddConfigurationAssemblyFromEntity(Of TEntity, TKey)(Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration(Of TEntity, TKey))
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.AddConfigurationAssemblyFromEntity<TEntity, TKey>(EntityConfiguration<TEntity, TKey>)
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).AddConfigurationAssemblyFromEntity(Of TEntity, TKey)(EntityConfiguration(Of TEntity, TKey))
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.OnModelCreating(ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextWrite_3_OnModelCreating_ModelBuilder_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.OnModelCreating(ModelBuilder)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.OnModelCreating(ModelBuilder)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).OnModelCreating(ModelBuilder)
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.OnModelCreating(ModelBuilder)
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).OnModelCreating(ModelBuilder)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.OnModelCreating*
  name: OnModelCreating
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextWrite_3_OnModelCreating_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.OnModelCreating
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.OnModelCreating
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).OnModelCreating
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.OnModelCreating
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).OnModelCreating
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.SaveChangesAsync(CancellationToken)
  name: SaveChangesAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextWrite_3_SaveChangesAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.SaveChangesAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.SaveChangesAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).SaveChangesAsync(CancellationToken)
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.SaveChangesAsync(CancellationToken)
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).SaveChangesAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Contexts_AuthorizationDbContextWrite_3_SaveChangesAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite`3.SaveChangesAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.SaveChangesAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).SaveChangesAsync
  nameWithType: AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole>.SaveChangesAsync
  nameWithType.vb: AuthorizationDbContextWrite(Of TDbContext, TApplicationUser, TApplicationRole).SaveChangesAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead
  name: DbContextRead
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead
  nameWithType: DbContextRead
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.#ctor(DbContextOptions)
  name: DbContextRead(DbContextOptions)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead__ctor_DbContextOptions_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.#ctor(DbContextOptions)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.DbContextRead(DbContextOptions)
  nameWithType: DbContextRead.DbContextRead(DbContextOptions)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.#ctor*
  name: DbContextRead
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.DbContextRead
  nameWithType: DbContextRead.DbContextRead
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.OnModelCreating(ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead_OnModelCreating_ModelBuilder_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.OnModelCreating(ModelBuilder)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.OnModelCreating(ModelBuilder)
  nameWithType: DbContextRead.OnModelCreating(ModelBuilder)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.OnModelCreating*
  name: OnModelCreating
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead_OnModelCreating_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.OnModelCreating
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.OnModelCreating
  nameWithType: DbContextRead.OnModelCreating
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges
  name: SaveChanges()
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead_SaveChanges
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges()
  nameWithType: DbContextRead.SaveChanges()
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges(System.Boolean)
  name: SaveChanges(Boolean)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead_SaveChanges_System_Boolean_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges(System.Boolean)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges(System.Boolean)
  nameWithType: DbContextRead.SaveChanges(Boolean)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges*
  name: SaveChanges
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead_SaveChanges_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChanges
  nameWithType: DbContextRead.SaveChanges
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync(CancellationToken)
  name: SaveChangesAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead_SaveChangesAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync(CancellationToken)
  nameWithType: DbContextRead.SaveChangesAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync(System.Boolean,CancellationToken)
  name: SaveChangesAsync(Boolean, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead_SaveChangesAsync_System_Boolean_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync(System.Boolean,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync(System.Boolean, CancellationToken)
  nameWithType: DbContextRead.SaveChangesAsync(Boolean, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextRead_SaveChangesAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.SaveChangesAsync
  nameWithType: DbContextRead.SaveChangesAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1
  name: DbContextWrite<TDbContext>
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1
  name.vb: DbContextWrite(Of TDbContext)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext)
  nameWithType: DbContextWrite<TDbContext>
  nameWithType.vb: DbContextWrite(Of TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.#ctor(DbContextOptions)
  name: DbContextWrite(DbContextOptions)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextWrite_1__ctor_DbContextOptions_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.#ctor(DbContextOptions)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>.DbContextWrite(DbContextOptions)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext).DbContextWrite(DbContextOptions)
  nameWithType: DbContextWrite<TDbContext>.DbContextWrite(DbContextOptions)
  nameWithType.vb: DbContextWrite(Of TDbContext).DbContextWrite(DbContextOptions)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.#ctor*
  name: DbContextWrite
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextWrite_1__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>.DbContextWrite
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext).DbContextWrite
  nameWithType: DbContextWrite<TDbContext>.DbContextWrite
  nameWithType.vb: DbContextWrite(Of TDbContext).DbContextWrite
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.AddConfigurationAssemblyFromEntity*
  name: AddConfigurationAssemblyFromEntity
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextWrite_1_AddConfigurationAssemblyFromEntity_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.AddConfigurationAssemblyFromEntity
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>.AddConfigurationAssemblyFromEntity
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext).AddConfigurationAssemblyFromEntity
  nameWithType: DbContextWrite<TDbContext>.AddConfigurationAssemblyFromEntity
  nameWithType.vb: DbContextWrite(Of TDbContext).AddConfigurationAssemblyFromEntity
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.AddConfigurationAssemblyFromEntity``2(Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration{``0,``1})
  name: AddConfigurationAssemblyFromEntity<TEntity, TKey>(EntityConfiguration<TEntity, TKey>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextWrite_1_AddConfigurationAssemblyFromEntity__2_Aviant_DDD_Infrastructure_Persistence_Configurations_EntityConfiguration___0___1__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.AddConfigurationAssemblyFromEntity``2(Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration{``0,``1})
  name.vb: AddConfigurationAssemblyFromEntity(Of TEntity, TKey)(EntityConfiguration(Of TEntity, TKey))
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>.AddConfigurationAssemblyFromEntity<TEntity, TKey>(Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration<TEntity, TKey>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext).AddConfigurationAssemblyFromEntity(Of TEntity, TKey)(Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration(Of TEntity, TKey))
  nameWithType: DbContextWrite<TDbContext>.AddConfigurationAssemblyFromEntity<TEntity, TKey>(EntityConfiguration<TEntity, TKey>)
  nameWithType.vb: DbContextWrite(Of TDbContext).AddConfigurationAssemblyFromEntity(Of TEntity, TKey)(EntityConfiguration(Of TEntity, TKey))
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.OnModelCreating(ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextWrite_1_OnModelCreating_ModelBuilder_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.OnModelCreating(ModelBuilder)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>.OnModelCreating(ModelBuilder)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext).OnModelCreating(ModelBuilder)
  nameWithType: DbContextWrite<TDbContext>.OnModelCreating(ModelBuilder)
  nameWithType.vb: DbContextWrite(Of TDbContext).OnModelCreating(ModelBuilder)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.OnModelCreating*
  name: OnModelCreating
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextWrite_1_OnModelCreating_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.OnModelCreating
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>.OnModelCreating
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext).OnModelCreating
  nameWithType: DbContextWrite<TDbContext>.OnModelCreating
  nameWithType.vb: DbContextWrite(Of TDbContext).OnModelCreating
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.SaveChangesAsync(CancellationToken)
  name: SaveChangesAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextWrite_1_SaveChangesAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.SaveChangesAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>.SaveChangesAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext).SaveChangesAsync(CancellationToken)
  nameWithType: DbContextWrite<TDbContext>.SaveChangesAsync(CancellationToken)
  nameWithType.vb: DbContextWrite(Of TDbContext).SaveChangesAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html#Aviant_DDD_Infrastructure_Persistence_Contexts_DbContextWrite_1_SaveChangesAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite`1.SaveChangesAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite<TDbContext>.SaveChangesAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite(Of TDbContext).SaveChangesAsync
  nameWithType: DbContextWrite<TDbContext>.SaveChangesAsync
  nameWithType.vb: DbContextWrite(Of TDbContext).SaveChangesAsync
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore
  name: Aviant.DDD.Infrastructure.Persistence.EventStore
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.html
  commentId: N:Aviant.DDD.Infrastructure.Persistence.EventStore
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore
  nameWithType: Aviant.DDD.Infrastructure.Persistence.EventStore
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper
  name: EventStoreConnectionWrapper
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper
  nameWithType: EventStoreConnectionWrapper
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.#ctor(Uri,ILogger{Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper})
  name: EventStoreConnectionWrapper(Uri, ILogger<EventStoreConnectionWrapper>)
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreConnectionWrapper__ctor_Uri_ILogger_Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreConnectionWrapper__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.#ctor(Uri,ILogger{Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper})
  name.vb: EventStoreConnectionWrapper(Uri, ILogger(Of EventStoreConnectionWrapper))
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.EventStoreConnectionWrapper(Uri, ILogger<Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.EventStoreConnectionWrapper(Uri, ILogger(Of Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper))
  nameWithType: EventStoreConnectionWrapper.EventStoreConnectionWrapper(Uri, ILogger<EventStoreConnectionWrapper>)
  nameWithType.vb: EventStoreConnectionWrapper.EventStoreConnectionWrapper(Uri, ILogger(Of EventStoreConnectionWrapper))
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.#ctor*
  name: EventStoreConnectionWrapper
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreConnectionWrapper__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.EventStoreConnectionWrapper
  nameWithType: EventStoreConnectionWrapper.EventStoreConnectionWrapper
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.Dispose
  name: Dispose()
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreConnectionWrapper_Dispose
  commentId: M:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.Dispose
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.Dispose()
  nameWithType: EventStoreConnectionWrapper.Dispose()
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.Dispose*
  name: Dispose
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreConnectionWrapper_Dispose_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.Dispose
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.Dispose
  nameWithType: EventStoreConnectionWrapper.Dispose
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.GetConnectionAsync(CancellationToken)
  name: GetConnectionAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreConnectionWrapper_GetConnectionAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.GetConnectionAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.GetConnectionAsync(CancellationToken)
  nameWithType: EventStoreConnectionWrapper.GetConnectionAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.GetConnectionAsync*
  name: GetConnectionAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreConnectionWrapper_GetConnectionAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.GetConnectionAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.GetConnectionAsync
  nameWithType: EventStoreConnectionWrapper.GetConnectionAsync
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry
  name: EventStoreExtensionRegistry
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry
  nameWithType: EventStoreExtensionRegistry
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsRepository*
  name: AddEventsRepository
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreExtensionRegistry_AddEventsRepository_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsRepository
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsRepository
  nameWithType: EventStoreExtensionRegistry.AddEventsRepository
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsRepository``2(IServiceCollection)
  name: AddEventsRepository<TAggregate, TAggregateId>(IServiceCollection)
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreExtensionRegistry_AddEventsRepository__2_IServiceCollection_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsRepository``2(IServiceCollection)
  name.vb: AddEventsRepository(Of TAggregate, TAggregateId)(IServiceCollection)
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsRepository<TAggregate, TAggregateId>(IServiceCollection)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsRepository(Of TAggregate, TAggregateId)(IServiceCollection)
  nameWithType: EventStoreExtensionRegistry.AddEventsRepository<TAggregate, TAggregateId>(IServiceCollection)
  nameWithType.vb: EventStoreExtensionRegistry.AddEventsRepository(Of TAggregate, TAggregateId)(IServiceCollection)
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsService*
  name: AddEventsService
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreExtensionRegistry_AddEventsService_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsService
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsService
  nameWithType: EventStoreExtensionRegistry.AddEventsService
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsService``2(IServiceCollection)
  name: AddEventsService<TAggregate, TAggregateId>(IServiceCollection)
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.html#Aviant_DDD_Infrastructure_Persistence_EventStore_EventStoreExtensionRegistry_AddEventsService__2_IServiceCollection_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsService``2(IServiceCollection)
  name.vb: AddEventsService(Of TAggregate, TAggregateId)(IServiceCollection)
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsService<TAggregate, TAggregateId>(IServiceCollection)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.AddEventsService(Of TAggregate, TAggregateId)(IServiceCollection)
  nameWithType: EventStoreExtensionRegistry.AddEventsService<TAggregate, TAggregateId>(IServiceCollection)
  nameWithType.vb: EventStoreExtensionRegistry.AddEventsService(Of TAggregate, TAggregateId)(IServiceCollection)
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper
  name: IEventStoreConnectionWrapper
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper
  nameWithType: IEventStoreConnectionWrapper
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.GetConnectionAsync(CancellationToken)
  name: GetConnectionAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.html#Aviant_DDD_Infrastructure_Persistence_EventStore_IEventStoreConnectionWrapper_GetConnectionAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.GetConnectionAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.GetConnectionAsync(CancellationToken)
  nameWithType: IEventStoreConnectionWrapper.GetConnectionAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.GetConnectionAsync*
  name: GetConnectionAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.html#Aviant_DDD_Infrastructure_Persistence_EventStore_IEventStoreConnectionWrapper_GetConnectionAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.GetConnectionAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.GetConnectionAsync
  nameWithType: IEventStoreConnectionWrapper.GetConnectionAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka
  name: Aviant.DDD.Infrastructure.Persistence.Kafka
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.html
  commentId: N:Aviant.DDD.Infrastructure.Persistence.Kafka
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka
  nameWithType: Aviant.DDD.Infrastructure.Persistence.Kafka
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3
  name: EventConsumer<TAggregate, TAggregateId, TDeserializer>
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3
  name.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer)
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer)
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer)
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.#ctor(IEventDeserializer,Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig,ILogger{Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer{`0,`1,`2}})
  name: EventConsumer(IEventDeserializer, EventConsumerConfig, ILogger<EventConsumer<TAggregate, TAggregateId, TDeserializer>>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3__ctor_IEventDeserializer_Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumerConfig_ILogger_Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer__0__1__2___
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.#ctor(IEventDeserializer,Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig,ILogger{Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer{`0,`1,`2}})
  name.vb: EventConsumer(IEventDeserializer, EventConsumerConfig, ILogger(Of EventConsumer(Of TAggregate, TAggregateId, TDeserializer)))
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.EventConsumer(IEventDeserializer, Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig, ILogger<Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).EventConsumer(IEventDeserializer, Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig, ILogger(Of Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer)))
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.EventConsumer(IEventDeserializer, EventConsumerConfig, ILogger<EventConsumer<TAggregate, TAggregateId, TDeserializer>>)
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).EventConsumer(IEventDeserializer, EventConsumerConfig, ILogger(Of EventConsumer(Of TAggregate, TAggregateId, TDeserializer)))
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.#ctor*
  name: EventConsumer
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.EventConsumer
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).EventConsumer
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.EventConsumer
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).EventConsumer
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ConsumeAsync(CancellationToken)
  name: ConsumeAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3_ConsumeAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ConsumeAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumeAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumeAsync(CancellationToken)
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumeAsync(CancellationToken)
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumeAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ConsumeAsync*
  name: ConsumeAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3_ConsumeAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ConsumeAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumeAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumeAsync
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumeAsync
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumeAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ConsumerStopped
  name: ConsumerStopped
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3_ConsumerStopped
  commentId: E:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ConsumerStopped
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStopped
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumerStopped
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStopped
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumerStopped
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ConsumerStoppedHandler
  name: EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStoppedHandler
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.ConsumerStoppedHandler.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ConsumerStoppedHandler
  name.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumerStoppedHandler
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStoppedHandler
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumerStoppedHandler
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStoppedHandler
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ConsumerStoppedHandler
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.Dispose
  name: Dispose()
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3_Dispose
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.Dispose
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.Dispose()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).Dispose()
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.Dispose()
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).Dispose()
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.Dispose*
  name: Dispose
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3_Dispose_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.Dispose
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.Dispose
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).Dispose
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.Dispose
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).Dispose
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.EventReceived
  name: EventReceived
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3_EventReceived
  commentId: E:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.EventReceived
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.EventReceived
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).EventReceived
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.EventReceived
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).EventReceived
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ExceptionThrown
  name: ExceptionThrown
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumer_3_ExceptionThrown
  commentId: E:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ExceptionThrown
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrown
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ExceptionThrown
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrown
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ExceptionThrown
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ExceptionThrownHandler
  name: EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrownHandler
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.ExceptionThrownHandler.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer`3.ExceptionThrownHandler
  name.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ExceptionThrownHandler
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrownHandler
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ExceptionThrownHandler
  nameWithType: EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrownHandler
  nameWithType.vb: EventConsumer(Of TAggregate, TAggregateId, TDeserializer).ExceptionThrownHandler
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig
  name: EventConsumerConfig
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig
  nameWithType: EventConsumerConfig
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.#ctor(System.String,System.String,System.String)
  name: EventConsumerConfig(String, String, String)
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumerConfig__ctor_System_String_System_String_System_String_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.#ctor(System.String,System.String,System.String)
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.EventConsumerConfig(System.String, System.String, System.String)
  nameWithType: EventConsumerConfig.EventConsumerConfig(String, String, String)
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.#ctor*
  name: EventConsumerConfig
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.html#Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumerConfig__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.EventConsumerConfig
  nameWithType: EventConsumerConfig.EventConsumerConfig
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry
  name: KafkaExtensionRegistry
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry
  nameWithType: KafkaExtensionRegistry
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.AddKafkaEventProducer*
  name: AddKafkaEventProducer
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.html#Aviant_DDD_Infrastructure_Persistence_Kafka_KafkaExtensionRegistry_AddKafkaEventProducer_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.AddKafkaEventProducer
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.AddKafkaEventProducer
  nameWithType: KafkaExtensionRegistry.AddKafkaEventProducer
- uid: Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.AddKafkaEventProducer``2(IServiceCollection,Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig)
  name: AddKafkaEventProducer<TAggregate, TAggregateId>(IServiceCollection, EventConsumerConfig)
  href: api/Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.html#Aviant_DDD_Infrastructure_Persistence_Kafka_KafkaExtensionRegistry_AddKafkaEventProducer__2_IServiceCollection_Aviant_DDD_Infrastructure_Persistence_Kafka_EventConsumerConfig_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.AddKafkaEventProducer``2(IServiceCollection,Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig)
  name.vb: AddKafkaEventProducer(Of TAggregate, TAggregateId)(IServiceCollection, EventConsumerConfig)
  fullName: Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.AddKafkaEventProducer<TAggregate, TAggregateId>(IServiceCollection, Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.AddKafkaEventProducer(Of TAggregate, TAggregateId)(IServiceCollection, Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig)
  nameWithType: KafkaExtensionRegistry.AddKafkaEventProducer<TAggregate, TAggregateId>(IServiceCollection, EventConsumerConfig)
  nameWithType.vb: KafkaExtensionRegistry.AddKafkaEventProducer(Of TAggregate, TAggregateId)(IServiceCollection, EventConsumerConfig)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository
  name: Aviant.DDD.Infrastructure.Persistence.Repository
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.html
  commentId: N:Aviant.DDD.Infrastructure.Persistence.Repository
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository
  nameWithType: Aviant.DDD.Infrastructure.Persistence.Repository
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`3
  name: RepositoryRead<TDbContext, TEntity, TPrimaryKey>
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-3.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`3
  name.vb: RepositoryRead(Of TDbContext, TEntity, TPrimaryKey)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead<TDbContext, TEntity, TPrimaryKey>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead(Of TDbContext, TEntity, TPrimaryKey)
  nameWithType: RepositoryRead<TDbContext, TEntity, TPrimaryKey>
  nameWithType.vb: RepositoryRead(Of TDbContext, TEntity, TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`3.#ctor(`0)
  name: RepositoryRead(TDbContext)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryRead_3__ctor__0_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`3.#ctor(`0)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead<TDbContext, TEntity, TPrimaryKey>.RepositoryRead(TDbContext)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead(Of TDbContext, TEntity, TPrimaryKey).RepositoryRead(TDbContext)
  nameWithType: RepositoryRead<TDbContext, TEntity, TPrimaryKey>.RepositoryRead(TDbContext)
  nameWithType.vb: RepositoryRead(Of TDbContext, TEntity, TPrimaryKey).RepositoryRead(TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`3.#ctor*
  name: RepositoryRead
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryRead_3__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`3.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead<TDbContext, TEntity, TPrimaryKey>.RepositoryRead
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead(Of TDbContext, TEntity, TPrimaryKey).RepositoryRead
  nameWithType: RepositoryRead<TDbContext, TEntity, TPrimaryKey>.RepositoryRead
  nameWithType.vb: RepositoryRead(Of TDbContext, TEntity, TPrimaryKey).RepositoryRead
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`5
  name: RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-5.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`5
  name.vb: RepositoryRead(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey)
  nameWithType: RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>
  nameWithType.vb: RepositoryRead(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`5.#ctor(`0)
  name: RepositoryRead(TDbContext)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-5.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryRead_5__ctor__0_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`5.#ctor(`0)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>.RepositoryRead(TDbContext)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey).RepositoryRead(TDbContext)
  nameWithType: RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>.RepositoryRead(TDbContext)
  nameWithType.vb: RepositoryRead(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey).RepositoryRead(TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`5.#ctor*
  name: RepositoryRead
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-5.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryRead_5__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead`5.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>.RepositoryRead
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey).RepositoryRead
  nameWithType: RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>.RepositoryRead
  nameWithType.vb: RepositoryRead(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey).RepositoryRead
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3
  name: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3
  name.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.#ctor(`0)
  name: RepositoryReadBase(TDbContext)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3__ctor__0_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.#ctor(`0)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.RepositoryReadBase(TDbContext)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).RepositoryReadBase(TDbContext)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.RepositoryReadBase(TDbContext)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).RepositoryReadBase(TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.#ctor*
  name: RepositoryReadBase
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.RepositoryReadBase
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).RepositoryReadBase
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.RepositoryReadBase
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).RepositoryReadBase
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.AllAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name: AllAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_AllAsync_Expression_Func__1_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.AllAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name.vb: AllAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AllAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).AllAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AllAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).AllAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.AllAsync*
  name: AllAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_AllAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.AllAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AllAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).AllAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AllAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).AllAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.AnyAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name: AnyAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_AnyAsync_Expression_Func__1_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.AnyAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name.vb: AnyAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AnyAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).AnyAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AnyAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).AnyAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.AnyAsync*
  name: AnyAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_AnyAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.AnyAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AnyAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).AnyAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AnyAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).AnyAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Count
  name: Count()
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Count
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Count
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Count()
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count()
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Count()
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Count(Expression{Func{`1,System.Boolean}})
  name: Count(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Count_Expression_Func__1_System_Boolean___
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Count(Expression{Func{`1,System.Boolean}})
  name.vb: Count(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Count(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Count(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Count*
  name: Count
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Count_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Count
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Count
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Count
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.CountAsync(CancellationToken)
  name: CountAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_CountAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.CountAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).CountAsync(CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync(CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).CountAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.CountAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name: CountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_CountAsync_Expression_Func__1_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.CountAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name.vb: CountAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).CountAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).CountAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.CountAsync*
  name: CountAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_CountAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.CountAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).CountAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).CountAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Dispose
  name: Dispose()
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Dispose
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Dispose
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Dispose()
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose()
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Dispose()
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Dispose_System_Boolean_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Dispose(System.Boolean)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose(System.Boolean)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Dispose(System.Boolean)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose(Boolean)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Dispose(Boolean)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Dispose*
  name: Dispose
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Dispose_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Dispose
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Dispose
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Dispose
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Finalize
  name: Finalize()
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Finalize
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Finalize
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Finalize()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Finalize()
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Finalize()
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Finalize()
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Finalize*
  name: Finalize
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Finalize_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Finalize
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Finalize
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Finalize
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Finalize
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Finalize
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FindBy(Expression{Func{`1,System.Boolean}})
  name: FindBy(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FindBy_Expression_Func__1_System_Boolean___
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FindBy(Expression{Func{`1,System.Boolean}})
  name.vb: FindBy(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindBy(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FindBy(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindBy(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FindBy(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FindBy*
  name: FindBy
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FindBy_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FindBy
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindBy
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FindBy
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindBy
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FindBy
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FindByIncluding(Expression{Func{`1,System.Boolean}},Expression{Func{`1,System.Object}}[])
  name: FindByIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FindByIncluding_Expression_Func__1_System_Boolean___Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FindByIncluding(Expression{Func{`1,System.Boolean}},Expression{Func{`1,System.Object}}[])
  name.vb: FindByIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindByIncluding(Expression<Func<TEntity, System.Boolean>>, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FindByIncluding(Expression(Of Func(Of TEntity, System.Boolean)), Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindByIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FindByIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FindByIncluding*
  name: FindByIncluding
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FindByIncluding_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FindByIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindByIncluding
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FindByIncluding
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindByIncluding
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FindByIncluding
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefault(`2)
  name: FirstOrDefault(TPrimaryKey)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefault__2_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefault(`2)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault(TPrimaryKey)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefault(TPrimaryKey)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault(TPrimaryKey)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefault(TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefault(Expression{Func{`1,System.Boolean}})
  name: FirstOrDefault(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefault_Expression_Func__1_System_Boolean___
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefault(Expression{Func{`1,System.Boolean}})
  name.vb: FirstOrDefault(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefault(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefault(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefault*
  name: FirstOrDefault
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefault_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefault
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefault
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefault
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultAsync(`2,CancellationToken)
  name: FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultAsync__2_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultAsync(`2,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync(TPrimaryKey, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name: FirstOrDefaultAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultAsync_Expression_Func__1_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name.vb: FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultAsync*
  name: FirstOrDefaultAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncluding(`2,Expression{Func{`1,System.Object}}[])
  name: FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultIncluding__2_Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncluding(`2,Expression{Func{`1,System.Object}}[])
  name.vb: FirstOrDefaultIncluding(TPrimaryKey, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncluding(TPrimaryKey, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncluding(TPrimaryKey, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncluding(Expression{Func{`1,System.Boolean}},Expression{Func{`1,System.Object}}[])
  name: FirstOrDefaultIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultIncluding_Expression_Func__1_System_Boolean___Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncluding(Expression{Func{`1,System.Boolean}},Expression{Func{`1,System.Object}}[])
  name.vb: FirstOrDefaultIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding(Expression<Func<TEntity, System.Boolean>>, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncluding(Expression(Of Func(Of TEntity, System.Boolean)), Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncluding*
  name: FirstOrDefaultIncluding
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultIncluding_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncluding
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncluding
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncludingAsync(`2,CancellationToken,Expression{Func{`1,System.Object}}[])
  name: FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultIncludingAsync__2_CancellationToken_Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncludingAsync(`2,CancellationToken,Expression{Func{`1,System.Object}}[])
  name.vb: FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncludingAsync(Expression{Func{`1,System.Boolean}},CancellationToken,Expression{Func{`1,System.Object}}[])
  name: FirstOrDefaultIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultIncludingAsync_Expression_Func__1_System_Boolean___CancellationToken_Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncludingAsync(Expression{Func{`1,System.Boolean}},CancellationToken,Expression{Func{`1,System.Object}}[])
  name.vb: FirstOrDefaultIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncludingAsync*
  name: FirstOrDefaultIncludingAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_FirstOrDefaultIncludingAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.FirstOrDefaultIncludingAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).FirstOrDefaultIncludingAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Get(`2)
  name: Get(TPrimaryKey)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Get__2_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Get(`2)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Get(TPrimaryKey)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Get(TPrimaryKey)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Get(TPrimaryKey)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Get(TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Get*
  name: Get
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Get_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Get
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Get
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Get
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Get
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Get
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAll
  name: GetAll()
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAll
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAll
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAll()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAll()
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAll()
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAll()
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAll*
  name: GetAll
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAll_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAll
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAll
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAll
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAll
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAll
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllIncluding(Expression{Func{`1,System.Object}}[])
  name: GetAllIncluding(Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllIncluding_Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllIncluding(Expression{Func{`1,System.Object}}[])
  name.vb: GetAllIncluding(Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllIncluding(Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllIncluding(Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllIncluding(Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllIncluding(Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllIncluding*
  name: GetAllIncluding
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllIncluding_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllIncluding
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllIncluding
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllIncluding
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllIncluding
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllList
  name: GetAllList()
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllList
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllList
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllList()
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList()
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllList()
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllList(Expression{Func{`1,System.Boolean}})
  name: GetAllList(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllList_Expression_Func__1_System_Boolean___
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllList(Expression{Func{`1,System.Boolean}})
  name.vb: GetAllList(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllList(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllList(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllList*
  name: GetAllList
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllList_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllList
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllList
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllList
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListAsync(CancellationToken)
  name: GetAllListAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllListAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListAsync(CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync(CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name: GetAllListAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllListAsync_Expression_Func__1_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name.vb: GetAllListAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListAsync*
  name: GetAllListAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllListAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListIncluding(Expression{Func{`1,System.Boolean}},Expression{Func{`1,System.Object}}[])
  name: GetAllListIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllListIncluding_Expression_Func__1_System_Boolean___Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListIncluding(Expression{Func{`1,System.Boolean}},Expression{Func{`1,System.Object}}[])
  name.vb: GetAllListIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncluding(Expression<Func<TEntity, System.Boolean>>, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListIncluding(Expression(Of Func(Of TEntity, System.Boolean)), Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListIncluding*
  name: GetAllListIncluding
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllListIncluding_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncluding
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListIncluding
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncluding
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListIncluding
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListIncludingAsync(Expression{Func{`1,System.Boolean}},CancellationToken,Expression{Func{`1,System.Object}}[])
  name: GetAllListIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllListIncludingAsync_Expression_Func__1_System_Boolean___CancellationToken_Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListIncludingAsync(Expression{Func{`1,System.Boolean}},CancellationToken,Expression{Func{`1,System.Object}}[])
  name.vb: GetAllListIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncludingAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListIncludingAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListIncludingAsync*
  name: GetAllListIncludingAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAllListIncludingAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAllListIncludingAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncludingAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListIncludingAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncludingAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAllListIncludingAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAsync(`2,CancellationToken)
  name: GetAsync(TPrimaryKey, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAsync__2_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAsync(`2,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAsync(TPrimaryKey, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAsync(TPrimaryKey, CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAsync(TPrimaryKey, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAsync(TPrimaryKey, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAsync*
  name: GetAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name: GetSingleAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetSingleAsync_Expression_Func__1_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name.vb: GetSingleAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleAsync*
  name: GetSingleAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetSingleAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleIncluding(Expression{Func{`1,System.Boolean}},Expression{Func{`1,System.Object}}[])
  name: GetSingleIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetSingleIncluding_Expression_Func__1_System_Boolean___Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleIncluding(Expression{Func{`1,System.Boolean}},Expression{Func{`1,System.Object}}[])
  name.vb: GetSingleIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncluding(Expression<Func<TEntity, System.Boolean>>, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleIncluding(Expression(Of Func(Of TEntity, System.Boolean)), Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleIncluding(Expression(Of Func(Of TEntity, Boolean)), Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleIncluding*
  name: GetSingleIncluding
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetSingleIncluding_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleIncluding
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncluding
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleIncluding
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncluding
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleIncluding
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleIncludingAsync(Expression{Func{`1,System.Boolean}},CancellationToken,Expression{Func{`1,System.Object}}[])
  name: GetSingleIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetSingleIncludingAsync_Expression_Func__1_System_Boolean___CancellationToken_Expression_Func__1_System_Object_____
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleIncludingAsync(Expression{Func{`1,System.Boolean}},CancellationToken,Expression{Func{`1,System.Object}}[])
  name.vb: GetSingleIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncludingAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken, Expression<Func<TEntity, System.Object>>[])
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleIncludingAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken, Expression(Of Func(Of TEntity, System.Object))())
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[])
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleIncludingAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken, Expression(Of Func(Of TEntity, Object))())
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleIncludingAsync*
  name: GetSingleIncludingAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_GetSingleIncludingAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.GetSingleIncludingAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncludingAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleIncludingAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncludingAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).GetSingleIncludingAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCount
  name: LongCount()
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_LongCount
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCount
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCount()
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount()
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCount()
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCount(Expression{Func{`1,System.Boolean}})
  name: LongCount(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_LongCount_Expression_Func__1_System_Boolean___
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCount(Expression{Func{`1,System.Boolean}})
  name.vb: LongCount(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCount(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCount(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCount*
  name: LongCount
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_LongCount_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCount
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCount
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCount
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCountAsync(CancellationToken)
  name: LongCountAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_LongCountAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCountAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCountAsync(CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync(CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCountAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCountAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name: LongCountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_LongCountAsync_Expression_Func__1_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCountAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name.vb: LongCountAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCountAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCountAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCountAsync*
  name: LongCountAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_LongCountAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.LongCountAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCountAsync
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).LongCountAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Single(Expression{Func{`1,System.Boolean}})
  name: Single(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Single_Expression_Func__1_System_Boolean___
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Single(Expression{Func{`1,System.Boolean}})
  name.vb: Single(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Single(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Single(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Single(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Single(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Single*
  name: Single
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryReadBase_3_Single_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase`3.Single
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Single
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Single
  nameWithType: RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Single
  nameWithType.vb: RepositoryReadBase(Of TDbContext, TEntity, TPrimaryKey).Single
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`3
  name: RepositoryWrite<TDbContext, TEntity, TPrimaryKey>
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-3.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`3
  name.vb: RepositoryWrite(Of TDbContext, TEntity, TPrimaryKey)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite<TDbContext, TEntity, TPrimaryKey>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite(Of TDbContext, TEntity, TPrimaryKey)
  nameWithType: RepositoryWrite<TDbContext, TEntity, TPrimaryKey>
  nameWithType.vb: RepositoryWrite(Of TDbContext, TEntity, TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`3.#ctor(`0)
  name: RepositoryWrite(TDbContext)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWrite_3__ctor__0_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`3.#ctor(`0)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite<TDbContext, TEntity, TPrimaryKey>.RepositoryWrite(TDbContext)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite(Of TDbContext, TEntity, TPrimaryKey).RepositoryWrite(TDbContext)
  nameWithType: RepositoryWrite<TDbContext, TEntity, TPrimaryKey>.RepositoryWrite(TDbContext)
  nameWithType.vb: RepositoryWrite(Of TDbContext, TEntity, TPrimaryKey).RepositoryWrite(TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`3.#ctor*
  name: RepositoryWrite
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWrite_3__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`3.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite<TDbContext, TEntity, TPrimaryKey>.RepositoryWrite
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite(Of TDbContext, TEntity, TPrimaryKey).RepositoryWrite
  nameWithType: RepositoryWrite<TDbContext, TEntity, TPrimaryKey>.RepositoryWrite
  nameWithType.vb: RepositoryWrite(Of TDbContext, TEntity, TPrimaryKey).RepositoryWrite
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`5
  name: RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-5.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`5
  name.vb: RepositoryWrite(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey)
  nameWithType: RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>
  nameWithType.vb: RepositoryWrite(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`5.#ctor(`0)
  name: RepositoryWrite(TDbContext)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-5.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWrite_5__ctor__0_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`5.#ctor(`0)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>.RepositoryWrite(TDbContext)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey).RepositoryWrite(TDbContext)
  nameWithType: RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>.RepositoryWrite(TDbContext)
  nameWithType.vb: RepositoryWrite(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey).RepositoryWrite(TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`5.#ctor*
  name: RepositoryWrite
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-5.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWrite_5__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite`5.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>.RepositoryWrite
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey).RepositoryWrite
  nameWithType: RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey>.RepositoryWrite
  nameWithType.vb: RepositoryWrite(Of TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey).RepositoryWrite
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3
  name: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3
  name.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.#ctor(`0)
  name: RepositoryWriteBase(TDbContext)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3__ctor__0_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.#ctor(`0)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.RepositoryWriteBase(TDbContext)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).RepositoryWriteBase(TDbContext)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.RepositoryWriteBase(TDbContext)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).RepositoryWriteBase(TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.#ctor*
  name: RepositoryWriteBase
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.RepositoryWriteBase
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).RepositoryWriteBase
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.RepositoryWriteBase
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).RepositoryWriteBase
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Delete(`1)
  name: Delete(TEntity)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Delete__1_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Delete(`1)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(TEntity)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Delete(TEntity)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(TEntity)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Delete(TEntity)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Delete(`2)
  name: Delete(TPrimaryKey)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Delete__2_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Delete(`2)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(TPrimaryKey)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Delete(TPrimaryKey)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(TPrimaryKey)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Delete(TPrimaryKey)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Delete(Expression{Func{`1,System.Boolean}})
  name: Delete(Expression<Func<TEntity, Boolean>>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Delete_Expression_Func__1_System_Boolean___
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Delete(Expression{Func{`1,System.Boolean}})
  name.vb: Delete(Expression(Of Func(Of TEntity, Boolean)))
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(Expression<Func<TEntity, System.Boolean>>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Delete(Expression(Of Func(Of TEntity, System.Boolean)))
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(Expression<Func<TEntity, Boolean>>)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Delete(Expression(Of Func(Of TEntity, Boolean)))
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Delete*
  name: Delete
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Delete_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Delete
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Delete
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Delete
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.DeleteAsync(`1,CancellationToken)
  name: DeleteAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_DeleteAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.DeleteAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(TEntity, CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TEntity, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.DeleteAsync(`2,CancellationToken)
  name: DeleteAsync(TPrimaryKey, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_DeleteAsync__2_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.DeleteAsync(`2,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TPrimaryKey, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(TPrimaryKey, CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TPrimaryKey, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(TPrimaryKey, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.DeleteAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name: DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_DeleteAsync_Expression_Func__1_System_Boolean___CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.DeleteAsync(Expression{Func{`1,System.Boolean}},CancellationToken)
  name.vb: DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, System.Boolean>>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(Expression(Of Func(Of TEntity, System.Boolean)), CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync(Expression(Of Func(Of TEntity, Boolean)), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.DeleteAsync*
  name: DeleteAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_DeleteAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.DeleteAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).DeleteAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Dispose
  name: Dispose()
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Dispose
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Dispose
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Dispose()
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose()
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Dispose()
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Dispose_System_Boolean_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Dispose(System.Boolean)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose(System.Boolean)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Dispose(System.Boolean)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose(Boolean)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Dispose(Boolean)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Dispose*
  name: Dispose
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Dispose_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Dispose
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Dispose
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Dispose
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Finalize
  name: Finalize()
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Finalize
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Finalize
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Finalize()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Finalize()
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Finalize()
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Finalize()
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Finalize*
  name: Finalize
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Finalize_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Finalize
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Finalize
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Finalize
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Finalize
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Finalize
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Insert(`1)
  name: Insert(TEntity)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Insert__1_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Insert(`1)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Insert(TEntity)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Insert(TEntity)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Insert(TEntity)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Insert(TEntity)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Insert*
  name: Insert
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Insert_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Insert
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Insert
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Insert
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Insert
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Insert
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAndGetId(`1)
  name: InsertAndGetId(TEntity)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertAndGetId__1_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAndGetId(`1)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetId(TEntity)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAndGetId(TEntity)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetId(TEntity)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAndGetId(TEntity)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAndGetId*
  name: InsertAndGetId
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertAndGetId_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAndGetId
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetId
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAndGetId
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetId
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAndGetId
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAndGetIdAsync(`1,CancellationToken)
  name: InsertAndGetIdAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertAndGetIdAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAndGetIdAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetIdAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAndGetIdAsync(TEntity, CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetIdAsync(TEntity, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAndGetIdAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAndGetIdAsync*
  name: InsertAndGetIdAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertAndGetIdAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAndGetIdAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetIdAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAndGetIdAsync
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetIdAsync
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAndGetIdAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAsync(`1,CancellationToken)
  name: InsertAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAsync(TEntity, CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync(TEntity, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAsync*
  name: InsertAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAsync
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdate(`1)
  name: InsertOrUpdate(TEntity)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertOrUpdate__1_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdate(`1)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdate(TEntity)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdate(TEntity)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdate(TEntity)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdate(TEntity)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdate*
  name: InsertOrUpdate
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertOrUpdate_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdate
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdate
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdate
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdate
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdate
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAndGetId(`1)
  name: InsertOrUpdateAndGetId(TEntity)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertOrUpdateAndGetId__1_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAndGetId(`1)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetId(TEntity)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAndGetId(TEntity)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetId(TEntity)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAndGetId(TEntity)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAndGetId*
  name: InsertOrUpdateAndGetId
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertOrUpdateAndGetId_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAndGetId
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetId
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAndGetId
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetId
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAndGetId
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAndGetIdAsync(`1,CancellationToken)
  name: InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertOrUpdateAndGetIdAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAndGetIdAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAndGetIdAsync*
  name: InsertOrUpdateAndGetIdAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertOrUpdateAndGetIdAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAndGetIdAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAndGetIdAsync
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAndGetIdAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAsync(`1,CancellationToken)
  name: InsertOrUpdateAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertOrUpdateAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAsync*
  name: InsertOrUpdateAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_InsertOrUpdateAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.InsertOrUpdateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAsync
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).InsertOrUpdateAsync
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Update(`1)
  name: Update(TEntity)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Update__1_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Update(`1)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update(TEntity)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Update(TEntity)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update(TEntity)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Update(TEntity)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Update(`2,Action{`1})
  name: Update(TPrimaryKey, Action<TEntity>)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Update__2_Action__1__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Update(`2,Action{`1})
  name.vb: Update(TPrimaryKey, Action(Of TEntity))
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update(TPrimaryKey, Action<TEntity>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Update(TPrimaryKey, Action(Of TEntity))
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update(TPrimaryKey, Action<TEntity>)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Update(TPrimaryKey, Action(Of TEntity))
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Update*
  name: Update
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_Update_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.Update
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Update
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).Update
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.UpdateAsync(`1,CancellationToken)
  name: UpdateAsync(TEntity, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_UpdateAsync__1_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.UpdateAsync(`1,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TEntity, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync(TEntity, CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TEntity, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync(TEntity, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.UpdateAsync(`2,Func{`1,Task},CancellationToken)
  name: UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_UpdateAsync__2_Func__1_Task__CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.UpdateAsync(`2,Func{`1,Task},CancellationToken)
  name.vb: UpdateAsync(TPrimaryKey, Func(Of TEntity, Task), CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync(TPrimaryKey, Func(Of TEntity, Task), CancellationToken)
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken)
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync(TPrimaryKey, Func(Of TEntity, Task), CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.UpdateAsync*
  name: UpdateAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html#Aviant_DDD_Infrastructure_Persistence_Repository_RepositoryWriteBase_3_UpdateAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase`3.UpdateAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync
  nameWithType: RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync
  nameWithType.vb: RepositoryWriteBase(Of TDbContext, TEntity, TPrimaryKey).UpdateAsync
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1
  name: UnitOfWork<TDbContext>
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1
  name.vb: UnitOfWork(Of TDbContext)
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext)
  nameWithType: UnitOfWork<TDbContext>
  nameWithType.vb: UnitOfWork(Of TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.#ctor(`0)
  name: UnitOfWork(TDbContext)
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_1__ctor__0_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.#ctor(`0)
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>.UnitOfWork(TDbContext)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext).UnitOfWork(TDbContext)
  nameWithType: UnitOfWork<TDbContext>.UnitOfWork(TDbContext)
  nameWithType.vb: UnitOfWork(Of TDbContext).UnitOfWork(TDbContext)
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.#ctor*
  name: UnitOfWork
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_1__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>.UnitOfWork
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext).UnitOfWork
  nameWithType: UnitOfWork<TDbContext>.UnitOfWork
  nameWithType.vb: UnitOfWork(Of TDbContext).UnitOfWork
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.CommitAsync(CancellationToken)
  name: CommitAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_1_CommitAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.CommitAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>.CommitAsync(CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext).CommitAsync(CancellationToken)
  nameWithType: UnitOfWork<TDbContext>.CommitAsync(CancellationToken)
  nameWithType.vb: UnitOfWork(Of TDbContext).CommitAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.CommitAsync*
  name: CommitAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_1_CommitAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.CommitAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>.CommitAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext).CommitAsync
  nameWithType: UnitOfWork<TDbContext>.CommitAsync
  nameWithType.vb: UnitOfWork(Of TDbContext).CommitAsync
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.Dispose
  name: Dispose()
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_1_Dispose
  commentId: M:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.Dispose
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>.Dispose()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext).Dispose()
  nameWithType: UnitOfWork<TDbContext>.Dispose()
  nameWithType.vb: UnitOfWork(Of TDbContext).Dispose()
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.Dispose*
  name: Dispose
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_1_Dispose_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.Dispose
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>.Dispose
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext).Dispose
  nameWithType: UnitOfWork<TDbContext>.Dispose
  nameWithType.vb: UnitOfWork(Of TDbContext).Dispose
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.Finalize
  name: Finalize()
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_1_Finalize
  commentId: M:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.Finalize
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>.Finalize()
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext).Finalize()
  nameWithType: UnitOfWork<TDbContext>.Finalize()
  nameWithType.vb: UnitOfWork(Of TDbContext).Finalize()
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.Finalize*
  name: Finalize
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_1_Finalize_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`1.Finalize
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TDbContext>.Finalize
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TDbContext).Finalize
  nameWithType: UnitOfWork<TDbContext>.Finalize
  nameWithType.vb: UnitOfWork(Of TDbContext).Finalize
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2
  name: UnitOfWork<TAggregate, TAggregateId>
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-2.html
  commentId: T:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2
  name.vb: UnitOfWork(Of TAggregate, TAggregateId)
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TAggregate, TAggregateId>
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TAggregate, TAggregateId)
  nameWithType: UnitOfWork<TAggregate, TAggregateId>
  nameWithType.vb: UnitOfWork(Of TAggregate, TAggregateId)
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2.#ctor(IEventsService{`0,`1})
  name: UnitOfWork(IEventsService<TAggregate, TAggregateId>)
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-2.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_2__ctor_IEventsService__0__1__
  commentId: M:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2.#ctor(IEventsService{`0,`1})
  name.vb: UnitOfWork(IEventsService(Of TAggregate, TAggregateId))
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TAggregate, TAggregateId>.UnitOfWork(IEventsService<TAggregate, TAggregateId>)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TAggregate, TAggregateId).UnitOfWork(IEventsService(Of TAggregate, TAggregateId))
  nameWithType: UnitOfWork<TAggregate, TAggregateId>.UnitOfWork(IEventsService<TAggregate, TAggregateId>)
  nameWithType.vb: UnitOfWork(Of TAggregate, TAggregateId).UnitOfWork(IEventsService(Of TAggregate, TAggregateId))
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2.#ctor*
  name: UnitOfWork
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-2.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_2__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TAggregate, TAggregateId>.UnitOfWork
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TAggregate, TAggregateId).UnitOfWork
  nameWithType: UnitOfWork<TAggregate, TAggregateId>.UnitOfWork
  nameWithType.vb: UnitOfWork(Of TAggregate, TAggregateId).UnitOfWork
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2.CommitAsync(`0,CancellationToken)
  name: CommitAsync(TAggregate, CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-2.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_2_CommitAsync__0_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2.CommitAsync(`0,CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TAggregate, TAggregateId>.CommitAsync(TAggregate, CancellationToken)
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TAggregate, TAggregateId).CommitAsync(TAggregate, CancellationToken)
  nameWithType: UnitOfWork<TAggregate, TAggregateId>.CommitAsync(TAggregate, CancellationToken)
  nameWithType.vb: UnitOfWork(Of TAggregate, TAggregateId).CommitAsync(TAggregate, CancellationToken)
- uid: Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2.CommitAsync*
  name: CommitAsync
  href: api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-2.html#Aviant_DDD_Infrastructure_Persistence_UnitOfWork_2_CommitAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Persistence.UnitOfWork`2.CommitAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Persistence.UnitOfWork<TAggregate, TAggregateId>.CommitAsync
  fullName.vb: Aviant.DDD.Infrastructure.Persistence.UnitOfWork(Of TAggregate, TAggregateId).CommitAsync
  nameWithType: UnitOfWork<TAggregate, TAggregateId>.CommitAsync
  nameWithType.vb: UnitOfWork(Of TAggregate, TAggregateId).CommitAsync
- uid: Aviant.DDD.Infrastructure.Services
  name: Aviant.DDD.Infrastructure.Services
  href: api/Aviant.DDD.Infrastructure.Services.html
  commentId: N:Aviant.DDD.Infrastructure.Services
  fullName: Aviant.DDD.Infrastructure.Services
  nameWithType: Aviant.DDD.Infrastructure.Services
- uid: Aviant.DDD.Infrastructure.Services.CsvFileBuilder`2
  name: CsvFileBuilder<TRecrod, TMap>
  href: api/Aviant.DDD.Infrastructure.Services.CsvFileBuilder-2.html
  commentId: T:Aviant.DDD.Infrastructure.Services.CsvFileBuilder`2
  name.vb: CsvFileBuilder(Of TRecrod, TMap)
  fullName: Aviant.DDD.Infrastructure.Services.CsvFileBuilder<TRecrod, TMap>
  fullName.vb: Aviant.DDD.Infrastructure.Services.CsvFileBuilder(Of TRecrod, TMap)
  nameWithType: CsvFileBuilder<TRecrod, TMap>
  nameWithType.vb: CsvFileBuilder(Of TRecrod, TMap)
- uid: Aviant.DDD.Infrastructure.Services.CsvFileBuilder`2.BuildTodoItemsFile(IEnumerable{`0})
  name: BuildTodoItemsFile(IEnumerable<TRecrod>)
  href: api/Aviant.DDD.Infrastructure.Services.CsvFileBuilder-2.html#Aviant_DDD_Infrastructure_Services_CsvFileBuilder_2_BuildTodoItemsFile_IEnumerable__0__
  commentId: M:Aviant.DDD.Infrastructure.Services.CsvFileBuilder`2.BuildTodoItemsFile(IEnumerable{`0})
  name.vb: BuildTodoItemsFile(IEnumerable(Of TRecrod))
  fullName: Aviant.DDD.Infrastructure.Services.CsvFileBuilder<TRecrod, TMap>.BuildTodoItemsFile(IEnumerable<TRecrod>)
  fullName.vb: Aviant.DDD.Infrastructure.Services.CsvFileBuilder(Of TRecrod, TMap).BuildTodoItemsFile(IEnumerable(Of TRecrod))
  nameWithType: CsvFileBuilder<TRecrod, TMap>.BuildTodoItemsFile(IEnumerable<TRecrod>)
  nameWithType.vb: CsvFileBuilder(Of TRecrod, TMap).BuildTodoItemsFile(IEnumerable(Of TRecrod))
- uid: Aviant.DDD.Infrastructure.Services.CsvFileBuilder`2.BuildTodoItemsFile*
  name: BuildTodoItemsFile
  href: api/Aviant.DDD.Infrastructure.Services.CsvFileBuilder-2.html#Aviant_DDD_Infrastructure_Services_CsvFileBuilder_2_BuildTodoItemsFile_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.CsvFileBuilder`2.BuildTodoItemsFile
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.CsvFileBuilder<TRecrod, TMap>.BuildTodoItemsFile
  fullName.vb: Aviant.DDD.Infrastructure.Services.CsvFileBuilder(Of TRecrod, TMap).BuildTodoItemsFile
  nameWithType: CsvFileBuilder<TRecrod, TMap>.BuildTodoItemsFile
  nameWithType.vb: CsvFileBuilder(Of TRecrod, TMap).BuildTodoItemsFile
- uid: Aviant.DDD.Infrastructure.Services.DateTimeService
  name: DateTimeService
  href: api/Aviant.DDD.Infrastructure.Services.DateTimeService.html
  commentId: T:Aviant.DDD.Infrastructure.Services.DateTimeService
  fullName: Aviant.DDD.Infrastructure.Services.DateTimeService
  nameWithType: DateTimeService
- uid: Aviant.DDD.Infrastructure.Services.DateTimeService.Now(System.Boolean)
  name: Now(Boolean)
  href: api/Aviant.DDD.Infrastructure.Services.DateTimeService.html#Aviant_DDD_Infrastructure_Services_DateTimeService_Now_System_Boolean_
  commentId: M:Aviant.DDD.Infrastructure.Services.DateTimeService.Now(System.Boolean)
  fullName: Aviant.DDD.Infrastructure.Services.DateTimeService.Now(System.Boolean)
  nameWithType: DateTimeService.Now(Boolean)
- uid: Aviant.DDD.Infrastructure.Services.DateTimeService.Now*
  name: Now
  href: api/Aviant.DDD.Infrastructure.Services.DateTimeService.html#Aviant_DDD_Infrastructure_Services_DateTimeService_Now_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.DateTimeService.Now
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.DateTimeService.Now
  nameWithType: DateTimeService.Now
- uid: Aviant.DDD.Infrastructure.Services.EmailService
  name: EmailService
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html
  commentId: T:Aviant.DDD.Infrastructure.Services.EmailService
  fullName: Aviant.DDD.Infrastructure.Services.EmailService
  nameWithType: EmailService
- uid: Aviant.DDD.Infrastructure.Services.EmailService.#ctor(System.String,System.String,System.String,System.String,Aviant.DDD.Infrastructure.Services.ISmtpClientFactory,MimeMessage,SmtpClient)
  name: EmailService(String, String, String, String, ISmtpClientFactory, MimeMessage, SmtpClient)
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService__ctor_System_String_System_String_System_String_System_String_Aviant_DDD_Infrastructure_Services_ISmtpClientFactory_MimeMessage_SmtpClient_
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.#ctor(System.String,System.String,System.String,System.String,Aviant.DDD.Infrastructure.Services.ISmtpClientFactory,MimeMessage,SmtpClient)
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.EmailService(System.String, System.String, System.String, System.String, Aviant.DDD.Infrastructure.Services.ISmtpClientFactory, MimeMessage, SmtpClient)
  nameWithType: EmailService.EmailService(String, String, String, String, ISmtpClientFactory, MimeMessage, SmtpClient)
- uid: Aviant.DDD.Infrastructure.Services.EmailService.#ctor*
  name: EmailService
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.EmailService
  nameWithType: EmailService.EmailService
- uid: Aviant.DDD.Infrastructure.Services.EmailService.From(System.String,System.String)
  name: From(String, String)
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_From_System_String_System_String_
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.From(System.String,System.String)
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.From(System.String, System.String)
  nameWithType: EmailService.From(String, String)
- uid: Aviant.DDD.Infrastructure.Services.EmailService.From*
  name: From
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_From_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.From
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.From
  nameWithType: EmailService.From
- uid: Aviant.DDD.Infrastructure.Services.EmailService.FromServer
  name: FromServer()
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_FromServer
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.FromServer
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.FromServer()
  nameWithType: EmailService.FromServer()
- uid: Aviant.DDD.Infrastructure.Services.EmailService.FromServer*
  name: FromServer
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_FromServer_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.FromServer
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.FromServer
  nameWithType: EmailService.FromServer
- uid: Aviant.DDD.Infrastructure.Services.EmailService.Message
  name: Message()
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_Message
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.Message
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.Message()
  nameWithType: EmailService.Message()
- uid: Aviant.DDD.Infrastructure.Services.EmailService.Message*
  name: Message
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_Message_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.Message
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.Message
  nameWithType: EmailService.Message
- uid: Aviant.DDD.Infrastructure.Services.EmailService.Send
  name: Send()
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_Send
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.Send
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.Send()
  nameWithType: EmailService.Send()
- uid: Aviant.DDD.Infrastructure.Services.EmailService.Send*
  name: Send
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_Send_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.Send
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.Send
  nameWithType: EmailService.Send
- uid: Aviant.DDD.Infrastructure.Services.EmailService.SendAsync(CancellationToken)
  name: SendAsync(CancellationToken)
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_SendAsync_CancellationToken_
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.SendAsync(CancellationToken)
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.SendAsync(CancellationToken)
  nameWithType: EmailService.SendAsync(CancellationToken)
- uid: Aviant.DDD.Infrastructure.Services.EmailService.SendAsync*
  name: SendAsync
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_SendAsync_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.SendAsync
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.SendAsync
  nameWithType: EmailService.SendAsync
- uid: Aviant.DDD.Infrastructure.Services.EmailService.To(System.String,System.String)
  name: To(String, String)
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_To_System_String_System_String_
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.To(System.String,System.String)
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.To(System.String, System.String)
  nameWithType: EmailService.To(String, String)
- uid: Aviant.DDD.Infrastructure.Services.EmailService.To*
  name: To
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_To_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.To
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.To
  nameWithType: EmailService.To
- uid: Aviant.DDD.Infrastructure.Services.EmailService.ToServer
  name: ToServer()
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_ToServer
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.ToServer
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.ToServer()
  nameWithType: EmailService.ToServer()
- uid: Aviant.DDD.Infrastructure.Services.EmailService.ToServer*
  name: ToServer
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_ToServer_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.ToServer
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.ToServer
  nameWithType: EmailService.ToServer
- uid: Aviant.DDD.Infrastructure.Services.EmailService.WithBodyHtml(System.String)
  name: WithBodyHtml(String)
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_WithBodyHtml_System_String_
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.WithBodyHtml(System.String)
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.WithBodyHtml(System.String)
  nameWithType: EmailService.WithBodyHtml(String)
- uid: Aviant.DDD.Infrastructure.Services.EmailService.WithBodyHtml*
  name: WithBodyHtml
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_WithBodyHtml_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.WithBodyHtml
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.WithBodyHtml
  nameWithType: EmailService.WithBodyHtml
- uid: Aviant.DDD.Infrastructure.Services.EmailService.WithBodyPlain(System.String)
  name: WithBodyPlain(String)
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_WithBodyPlain_System_String_
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.WithBodyPlain(System.String)
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.WithBodyPlain(System.String)
  nameWithType: EmailService.WithBodyPlain(String)
- uid: Aviant.DDD.Infrastructure.Services.EmailService.WithBodyPlain*
  name: WithBodyPlain
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_WithBodyPlain_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.WithBodyPlain
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.WithBodyPlain
  nameWithType: EmailService.WithBodyPlain
- uid: Aviant.DDD.Infrastructure.Services.EmailService.WithSubject(System.String)
  name: WithSubject(String)
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_WithSubject_System_String_
  commentId: M:Aviant.DDD.Infrastructure.Services.EmailService.WithSubject(System.String)
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.WithSubject(System.String)
  nameWithType: EmailService.WithSubject(String)
- uid: Aviant.DDD.Infrastructure.Services.EmailService.WithSubject*
  name: WithSubject
  href: api/Aviant.DDD.Infrastructure.Services.EmailService.html#Aviant_DDD_Infrastructure_Services_EmailService_WithSubject_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.EmailService.WithSubject
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.EmailService.WithSubject
  nameWithType: EmailService.WithSubject
- uid: Aviant.DDD.Infrastructure.Services.ISmtpClientFactory
  name: ISmtpClientFactory
  href: api/Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.html
  commentId: T:Aviant.DDD.Infrastructure.Services.ISmtpClientFactory
  fullName: Aviant.DDD.Infrastructure.Services.ISmtpClientFactory
  nameWithType: ISmtpClientFactory
- uid: Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.GetSmtpClient
  name: GetSmtpClient()
  href: api/Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.html#Aviant_DDD_Infrastructure_Services_ISmtpClientFactory_GetSmtpClient
  commentId: M:Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.GetSmtpClient
  fullName: Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.GetSmtpClient()
  nameWithType: ISmtpClientFactory.GetSmtpClient()
- uid: Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.GetSmtpClient*
  name: GetSmtpClient
  href: api/Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.html#Aviant_DDD_Infrastructure_Services_ISmtpClientFactory_GetSmtpClient_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.GetSmtpClient
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.GetSmtpClient
  nameWithType: ISmtpClientFactory.GetSmtpClient
- uid: Aviant.DDD.Infrastructure.Services.SmtpClientFactory
  name: SmtpClientFactory
  href: api/Aviant.DDD.Infrastructure.Services.SmtpClientFactory.html
  commentId: T:Aviant.DDD.Infrastructure.Services.SmtpClientFactory
  fullName: Aviant.DDD.Infrastructure.Services.SmtpClientFactory
  nameWithType: SmtpClientFactory
- uid: Aviant.DDD.Infrastructure.Services.SmtpClientFactory.#ctor(System.String,System.Int32,System.Boolean,System.String,System.String)
  name: SmtpClientFactory(String, Int32, Boolean, String, String)
  href: api/Aviant.DDD.Infrastructure.Services.SmtpClientFactory.html#Aviant_DDD_Infrastructure_Services_SmtpClientFactory__ctor_System_String_System_Int32_System_Boolean_System_String_System_String_
  commentId: M:Aviant.DDD.Infrastructure.Services.SmtpClientFactory.#ctor(System.String,System.Int32,System.Boolean,System.String,System.String)
  fullName: Aviant.DDD.Infrastructure.Services.SmtpClientFactory.SmtpClientFactory(System.String, System.Int32, System.Boolean, System.String, System.String)
  nameWithType: SmtpClientFactory.SmtpClientFactory(String, Int32, Boolean, String, String)
- uid: Aviant.DDD.Infrastructure.Services.SmtpClientFactory.#ctor*
  name: SmtpClientFactory
  href: api/Aviant.DDD.Infrastructure.Services.SmtpClientFactory.html#Aviant_DDD_Infrastructure_Services_SmtpClientFactory__ctor_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.SmtpClientFactory.#ctor
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.SmtpClientFactory.SmtpClientFactory
  nameWithType: SmtpClientFactory.SmtpClientFactory
- uid: Aviant.DDD.Infrastructure.Services.SmtpClientFactory.GetSmtpClient
  name: GetSmtpClient()
  href: api/Aviant.DDD.Infrastructure.Services.SmtpClientFactory.html#Aviant_DDD_Infrastructure_Services_SmtpClientFactory_GetSmtpClient
  commentId: M:Aviant.DDD.Infrastructure.Services.SmtpClientFactory.GetSmtpClient
  fullName: Aviant.DDD.Infrastructure.Services.SmtpClientFactory.GetSmtpClient()
  nameWithType: SmtpClientFactory.GetSmtpClient()
- uid: Aviant.DDD.Infrastructure.Services.SmtpClientFactory.GetSmtpClient*
  name: GetSmtpClient
  href: api/Aviant.DDD.Infrastructure.Services.SmtpClientFactory.html#Aviant_DDD_Infrastructure_Services_SmtpClientFactory_GetSmtpClient_
  commentId: Overload:Aviant.DDD.Infrastructure.Services.SmtpClientFactory.GetSmtpClient
  isSpec: "True"
  fullName: Aviant.DDD.Infrastructure.Services.SmtpClientFactory.GetSmtpClient
  nameWithType: SmtpClientFactory.GetSmtpClient
