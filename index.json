{
  "api/Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.html": {
    "href": "api/Aviant.DDD.Application.ApplicationEvents.ApplicationEvent.html",
    "title": "Class ApplicationEvent | Aviant DDD Library Documentation",
    "keywords": "Class ApplicationEvent Inheritance System.Object ApplicationEvent Implements IApplicationEvent INotification Namespace : Aviant.DDD.Application.ApplicationEvents Assembly : Aviant.DDD.Application.dll Syntax public abstract class ApplicationEvent : object, IApplicationEvent, INotification Properties | Improve this Doc View Source Occured Declaration public DateTime Occured { get; set; } Property Value Type Description DateTime Implements IApplicationEvent INotification"
  },
  "api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html": {
    "href": "api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventDispatcher.html",
    "title": "Class ApplicationEventDispatcher | Aviant DDD Library Documentation",
    "keywords": "Class ApplicationEventDispatcher Inheritance System.Object ApplicationEventDispatcher Implements IApplicationEventDispatcher Namespace : Aviant.DDD.Application.ApplicationEvents Assembly : Aviant.DDD.Application.dll Syntax public sealed class ApplicationEventDispatcher : object, IApplicationEventDispatcher Constructors | Improve this Doc View Source ApplicationEventDispatcher(IMediator, IDateTimeService) Declaration public ApplicationEventDispatcher(IMediator mediator, IDateTimeService dateTimeService) Parameters Type Name Description IMediator mediator IDateTimeService dateTimeService Methods | Improve this Doc View Source AddPostCommitEvent(IApplicationEvent) Declaration public void AddPostCommitEvent(IApplicationEvent applicationEvent) Parameters Type Name Description IApplicationEvent applicationEvent | Improve this Doc View Source AddPreCommitEvent(IApplicationEvent) Declaration public void AddPreCommitEvent(IApplicationEvent applicationEvent) Parameters Type Name Description IApplicationEvent applicationEvent | Improve this Doc View Source FirePostCommitEventsAsync(CancellationToken) Declaration public Task FirePostCommitEventsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source FirePreCommitEventsAsync(CancellationToken) Declaration public Task FirePreCommitEventsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetPostCommitEvents() Declaration public List<IApplicationEvent> GetPostCommitEvents() Returns Type Description List < IApplicationEvent > | Improve this Doc View Source GetPreCommitEvents() Declaration public List<IApplicationEvent> GetPreCommitEvents() Returns Type Description List < IApplicationEvent > | Improve this Doc View Source RemovePostCommitEvent(IApplicationEvent) Declaration public void RemovePostCommitEvent(IApplicationEvent applicationEvent) Parameters Type Name Description IApplicationEvent applicationEvent | Improve this Doc View Source RemovePreCommitEvent(IApplicationEvent) Declaration public void RemovePreCommitEvent(IApplicationEvent applicationEvent) Parameters Type Name Description IApplicationEvent applicationEvent Implements IApplicationEventDispatcher"
  },
  "api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler-1.html": {
    "href": "api/Aviant.DDD.Application.ApplicationEvents.ApplicationEventHandler-1.html",
    "title": "Class ApplicationEventHandler<TApplicationEvent> | Aviant DDD Library Documentation",
    "keywords": "Class ApplicationEventHandler<TApplicationEvent> Inheritance System.Object ApplicationEventHandler<TApplicationEvent> Implements INotificationHandler <TApplicationEvent> IRetry Namespace : Aviant.DDD.Application.ApplicationEvents Assembly : Aviant.DDD.Application.dll Syntax public abstract class ApplicationEventHandler<TApplicationEvent> : object, IApplicationEventHandler<TApplicationEvent>, INotificationHandler<TApplicationEvent>, IRetry where TApplicationEvent : IApplicationEvent Type Parameters Name Description TApplicationEvent Methods | Improve this Doc View Source Handle(TApplicationEvent, CancellationToken) Declaration public abstract Task Handle(TApplicationEvent event, CancellationToken cancellationToken) Parameters Type Name Description TApplicationEvent event CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source RetryPolicy() Declaration public virtual IAsyncPolicy RetryPolicy() Returns Type Description IAsyncPolicy Implements INotificationHandler<> IRetry"
  },
  "api/Aviant.DDD.Application.ApplicationEvents.html": {
    "href": "api/Aviant.DDD.Application.ApplicationEvents.html",
    "title": "Namespace Aviant.DDD.Application.ApplicationEvents | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.ApplicationEvents Classes ApplicationEvent ApplicationEventDispatcher ApplicationEventHandler<TApplicationEvent> Interfaces IApplicationEvent Application Event Interface IApplicationEventDispatcher"
  },
  "api/Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.html": {
    "href": "api/Aviant.DDD.Application.ApplicationEvents.IApplicationEvent.html",
    "title": "Interface IApplicationEvent | Aviant DDD Library Documentation",
    "keywords": "Interface IApplicationEvent Application Event Interface Namespace : Aviant.DDD.Application.ApplicationEvents Assembly : Aviant.DDD.Application.dll Syntax public interface IApplicationEvent : INotification Properties | Improve this Doc View Source Occured The DateTime that the Application Event occurred. Declaration DateTime Occured { get; set; } Property Value Type Description DateTime"
  },
  "api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html": {
    "href": "api/Aviant.DDD.Application.ApplicationEvents.IApplicationEventDispatcher.html",
    "title": "Interface IApplicationEventDispatcher | Aviant DDD Library Documentation",
    "keywords": "Interface IApplicationEventDispatcher Namespace : Aviant.DDD.Application.ApplicationEvents Assembly : Aviant.DDD.Application.dll Syntax public interface IApplicationEventDispatcher Methods | Improve this Doc View Source AddPostCommitEvent(IApplicationEvent) Declaration void AddPostCommitEvent(IApplicationEvent applicationEvent) Parameters Type Name Description IApplicationEvent applicationEvent | Improve this Doc View Source AddPreCommitEvent(IApplicationEvent) Declaration void AddPreCommitEvent(IApplicationEvent applicationEvent) Parameters Type Name Description IApplicationEvent applicationEvent | Improve this Doc View Source FirePostCommitEventsAsync(CancellationToken) Declaration Task FirePostCommitEventsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source FirePreCommitEventsAsync(CancellationToken) Declaration Task FirePreCommitEventsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetPostCommitEvents() Declaration List<IApplicationEvent> GetPostCommitEvents() Returns Type Description List < IApplicationEvent > | Improve this Doc View Source GetPreCommitEvents() Declaration List<IApplicationEvent> GetPreCommitEvents() Returns Type Description List < IApplicationEvent > | Improve this Doc View Source RemovePostCommitEvent(IApplicationEvent) Declaration void RemovePostCommitEvent(IApplicationEvent applicationEvent) Parameters Type Name Description IApplicationEvent applicationEvent | Improve this Doc View Source RemovePreCommitEvent(IApplicationEvent) Declaration void RemovePreCommitEvent(IApplicationEvent applicationEvent) Parameters Type Name Description IApplicationEvent applicationEvent"
  },
  "api/Aviant.DDD.Application.Behaviours.html": {
    "href": "api/Aviant.DDD.Application.Behaviours.html",
    "title": "Namespace Aviant.DDD.Application.Behaviours | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Behaviours Classes LoggerBehaviour<TRequest> PerformanceBehaviour<TRequest, TResponse> UnhandledExceptionBehaviour<TRequest, TResponse> ValidationBehaviour<TRequest, TResponse>"
  },
  "api/Aviant.DDD.Application.Behaviours.LoggerBehaviour-1.html": {
    "href": "api/Aviant.DDD.Application.Behaviours.LoggerBehaviour-1.html",
    "title": "Class LoggerBehaviour<TRequest> | Aviant DDD Library Documentation",
    "keywords": "Class LoggerBehaviour<TRequest> Inheritance System.Object LoggerBehaviour<TRequest> Namespace : Aviant.DDD.Application.Behaviours Assembly : Aviant.DDD.Application.dll Syntax public sealed class LoggerBehaviour<TRequest> : IRequestPreProcessor<TRequest> Type Parameters Name Description TRequest Constructors | Improve this Doc View Source LoggerBehaviour(ILogger<TRequest>, ICurrentUserService, IIdentityService) Declaration public LoggerBehaviour(ILogger<TRequest> logger, ICurrentUserService currentUserService, IIdentityService identityIdentityService) Parameters Type Name Description ILogger <TRequest> logger ICurrentUserService currentUserService IIdentityService identityIdentityService Methods | Improve this Doc View Source Process(TRequest, CancellationToken) Declaration public Task Process(TRequest request, CancellationToken cancellationToken) Parameters Type Name Description TRequest request CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Aviant.DDD.Application.Behaviours.PerformanceBehaviour-2.html": {
    "href": "api/Aviant.DDD.Application.Behaviours.PerformanceBehaviour-2.html",
    "title": "Class PerformanceBehaviour<TRequest, TResponse> | Aviant DDD Library Documentation",
    "keywords": "Class PerformanceBehaviour<TRequest, TResponse> Inheritance System.Object PerformanceBehaviour<TRequest, TResponse> Namespace : Aviant.DDD.Application.Behaviours Assembly : Aviant.DDD.Application.dll Syntax public sealed class PerformanceBehaviour<TRequest, TResponse> : IPipelineBehavior<TRequest, TResponse> Type Parameters Name Description TRequest TResponse Constructors | Improve this Doc View Source PerformanceBehaviour(ILogger<TRequest>, ICurrentUserService, IIdentityService) Declaration public PerformanceBehaviour(ILogger<TRequest> logger, ICurrentUserService currentUserService, IIdentityService identityIdentityService) Parameters Type Name Description ILogger <TRequest> logger ICurrentUserService currentUserService IIdentityService identityIdentityService Methods | Improve this Doc View Source Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>) Declaration public Task<TResponse> Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate<TResponse> next) Parameters Type Name Description TRequest request CancellationToken cancellationToken RequestHandlerDelegate <TResponse> next Returns Type Description Task <TResponse>"
  },
  "api/Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour-2.html": {
    "href": "api/Aviant.DDD.Application.Behaviours.UnhandledExceptionBehaviour-2.html",
    "title": "Class UnhandledExceptionBehaviour<TRequest, TResponse> | Aviant DDD Library Documentation",
    "keywords": "Class UnhandledExceptionBehaviour<TRequest, TResponse> Inheritance System.Object UnhandledExceptionBehaviour<TRequest, TResponse> Namespace : Aviant.DDD.Application.Behaviours Assembly : Aviant.DDD.Application.dll Syntax public sealed class UnhandledExceptionBehaviour<TRequest, TResponse> : IPipelineBehavior<TRequest, TResponse> Type Parameters Name Description TRequest TResponse Constructors | Improve this Doc View Source UnhandledExceptionBehaviour(ILogger<TRequest>) Declaration public UnhandledExceptionBehaviour(ILogger<TRequest> logger) Parameters Type Name Description ILogger <TRequest> logger Methods | Improve this Doc View Source Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>) Declaration public Task<TResponse> Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate<TResponse> next) Parameters Type Name Description TRequest request CancellationToken cancellationToken RequestHandlerDelegate <TResponse> next Returns Type Description Task <TResponse>"
  },
  "api/Aviant.DDD.Application.Behaviours.ValidationBehaviour-2.html": {
    "href": "api/Aviant.DDD.Application.Behaviours.ValidationBehaviour-2.html",
    "title": "Class ValidationBehaviour<TRequest, TResponse> | Aviant DDD Library Documentation",
    "keywords": "Class ValidationBehaviour<TRequest, TResponse> Inheritance System.Object ValidationBehaviour<TRequest, TResponse> Namespace : Aviant.DDD.Application.Behaviours Assembly : Aviant.DDD.Application.dll Syntax public sealed class ValidationBehaviour<TRequest, TResponse> : IPipelineBehavior<TRequest, TResponse> where TRequest : IRequest<TResponse> Type Parameters Name Description TRequest TResponse Constructors | Improve this Doc View Source ValidationBehaviour(IEnumerable<IValidator<TRequest>>) Declaration public ValidationBehaviour(IEnumerable<IValidator<TRequest>> validators) Parameters Type Name Description IEnumerable < IValidator <TRequest>> validators Methods | Improve this Doc View Source Handle(TRequest, CancellationToken, RequestHandlerDelegate<TResponse>) Declaration public Task<TResponse> Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate<TResponse> next) Parameters Type Name Description TRequest request CancellationToken cancellationToken RequestHandlerDelegate <TResponse> next Returns Type Description Task <TResponse>"
  },
  "api/Aviant.DDD.Application.Commands.Command.html": {
    "href": "api/Aviant.DDD.Application.Commands.Command.html",
    "title": "Class Command | Aviant DDD Library Documentation",
    "keywords": "Class Command Inheritance System.Object Command < Unit > Command Implements ICommand ICommand < Unit > IRequest < Unit > Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public abstract class Command : Command<Unit>, ICommand, ICommand<Unit>, IRequest<Unit> Implements ICommand ICommand<TResponse> IRequest<>"
  },
  "api/Aviant.DDD.Application.Commands.Command-1.html": {
    "href": "api/Aviant.DDD.Application.Commands.Command-1.html",
    "title": "Class Command<TResponse> | Aviant DDD Library Documentation",
    "keywords": "Class Command<TResponse> Inheritance System.Object Command<TResponse> Command Implements ICommand <TResponse> IRequest <TResponse> Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public abstract class Command<TResponse> : object, ICommand<TResponse>, IRequest<TResponse> Type Parameters Name Description TResponse Implements ICommand<TResponse> IRequest<>"
  },
  "api/Aviant.DDD.Application.Commands.Command-2.html": {
    "href": "api/Aviant.DDD.Application.Commands.Command-2.html",
    "title": "Class Command<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Class Command<TAggregate, TAggregateId> Inheritance System.Object Command<TAggregate, TAggregateId> Implements ICommand <TAggregate, TAggregateId> IRequest <TAggregate> Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public abstract class Command<TAggregate, TAggregateId> : object, ICommand<TAggregate, TAggregateId>, IRequest<TAggregate> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Implements ICommand<TAggregate, TAggregateId> IRequest<>"
  },
  "api/Aviant.DDD.Application.Commands.CommandHandler-1.html": {
    "href": "api/Aviant.DDD.Application.Commands.CommandHandler-1.html",
    "title": "Class CommandHandler<TCommand> | Aviant DDD Library Documentation",
    "keywords": "Class CommandHandler<TCommand> Inheritance System.Object CommandHandler<TCommand> Implements IRequestHandler <TCommand> Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public abstract class CommandHandler<TCommand> : object, ICommandHandler<TCommand>, IRequestHandler<TCommand> where TCommand : ICommand<Unit> Type Parameters Name Description TCommand Methods | Improve this Doc View Source Handle(TCommand, CancellationToken) Declaration public abstract Task<Unit> Handle(TCommand command, CancellationToken cancellationToken) Parameters Type Name Description TCommand command CancellationToken cancellationToken Returns Type Description Task < Unit > Implements IRequestHandler<>"
  },
  "api/Aviant.DDD.Application.Commands.CommandHandler-2.html": {
    "href": "api/Aviant.DDD.Application.Commands.CommandHandler-2.html",
    "title": "Class CommandHandler<TCommand, TResponse> | Aviant DDD Library Documentation",
    "keywords": "Class CommandHandler<TCommand, TResponse> Inheritance System.Object CommandHandler<TCommand, TResponse> Implements IRequestHandler <TCommand, TResponse> Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public abstract class CommandHandler<TCommand, TResponse> : object, ICommandHandler<TCommand, TResponse>, IRequestHandler<TCommand, TResponse> where TCommand : ICommand<TResponse> Type Parameters Name Description TCommand TResponse Methods | Improve this Doc View Source Handle(TCommand, CancellationToken) Declaration public abstract Task<TResponse> Handle(TCommand command, CancellationToken cancellationToken) Parameters Type Name Description TCommand command CancellationToken cancellationToken Returns Type Description Task <TResponse> Implements IRequestHandler<, >"
  },
  "api/Aviant.DDD.Application.Commands.CommandHandler-3.html": {
    "href": "api/Aviant.DDD.Application.Commands.CommandHandler-3.html",
    "title": "Class CommandHandler<TCommand, TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Class CommandHandler<TCommand, TAggregate, TAggregateId> Inheritance System.Object CommandHandler<TCommand, TAggregate, TAggregateId> Implements IRequestHandler <TCommand, TAggregate> Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public abstract class CommandHandler<TCommand, TAggregate, TAggregateId> : object, ICommandHandler<TCommand, TAggregate, TAggregateId>, IRequestHandler<TCommand, TAggregate> where TCommand : ICommand<TAggregate, TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TCommand TAggregate TAggregateId Properties | Improve this Doc View Source EventsService Declaration protected IEventsService<TAggregate, TAggregateId> EventsService { get; } Property Value Type Description IEventsService <TAggregate, TAggregateId> Methods | Improve this Doc View Source Handle(TCommand, CancellationToken) Declaration public abstract Task<TAggregate> Handle(TCommand command, CancellationToken cancellationToken) Parameters Type Name Description TCommand command CancellationToken cancellationToken Returns Type Description Task <TAggregate> Implements IRequestHandler<, >"
  },
  "api/Aviant.DDD.Application.Commands.CommandValidator-1.html": {
    "href": "api/Aviant.DDD.Application.Commands.CommandValidator-1.html",
    "title": "Class CommandValidator<TCommand> | Aviant DDD Library Documentation",
    "keywords": "Class CommandValidator<TCommand> Inheritance System.Object CommandValidator<TCommand> Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public abstract class CommandValidator<TCommand> : AbstractValidator<TCommand> Type Parameters Name Description TCommand Constructors | Improve this Doc View Source CommandValidator(CascadeMode) Declaration protected CommandValidator(CascadeMode cascadeMode = null) Parameters Type Name Description CascadeMode cascadeMode"
  },
  "api/Aviant.DDD.Application.Commands.html": {
    "href": "api/Aviant.DDD.Application.Commands.html",
    "title": "Namespace Aviant.DDD.Application.Commands | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Commands Classes Command Command<TResponse> Command<TAggregate, TAggregateId> CommandHandler<TCommand> CommandHandler<TCommand, TResponse> CommandHandler<TCommand, TAggregate, TAggregateId> CommandValidator<TCommand> Interfaces ICommand ICommand<TResponse> ICommand<TAggregate, TAggregateId>"
  },
  "api/Aviant.DDD.Application.Commands.ICommand.html": {
    "href": "api/Aviant.DDD.Application.Commands.ICommand.html",
    "title": "Interface ICommand | Aviant DDD Library Documentation",
    "keywords": "Interface ICommand Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public interface ICommand : ICommand<Unit>, IRequest<Unit>"
  },
  "api/Aviant.DDD.Application.Commands.ICommand-1.html": {
    "href": "api/Aviant.DDD.Application.Commands.ICommand-1.html",
    "title": "Interface ICommand<TResponse> | Aviant DDD Library Documentation",
    "keywords": "Interface ICommand<TResponse> Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public interface ICommand<out TResponse> : IRequest<TResponse> Type Parameters Name Description TResponse"
  },
  "api/Aviant.DDD.Application.Commands.ICommand-2.html": {
    "href": "api/Aviant.DDD.Application.Commands.ICommand-2.html",
    "title": "Interface ICommand<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Interface ICommand<TAggregate, TAggregateId> Namespace : Aviant.DDD.Application.Commands Assembly : Aviant.DDD.Application.dll Syntax public interface ICommand<out TAggregate, in TAggregateId> : IRequest<TAggregate> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId"
  },
  "api/Aviant.DDD.Application.EventBus.EventConsumerFactory.html": {
    "href": "api/Aviant.DDD.Application.EventBus.EventConsumerFactory.html",
    "title": "Class EventConsumerFactory | Aviant DDD Library Documentation",
    "keywords": "Class EventConsumerFactory Inheritance System.Object EventConsumerFactory Implements IEventConsumerFactory Namespace : Aviant.DDD.Application.EventBus Assembly : Aviant.DDD.Application.dll Syntax public sealed class EventConsumerFactory : object, IEventConsumerFactory Constructors | Improve this Doc View Source EventConsumerFactory(IServiceScopeFactory) Declaration public EventConsumerFactory(IServiceScopeFactory scopeFactory) Parameters Type Name Description IServiceScopeFactory scopeFactory Methods | Improve this Doc View Source Build<TAggregate, TAggregateId, TDeserializer>() Declaration public IEventConsumer Build<TAggregate, TAggregateId, TDeserializer>() where TAggregate : IAggregate<TAggregateId> where TAggregateId : IAggregateId Returns Type Description IEventConsumer Type Parameters Name Description TAggregate TAggregateId TDeserializer Implements IEventConsumerFactory"
  },
  "api/Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.html": {
    "href": "api/Aviant.DDD.Application.EventBus.HandlerExtensionRegistry.html",
    "title": "Class HandlerExtensionRegistry | Aviant DDD Library Documentation",
    "keywords": "Class HandlerExtensionRegistry Inheritance System.Object HandlerExtensionRegistry Namespace : Aviant.DDD.Application.EventBus Assembly : Aviant.DDD.Application.dll Syntax public static class HandlerExtensionRegistry : object Methods | Improve this Doc View Source RegisterHandlers(IImplementationTypeSelector, Type) Declaration public static IImplementationTypeSelector RegisterHandlers(this IImplementationTypeSelector selector, Type type) Parameters Type Name Description IImplementationTypeSelector selector Type type Returns Type Description IImplementationTypeSelector"
  },
  "api/Aviant.DDD.Application.EventBus.html": {
    "href": "api/Aviant.DDD.Application.EventBus.html",
    "title": "Namespace Aviant.DDD.Application.EventBus | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.EventBus Classes EventConsumerFactory HandlerExtensionRegistry"
  },
  "api/Aviant.DDD.Application.Exceptions.ApplicationException.html": {
    "href": "api/Aviant.DDD.Application.Exceptions.ApplicationException.html",
    "title": "Class ApplicationException | Aviant DDD Library Documentation",
    "keywords": "Class ApplicationException Inheritance System.Object CoreException ApplicationException NotFoundException ValidationException Inherited Members CoreException.ErrorCode CoreException.FamilyCode CoreException.Occurred CoreException.ExceptionId CoreException.ExceptionName CoreException.GetObjectData(SerializationInfo, StreamingContext) Namespace : Aviant.DDD.Application.Exceptions Assembly : Aviant.DDD.Application.dll Syntax public class ApplicationException : CoreException Constructors | Improve this Doc View Source ApplicationException() Declaration public ApplicationException() | Improve this Doc View Source ApplicationException(SerializationInfo, StreamingContext) Declaration protected ApplicationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source ApplicationException(String) Declaration public ApplicationException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source ApplicationException(String, Exception) Declaration public ApplicationException(string message, Exception inner) Parameters Type Name Description System.String message Exception inner | Improve this Doc View Source ApplicationException(String, Int32, Nullable<Int32>, Nullable<Exception>) Declaration public ApplicationException(string message, int errorCode, int? familyCode = null, Exception? inner = null) Parameters Type Name Description System.String message System.Int32 errorCode System.Nullable < System.Int32 > familyCode System.Nullable < Exception > inner"
  },
  "api/Aviant.DDD.Application.Exceptions.html": {
    "href": "api/Aviant.DDD.Application.Exceptions.html",
    "title": "Namespace Aviant.DDD.Application.Exceptions | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Exceptions Classes ApplicationException NotFoundException ValidationException"
  },
  "api/Aviant.DDD.Application.Exceptions.NotFoundException.html": {
    "href": "api/Aviant.DDD.Application.Exceptions.NotFoundException.html",
    "title": "Class NotFoundException | Aviant DDD Library Documentation",
    "keywords": "Class NotFoundException Inheritance System.Object CoreException ApplicationException NotFoundException Inherited Members CoreException.ErrorCode CoreException.FamilyCode CoreException.Occurred CoreException.ExceptionId CoreException.ExceptionName CoreException.GetObjectData(SerializationInfo, StreamingContext) Namespace : Aviant.DDD.Application.Exceptions Assembly : Aviant.DDD.Application.dll Syntax public sealed class NotFoundException : ApplicationException Constructors | Improve this Doc View Source NotFoundException(String) Declaration public NotFoundException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source NotFoundException(String, Exception) Declaration public NotFoundException(string message, Exception innerInner) Parameters Type Name Description System.String message Exception innerInner | Improve this Doc View Source NotFoundException(String, Object) Declaration public NotFoundException(string name, object key) Parameters Type Name Description System.String name System.Object key"
  },
  "api/Aviant.DDD.Application.Exceptions.ValidationException.html": {
    "href": "api/Aviant.DDD.Application.Exceptions.ValidationException.html",
    "title": "Class ValidationException | Aviant DDD Library Documentation",
    "keywords": "Class ValidationException Inheritance System.Object CoreException ApplicationException ValidationException Inherited Members CoreException.ErrorCode CoreException.FamilyCode CoreException.Occurred CoreException.ExceptionId CoreException.ExceptionName CoreException.GetObjectData(SerializationInfo, StreamingContext) Namespace : Aviant.DDD.Application.Exceptions Assembly : Aviant.DDD.Application.dll Syntax public sealed class ValidationException : ApplicationException Constructors | Improve this Doc View Source ValidationException() Declaration public ValidationException() | Improve this Doc View Source ValidationException(IEnumerable<ValidationFailure>) Declaration public ValidationException(IEnumerable<ValidationFailure> failures) Parameters Type Name Description IEnumerable < ValidationFailure > failures Properties | Improve this Doc View Source Failures Declaration public IDictionary<string, string[]>? Failures { get; } Property Value Type Description System.Nullable < IDictionary < System.String , System.String []>>"
  },
  "api/Aviant.DDD.Application.Identity.ApplicationRole.html": {
    "href": "api/Aviant.DDD.Application.Identity.ApplicationRole.html",
    "title": "Class ApplicationRole | Aviant DDD Library Documentation",
    "keywords": "Class ApplicationRole Inheritance System.Object ApplicationRole Namespace : Aviant.DDD.Application.Identity Assembly : Aviant.DDD.Application.dll Syntax public abstract class ApplicationRole : IdentityRole<Guid>"
  },
  "api/Aviant.DDD.Application.Identity.ApplicationUser.html": {
    "href": "api/Aviant.DDD.Application.Identity.ApplicationUser.html",
    "title": "Class ApplicationUser | Aviant DDD Library Documentation",
    "keywords": "Class ApplicationUser Inheritance System.Object ApplicationUser Namespace : Aviant.DDD.Application.Identity Assembly : Aviant.DDD.Application.dll Syntax public abstract class ApplicationUser : IdentityUser<Guid>"
  },
  "api/Aviant.DDD.Application.Identity.html": {
    "href": "api/Aviant.DDD.Application.Identity.html",
    "title": "Namespace Aviant.DDD.Application.Identity | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Identity Classes ApplicationRole ApplicationUser IdentityResult Interfaces ICurrentUserService IIdentityService"
  },
  "api/Aviant.DDD.Application.Identity.ICurrentUserService.html": {
    "href": "api/Aviant.DDD.Application.Identity.ICurrentUserService.html",
    "title": "Interface ICurrentUserService | Aviant DDD Library Documentation",
    "keywords": "Interface ICurrentUserService Namespace : Aviant.DDD.Application.Identity Assembly : Aviant.DDD.Application.dll Syntax public interface ICurrentUserService Properties | Improve this Doc View Source UserId Declaration Guid UserId { get; } Property Value Type Description Guid"
  },
  "api/Aviant.DDD.Application.Identity.IdentityResult.html": {
    "href": "api/Aviant.DDD.Application.Identity.IdentityResult.html",
    "title": "Class IdentityResult | Aviant DDD Library Documentation",
    "keywords": "Class IdentityResult Inheritance System.Object IdentityResult Namespace : Aviant.DDD.Application.Identity Assembly : Aviant.DDD.Application.dll Syntax public sealed class IdentityResult : object Properties | Improve this Doc View Source Errors Declaration public string[] Errors { get; } Property Value Type Description System.String [] | Improve this Doc View Source Succeeded Declaration public bool Succeeded { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Failure(IEnumerable<String>) Declaration public static IdentityResult Failure(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < System.String > errors Returns Type Description IdentityResult | Improve this Doc View Source Success() In case you need to override the default behaviour, you can use in your derived class something like this: public new static IdentityResult Success() { ... } Declaration public static IdentityResult Success() Returns Type Description IdentityResult"
  },
  "api/Aviant.DDD.Application.Identity.IIdentityService.html": {
    "href": "api/Aviant.DDD.Application.Identity.IIdentityService.html",
    "title": "Interface IIdentityService | Aviant DDD Library Documentation",
    "keywords": "Interface IIdentityService Namespace : Aviant.DDD.Application.Identity Assembly : Aviant.DDD.Application.dll Syntax public interface IIdentityService Methods | Improve this Doc View Source AuthenticateAsync(String, String, CancellationToken) Declaration Task<object?> AuthenticateAsync(string username, string password, CancellationToken cancellationToken = null) Parameters Type Name Description System.String username System.String password CancellationToken cancellationToken Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source ConfirmEmailAsync(String, String, CancellationToken) Declaration Task<IdentityResult> ConfirmEmailAsync(string token, string email, CancellationToken cancellationToken = null) Parameters Type Name Description System.String token System.String email CancellationToken cancellationToken Returns Type Description Task < IdentityResult > | Improve this Doc View Source CreateUserAsync(String, String, CancellationToken) Declaration Task<(IdentityResult Result, Guid UserId)> CreateUserAsync(string username, string password, CancellationToken cancellationToken = null) Parameters Type Name Description System.String username System.String password CancellationToken cancellationToken Returns Type Description Task < System.ValueTuple < IdentityResult , Guid >> | Improve this Doc View Source DeleteUserAsync(Guid, CancellationToken) Declaration Task<IdentityResult> DeleteUserAsync(Guid userId, CancellationToken cancellationToken = null) Parameters Type Name Description Guid userId CancellationToken cancellationToken Returns Type Description Task < IdentityResult > | Improve this Doc View Source GetUserNameAsync(Guid, CancellationToken) Declaration Task<string> GetUserNameAsync(Guid userId, CancellationToken cancellationToken = null) Parameters Type Name Description Guid userId CancellationToken cancellationToken Returns Type Description Task < System.String >"
  },
  "api/Aviant.DDD.Application.Mappings.html": {
    "href": "api/Aviant.DDD.Application.Mappings.html",
    "title": "Namespace Aviant.DDD.Application.Mappings | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Mappings Classes MappingProfile Interfaces IMapFrom<T> IMapTo<T>"
  },
  "api/Aviant.DDD.Application.Mappings.IMapFrom-1.html": {
    "href": "api/Aviant.DDD.Application.Mappings.IMapFrom-1.html",
    "title": "Interface IMapFrom<T> | Aviant DDD Library Documentation",
    "keywords": "Interface IMapFrom<T> Namespace : Aviant.DDD.Application.Mappings Assembly : Aviant.DDD.Application.dll Syntax public interface IMapFrom<T> Type Parameters Name Description T Methods | Improve this Doc View Source Mapping(Profile) Declaration virtual void Mapping(Profile profile) Parameters Type Name Description Profile profile"
  },
  "api/Aviant.DDD.Application.Mappings.IMapTo-1.html": {
    "href": "api/Aviant.DDD.Application.Mappings.IMapTo-1.html",
    "title": "Interface IMapTo<T> | Aviant DDD Library Documentation",
    "keywords": "Interface IMapTo<T> Namespace : Aviant.DDD.Application.Mappings Assembly : Aviant.DDD.Application.dll Syntax public interface IMapTo<T> Type Parameters Name Description T Methods | Improve this Doc View Source Mapping(Profile) Declaration virtual void Mapping(Profile profile) Parameters Type Name Description Profile profile"
  },
  "api/Aviant.DDD.Application.Mappings.MappingProfile.html": {
    "href": "api/Aviant.DDD.Application.Mappings.MappingProfile.html",
    "title": "Class MappingProfile | Aviant DDD Library Documentation",
    "keywords": "Class MappingProfile Inheritance System.Object MappingProfile Namespace : Aviant.DDD.Application.Mappings Assembly : Aviant.DDD.Application.dll Syntax public sealed class MappingProfile : Profile Constructors | Improve this Doc View Source MappingProfile(Assembly) Declaration public MappingProfile(Assembly assembly) Parameters Type Name Description Assembly assembly"
  },
  "api/Aviant.DDD.Application.Orchestration.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.html",
    "title": "Namespace Aviant.DDD.Application.Orchestration | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Orchestration Classes Orchestrator Orchestrator<TDbContext> Orchestrator<TAggregate, TAggregateId> OrchestratorBase OrchestratorResponse Interfaces IOrchestrator IOrchestrator<TDbContext> IOrchestrator<TAggregate, TAggregateId>"
  },
  "api/Aviant.DDD.Application.Orchestration.IOrchestrator.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.IOrchestrator.html",
    "title": "Interface IOrchestrator | Aviant DDD Library Documentation",
    "keywords": "Interface IOrchestrator Namespace : Aviant.DDD.Application.Orchestration Assembly : Aviant.DDD.Application.dll Syntax public interface IOrchestrator Methods | Improve this Doc View Source SendCommandAsync<T>(ICommand<T>, CancellationToken) Declaration Task<OrchestratorResponse> SendCommandAsync<T>(ICommand<T> command, CancellationToken cancellationToken = null) Parameters Type Name Description ICommand <T> command CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Type Parameters Name Description T | Improve this Doc View Source SendQueryAsync<T>(IQuery<T>, CancellationToken) Declaration Task<OrchestratorResponse> SendQueryAsync<T>(IQuery<T> query, CancellationToken cancellationToken = null) Parameters Type Name Description IQuery <T> query CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Type Parameters Name Description T"
  },
  "api/Aviant.DDD.Application.Orchestration.IOrchestrator-1.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.IOrchestrator-1.html",
    "title": "Interface IOrchestrator<TDbContext> | Aviant DDD Library Documentation",
    "keywords": "Interface IOrchestrator<TDbContext> Namespace : Aviant.DDD.Application.Orchestration Assembly : Aviant.DDD.Application.dll Syntax public interface IOrchestrator<TDbContext> where TDbContext : IDbContextWrite Type Parameters Name Description TDbContext Methods | Improve this Doc View Source SendCommandAsync<T>(ICommand<T>, CancellationToken) Declaration Task<OrchestratorResponse> SendCommandAsync<T>(ICommand<T> command, CancellationToken cancellationToken = null) Parameters Type Name Description ICommand <T> command CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Type Parameters Name Description T | Improve this Doc View Source SendQueryAsync<T>(IQuery<T>, CancellationToken) Declaration Task<OrchestratorResponse> SendQueryAsync<T>(IQuery<T> query, CancellationToken cancellationToken = null) Parameters Type Name Description IQuery <T> query CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Type Parameters Name Description T"
  },
  "api/Aviant.DDD.Application.Orchestration.IOrchestrator-2.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.IOrchestrator-2.html",
    "title": "Interface IOrchestrator<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Interface IOrchestrator<TAggregate, TAggregateId> Namespace : Aviant.DDD.Application.Orchestration Assembly : Aviant.DDD.Application.dll Syntax public interface IOrchestrator<in TAggregate, out TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Methods | Improve this Doc View Source SendCommandAsync(ICommand<TAggregate, TAggregateId>, CancellationToken) Declaration Task<OrchestratorResponse> SendCommandAsync(ICommand<TAggregate, TAggregateId> command, CancellationToken cancellationToken = null) Parameters Type Name Description ICommand <TAggregate, TAggregateId> command CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > | Improve this Doc View Source SendQueryAsync<T>(IQuery<T>, CancellationToken) Declaration Task<OrchestratorResponse> SendQueryAsync<T>(IQuery<T> query, CancellationToken cancellationToken = null) Parameters Type Name Description IQuery <T> query CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Type Parameters Name Description T"
  },
  "api/Aviant.DDD.Application.Orchestration.Orchestrator.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.Orchestrator.html",
    "title": "Class Orchestrator | Aviant DDD Library Documentation",
    "keywords": "Class Orchestrator Inheritance System.Object OrchestratorBase Orchestrator Implements IOrchestrator Inherited Members OrchestratorBase.PreUnitOfWork<TCommand, TCommandResponse>(TCommand, CancellationToken) OrchestratorBase.PostUnitOfWork<TCommandResponse>(TCommandResponse, CancellationToken) OrchestratorBase.SendQueryAsync<T>(IQuery<T>, CancellationToken) Namespace : Aviant.DDD.Application.Orchestration Assembly : Aviant.DDD.Application.dll Syntax public sealed class Orchestrator : OrchestratorBase, IOrchestrator Constructors | Improve this Doc View Source Orchestrator(IMessages, IApplicationEventDispatcher, IMediator) Declaration public Orchestrator(IMessages messages, IApplicationEventDispatcher applicationEventDispatcher, IMediator mediator) Parameters Type Name Description IMessages messages IApplicationEventDispatcher applicationEventDispatcher IMediator mediator Methods | Improve this Doc View Source SendCommandAsync<T>(ICommand<T>, CancellationToken) Declaration public Task<OrchestratorResponse> SendCommandAsync<T>(ICommand<T> command, CancellationToken cancellationToken = null) Parameters Type Name Description ICommand <T> command CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Type Parameters Name Description T Implements IOrchestrator"
  },
  "api/Aviant.DDD.Application.Orchestration.Orchestrator-1.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.Orchestrator-1.html",
    "title": "Class Orchestrator<TDbContext> | Aviant DDD Library Documentation",
    "keywords": "Class Orchestrator<TDbContext> Inheritance System.Object OrchestratorBase Orchestrator<TDbContext> Implements IOrchestrator <TDbContext> Inherited Members OrchestratorBase.PreUnitOfWork<TCommand, TCommandResponse>(TCommand, CancellationToken) OrchestratorBase.PostUnitOfWork<TCommandResponse>(TCommandResponse, CancellationToken) OrchestratorBase.SendQueryAsync<T>(IQuery<T>, CancellationToken) Namespace : Aviant.DDD.Application.Orchestration Assembly : Aviant.DDD.Application.dll Syntax public sealed class Orchestrator<TDbContext> : OrchestratorBase, IOrchestrator<TDbContext> where TDbContext : IDbContextWrite Type Parameters Name Description TDbContext Constructors | Improve this Doc View Source Orchestrator(IUnitOfWork<TDbContext>, IMessages, IApplicationEventDispatcher, IMediator) Declaration public Orchestrator(IUnitOfWork<TDbContext> unitOfWork, IMessages messages, IApplicationEventDispatcher applicationEventDispatcher, IMediator mediator) Parameters Type Name Description IUnitOfWork <TDbContext> unitOfWork IMessages messages IApplicationEventDispatcher applicationEventDispatcher IMediator mediator Methods | Improve this Doc View Source SendCommandAsync<T>(ICommand<T>, CancellationToken) Declaration public Task<OrchestratorResponse> SendCommandAsync<T>(ICommand<T> command, CancellationToken cancellationToken = null) Parameters Type Name Description ICommand <T> command CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Type Parameters Name Description T Implements IOrchestrator<TDbContext>"
  },
  "api/Aviant.DDD.Application.Orchestration.Orchestrator-2.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.Orchestrator-2.html",
    "title": "Class Orchestrator<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Class Orchestrator<TAggregate, TAggregateId> Inheritance System.Object OrchestratorBase Orchestrator<TAggregate, TAggregateId> Implements IOrchestrator <TAggregate, TAggregateId> Inherited Members OrchestratorBase.PreUnitOfWork<TCommand, TCommandResponse>(TCommand, CancellationToken) OrchestratorBase.PostUnitOfWork<TCommandResponse>(TCommandResponse, CancellationToken) OrchestratorBase.SendQueryAsync<T>(IQuery<T>, CancellationToken) Namespace : Aviant.DDD.Application.Orchestration Assembly : Aviant.DDD.Application.dll Syntax public sealed class Orchestrator<TAggregate, TAggregateId> : OrchestratorBase, IOrchestrator<TAggregate, TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Constructors | Improve this Doc View Source Orchestrator(IUnitOfWork<TAggregate, TAggregateId>, IMessages, IApplicationEventDispatcher, IMediator) Declaration public Orchestrator(IUnitOfWork<TAggregate, TAggregateId> unitOfWork, IMessages messages, IApplicationEventDispatcher applicationEventDispatcher, IMediator mediator) Parameters Type Name Description IUnitOfWork <TAggregate, TAggregateId> unitOfWork IMessages messages IApplicationEventDispatcher applicationEventDispatcher IMediator mediator Methods | Improve this Doc View Source SendCommandAsync(ICommand<TAggregate, TAggregateId>, CancellationToken) Declaration public Task<OrchestratorResponse> SendCommandAsync(ICommand<TAggregate, TAggregateId> command, CancellationToken cancellationToken = null) Parameters Type Name Description ICommand <TAggregate, TAggregateId> command CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Implements IOrchestrator<TAggregate, TAggregateId>"
  },
  "api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.OrchestratorBase.html",
    "title": "Class OrchestratorBase | Aviant DDD Library Documentation",
    "keywords": "Class OrchestratorBase Inheritance System.Object OrchestratorBase Orchestrator Orchestrator<TDbContext> Orchestrator<TAggregate, TAggregateId> Namespace : Aviant.DDD.Application.Orchestration Assembly : Aviant.DDD.Application.dll Syntax public abstract class OrchestratorBase : object Constructors | Improve this Doc View Source OrchestratorBase(IMessages, IApplicationEventDispatcher, IMediator) Declaration protected OrchestratorBase(IMessages messages, IApplicationEventDispatcher applicationEventDispatcher, IMediator mediator) Parameters Type Name Description IMessages messages IApplicationEventDispatcher applicationEventDispatcher IMediator mediator Methods | Improve this Doc View Source PostUnitOfWork<TCommandResponse>(TCommandResponse, CancellationToken) Declaration protected Task<dynamic> PostUnitOfWork<TCommandResponse>(TCommandResponse commandResponse, CancellationToken cancellationToken) Parameters Type Name Description TCommandResponse commandResponse CancellationToken cancellationToken Returns Type Description Task < System.Object > Type Parameters Name Description TCommandResponse | Improve this Doc View Source PreUnitOfWork<TCommand, TCommandResponse>(TCommand, CancellationToken) Declaration protected Task<(TCommandResponse commandResponse, List<string>? _messages)> PreUnitOfWork<TCommand, TCommandResponse>(TCommand command, CancellationToken cancellationToken = null) where TCommand : class, IRequest<TCommandResponse> Parameters Type Name Description TCommand command CancellationToken cancellationToken Returns Type Description Task < System.ValueTuple <TCommandResponse, System.Nullable < List < System.String >>>> Type Parameters Name Description TCommand TCommandResponse | Improve this Doc View Source SendQueryAsync<T>(IQuery<T>, CancellationToken) Declaration public Task<OrchestratorResponse> SendQueryAsync<T>(IQuery<T> query, CancellationToken cancellationToken = null) Parameters Type Name Description IQuery <T> query CancellationToken cancellationToken Returns Type Description Task < OrchestratorResponse > Type Parameters Name Description T"
  },
  "api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html": {
    "href": "api/Aviant.DDD.Application.Orchestration.OrchestratorResponse.html",
    "title": "Class OrchestratorResponse | Aviant DDD Library Documentation",
    "keywords": "Class OrchestratorResponse Inheritance System.Object OrchestratorResponse Namespace : Aviant.DDD.Application.Orchestration Assembly : Aviant.DDD.Application.dll Syntax public sealed class OrchestratorResponse : object Constructors | Improve this Doc View Source OrchestratorResponse() Declaration public OrchestratorResponse() Properties | Improve this Doc View Source Messages Declaration public List<string> Messages { get; set; } Property Value Type Description List < System.String > | Improve this Doc View Source Succeeded Declaration public bool Succeeded { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Payload() Declaration public object? Payload() Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source Payload<T>() Declaration public T Payload<T>() Returns Type Description T Type Parameters Name Description T"
  },
  "api/Aviant.DDD.Application.Persistance.html": {
    "href": "api/Aviant.DDD.Application.Persistance.html",
    "title": "Namespace Aviant.DDD.Application.Persistance | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Persistance Interfaces IDbContextRead IDbContextWrite IUnitOfWork<TDbContext> Unit of Work Interface IUnitOfWork<TAggregate, TAggregateId>"
  },
  "api/Aviant.DDD.Application.Persistance.IDbContextRead.html": {
    "href": "api/Aviant.DDD.Application.Persistance.IDbContextRead.html",
    "title": "Interface IDbContextRead | Aviant DDD Library Documentation",
    "keywords": "Interface IDbContextRead Namespace : Aviant.DDD.Application.Persistance Assembly : Aviant.DDD.Application.dll Syntax public interface IDbContextRead : IDisposable"
  },
  "api/Aviant.DDD.Application.Persistance.IDbContextWrite.html": {
    "href": "api/Aviant.DDD.Application.Persistance.IDbContextWrite.html",
    "title": "Interface IDbContextWrite | Aviant DDD Library Documentation",
    "keywords": "Interface IDbContextWrite Namespace : Aviant.DDD.Application.Persistance Assembly : Aviant.DDD.Application.dll Syntax public interface IDbContextWrite : IDisposable Methods | Improve this Doc View Source SaveChangesAsync(CancellationToken) Declaration Task<int> SaveChangesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 >"
  },
  "api/Aviant.DDD.Application.Persistance.IUnitOfWork-1.html": {
    "href": "api/Aviant.DDD.Application.Persistance.IUnitOfWork-1.html",
    "title": "Interface IUnitOfWork<TDbContext> | Aviant DDD Library Documentation",
    "keywords": "Interface IUnitOfWork<TDbContext> Unit of Work Interface Namespace : Aviant.DDD.Application.Persistance Assembly : Aviant.DDD.Application.dll Syntax public interface IUnitOfWork<TDbContext> where TDbContext : IDbContextWrite Type Parameters Name Description TDbContext Methods | Improve this Doc View Source CommitAsync(CancellationToken) Commit changes to database persistence Declaration Task<int> CommitAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 > Integer representing affected rows"
  },
  "api/Aviant.DDD.Application.Persistance.IUnitOfWork-2.html": {
    "href": "api/Aviant.DDD.Application.Persistance.IUnitOfWork-2.html",
    "title": "Interface IUnitOfWork<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Interface IUnitOfWork<TAggregate, TAggregateId> Namespace : Aviant.DDD.Application.Persistance Assembly : Aviant.DDD.Application.dll Syntax public interface IUnitOfWork<in TAggregate, TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Methods | Improve this Doc View Source CommitAsync(TAggregate, CancellationToken) Commit changes to event sourcing persistence Declaration Task<bool> CommitAsync(TAggregate aggregate, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregate aggregate CancellationToken cancellationToken Returns Type Description Task < System.Boolean >"
  },
  "api/Aviant.DDD.Application.Processors.html": {
    "href": "api/Aviant.DDD.Application.Processors.html",
    "title": "Namespace Aviant.DDD.Application.Processors | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Processors Classes RequestPostProcessor<TRequest, TResponse> RequestPreProcessor<TRequest> RetryProcessor<TNotification>"
  },
  "api/Aviant.DDD.Application.Processors.RequestPostProcessor-2.html": {
    "href": "api/Aviant.DDD.Application.Processors.RequestPostProcessor-2.html",
    "title": "Class RequestPostProcessor<TRequest, TResponse> | Aviant DDD Library Documentation",
    "keywords": "Class RequestPostProcessor<TRequest, TResponse> Inheritance System.Object RequestPostProcessor<TRequest, TResponse> Implements MediatR.Pipeline.IRequestPostProcessor <TRequest, TResponse> Namespace : Aviant.DDD.Application.Processors Assembly : Aviant.DDD.Application.dll Syntax public abstract class RequestPostProcessor<TRequest, TResponse> : object, IRequestPostProcessor<TRequest, TResponse>, MediatR.Pipeline.IRequestPostProcessor<TRequest, TResponse> Type Parameters Name Description TRequest TResponse Methods | Improve this Doc View Source Process(TRequest, TResponse, CancellationToken) Declaration public abstract Task Process(TRequest request, TResponse response, CancellationToken cancellationToken) Parameters Type Name Description TRequest request TResponse response CancellationToken cancellationToken Returns Type Description Task Implements MediatR.Pipeline.IRequestPostProcessor<, >"
  },
  "api/Aviant.DDD.Application.Processors.RequestPreProcessor-1.html": {
    "href": "api/Aviant.DDD.Application.Processors.RequestPreProcessor-1.html",
    "title": "Class RequestPreProcessor<TRequest> | Aviant DDD Library Documentation",
    "keywords": "Class RequestPreProcessor<TRequest> Inheritance System.Object RequestPreProcessor<TRequest> Implements MediatR.Pipeline.IRequestPreProcessor <TRequest> Namespace : Aviant.DDD.Application.Processors Assembly : Aviant.DDD.Application.dll Syntax public abstract class RequestPreProcessor<TRequest> : object, IRequestPreProcessor<TRequest>, MediatR.Pipeline.IRequestPreProcessor<TRequest> Type Parameters Name Description TRequest Methods | Improve this Doc View Source Process(TRequest, CancellationToken) Declaration public abstract Task Process(TRequest request, CancellationToken cancellationToken) Parameters Type Name Description TRequest request CancellationToken cancellationToken Returns Type Description Task Implements MediatR.Pipeline.IRequestPreProcessor<>"
  },
  "api/Aviant.DDD.Application.Processors.RetryProcessor-1.html": {
    "href": "api/Aviant.DDD.Application.Processors.RetryProcessor-1.html",
    "title": "Class RetryProcessor<TNotification> | Aviant DDD Library Documentation",
    "keywords": "Class RetryProcessor<TNotification> Inheritance System.Object RetryProcessor<TNotification> Namespace : Aviant.DDD.Application.Processors Assembly : Aviant.DDD.Application.dll Syntax public sealed class RetryProcessor<TNotification> : INotificationHandler<TNotification> where TNotification : INotification Type Parameters Name Description TNotification Constructors | Improve this Doc View Source RetryProcessor(INotificationHandler<TNotification>) Declaration public RetryProcessor(INotificationHandler<TNotification> inner) Parameters Type Name Description INotificationHandler <TNotification> inner Methods | Improve this Doc View Source Handle(TNotification, CancellationToken) Declaration public Task Handle(TNotification notification, CancellationToken cancellationToken) Parameters Type Name Description TNotification notification CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Aviant.DDD.Application.Queries.html": {
    "href": "api/Aviant.DDD.Application.Queries.html",
    "title": "Namespace Aviant.DDD.Application.Queries | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Queries Classes Query<TResponse> QueryHandler<TQuery, TResponse> Interfaces IQuery<TResponse>"
  },
  "api/Aviant.DDD.Application.Queries.IQuery-1.html": {
    "href": "api/Aviant.DDD.Application.Queries.IQuery-1.html",
    "title": "Interface IQuery<TResponse> | Aviant DDD Library Documentation",
    "keywords": "Interface IQuery<TResponse> Namespace : Aviant.DDD.Application.Queries Assembly : Aviant.DDD.Application.dll Syntax public interface IQuery<out TResponse> : IRequest<TResponse> Type Parameters Name Description TResponse"
  },
  "api/Aviant.DDD.Application.Queries.Query-1.html": {
    "href": "api/Aviant.DDD.Application.Queries.Query-1.html",
    "title": "Class Query<TResponse> | Aviant DDD Library Documentation",
    "keywords": "Class Query<TResponse> Inheritance System.Object Query<TResponse> Implements IQuery <TResponse> IRequest <TResponse> Namespace : Aviant.DDD.Application.Queries Assembly : Aviant.DDD.Application.dll Syntax public abstract class Query<TResponse> : object, IQuery<TResponse>, IRequest<TResponse> Type Parameters Name Description TResponse Implements IQuery<TResponse> IRequest<>"
  },
  "api/Aviant.DDD.Application.Queries.QueryHandler-2.html": {
    "href": "api/Aviant.DDD.Application.Queries.QueryHandler-2.html",
    "title": "Class QueryHandler<TQuery, TResponse> | Aviant DDD Library Documentation",
    "keywords": "Class QueryHandler<TQuery, TResponse> Inheritance System.Object QueryHandler<TQuery, TResponse> Implements IRequestHandler <TQuery, TResponse> Namespace : Aviant.DDD.Application.Queries Assembly : Aviant.DDD.Application.dll Syntax public abstract class QueryHandler<TQuery, TResponse> : object, IQueryHandler<TQuery, TResponse>, IRequestHandler<TQuery, TResponse> where TQuery : IQuery<TResponse> Type Parameters Name Description TQuery TResponse Methods | Improve this Doc View Source Handle(TQuery, CancellationToken) Declaration public abstract Task<TResponse> Handle(TQuery request, CancellationToken cancellationToken) Parameters Type Name Description TQuery request CancellationToken cancellationToken Returns Type Description Task <TResponse> Implements IRequestHandler<, >"
  },
  "api/Aviant.DDD.Application.Services.EventsService-2.html": {
    "href": "api/Aviant.DDD.Application.Services.EventsService-2.html",
    "title": "Class EventsService<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Class EventsService<TAggregate, TAggregateId> Inheritance System.Object EventsService<TAggregate, TAggregateId> Implements IEventsService <TAggregate, TAggregateId> Namespace : Aviant.DDD.Application.Services Assembly : Aviant.DDD.Application.dll Syntax public sealed class EventsService<TAggregate, TAggregateId> : object, IEventsService<TAggregate, TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Constructors | Improve this Doc View Source EventsService(IEventsRepository<TAggregate, TAggregateId>, IEventProducer<TAggregate, TAggregateId>) Declaration public EventsService(IEventsRepository<TAggregate, TAggregateId> eventsRepository, IEventProducer<TAggregate, TAggregateId> eventProducer) Parameters Type Name Description IEventsRepository <TAggregate, TAggregateId> eventsRepository IEventProducer <TAggregate, TAggregateId> eventProducer Methods | Improve this Doc View Source PersistAsync(TAggregate, CancellationToken) Declaration public Task PersistAsync(TAggregate aggregate, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregate aggregate CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source RehydrateAsync(TAggregateId, CancellationToken) Declaration public Task<TAggregate> RehydrateAsync(TAggregateId key, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregateId key CancellationToken cancellationToken Returns Type Description Task <TAggregate> Implements IEventsService<TAggregate, TAggregateId>"
  },
  "api/Aviant.DDD.Application.Services.html": {
    "href": "api/Aviant.DDD.Application.Services.html",
    "title": "Namespace Aviant.DDD.Application.Services | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.Services Classes EventsService<TAggregate, TAggregateId> HttpContextServiceProviderProxy JsonEventDeserializer Interfaces ICsvFileBuilder<TRecord> IDateTimeService IEmailService"
  },
  "api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html": {
    "href": "api/Aviant.DDD.Application.Services.HttpContextServiceProviderProxy.html",
    "title": "Class HttpContextServiceProviderProxy | Aviant DDD Library Documentation",
    "keywords": "Class HttpContextServiceProviderProxy Inheritance System.Object HttpContextServiceProviderProxy Implements IServiceContainer Namespace : Aviant.DDD.Application.Services Assembly : Aviant.DDD.Application.dll Syntax public sealed class HttpContextServiceProviderProxy : object, IServiceContainer Constructors | Improve this Doc View Source HttpContextServiceProviderProxy(IHttpContextAccessor) Declaration public HttpContextServiceProviderProxy(IHttpContextAccessor contextAccessor) Parameters Type Name Description IHttpContextAccessor contextAccessor Methods | Improve this Doc View Source GetRequiredService(Type) Declaration public object GetRequiredService(Type type) Parameters Type Name Description Type type Returns Type Description System.Object | Improve this Doc View Source GetRequiredService<T>(Type) Declaration public T GetRequiredService<T>(Type type) Parameters Type Name Description Type type Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetService(Type) Declaration public object GetService(Type type) Parameters Type Name Description Type type Returns Type Description System.Object | Improve this Doc View Source GetService<T>(Type) Declaration public T GetService<T>(Type type) Parameters Type Name Description Type type Returns Type Description T Type Parameters Name Description T Implements IServiceContainer"
  },
  "api/Aviant.DDD.Application.Services.ICsvFileBuilder-1.html": {
    "href": "api/Aviant.DDD.Application.Services.ICsvFileBuilder-1.html",
    "title": "Interface ICsvFileBuilder<TRecord> | Aviant DDD Library Documentation",
    "keywords": "Interface ICsvFileBuilder<TRecord> Namespace : Aviant.DDD.Application.Services Assembly : Aviant.DDD.Application.dll Syntax public interface ICsvFileBuilder<in TRecord> where TRecord : class Type Parameters Name Description TRecord Methods | Improve this Doc View Source BuildTodoItemsFile(IEnumerable<TRecord>) Declaration byte[] BuildTodoItemsFile(IEnumerable<TRecord> records) Parameters Type Name Description IEnumerable <TRecord> records Returns Type Description System.Byte []"
  },
  "api/Aviant.DDD.Application.Services.IDateTimeService.html": {
    "href": "api/Aviant.DDD.Application.Services.IDateTimeService.html",
    "title": "Interface IDateTimeService | Aviant DDD Library Documentation",
    "keywords": "Interface IDateTimeService Namespace : Aviant.DDD.Application.Services Assembly : Aviant.DDD.Application.dll Syntax public interface IDateTimeService Methods | Improve this Doc View Source Now(Boolean) Declaration DateTime Now(bool utc = false) Parameters Type Name Description System.Boolean utc Returns Type Description DateTime"
  },
  "api/Aviant.DDD.Application.Services.IEmailService.html": {
    "href": "api/Aviant.DDD.Application.Services.IEmailService.html",
    "title": "Interface IEmailService | Aviant DDD Library Documentation",
    "keywords": "Interface IEmailService Namespace : Aviant.DDD.Application.Services Assembly : Aviant.DDD.Application.dll Syntax public interface IEmailService Methods | Improve this Doc View Source From(String, String) Declaration IEmailService From(string name, string address) Parameters Type Name Description System.String name System.String address Returns Type Description IEmailService | Improve this Doc View Source FromServer() Declaration IEmailService FromServer() Returns Type Description IEmailService | Improve this Doc View Source Message() Declaration IEmailService Message() Returns Type Description IEmailService | Improve this Doc View Source Send() Declaration bool Send() Returns Type Description System.Boolean | Improve this Doc View Source SendAsync(CancellationToken) Declaration Task<bool> SendAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > | Improve this Doc View Source To(String, String) Declaration IEmailService To(string name, string address) Parameters Type Name Description System.String name System.String address Returns Type Description IEmailService | Improve this Doc View Source ToServer() Declaration IEmailService ToServer() Returns Type Description IEmailService | Improve this Doc View Source WithBodyHtml(String) Declaration IEmailService WithBodyHtml(string body) Parameters Type Name Description System.String body Returns Type Description IEmailService | Improve this Doc View Source WithBodyPlain(String) Declaration IEmailService WithBodyPlain(string body) Parameters Type Name Description System.String body Returns Type Description IEmailService | Improve this Doc View Source WithSubject(String) Declaration IEmailService WithSubject(string subject) Parameters Type Name Description System.String subject Returns Type Description IEmailService"
  },
  "api/Aviant.DDD.Application.Services.JsonEventDeserializer.html": {
    "href": "api/Aviant.DDD.Application.Services.JsonEventDeserializer.html",
    "title": "Class JsonEventDeserializer | Aviant DDD Library Documentation",
    "keywords": "Class JsonEventDeserializer Inheritance System.Object JsonEventDeserializer Implements IEventDeserializer Namespace : Aviant.DDD.Application.Services Assembly : Aviant.DDD.Application.dll Syntax public sealed class JsonEventDeserializer : object, IEventDeserializer, IJsonEventDeserializerCache Constructors | Improve this Doc View Source JsonEventDeserializer(Nullable<IEnumerable<Assembly>>) Declaration public JsonEventDeserializer(IEnumerable<Assembly>? assemblies) Parameters Type Name Description System.Nullable < IEnumerable < Assembly >> assemblies Methods | Improve this Doc View Source Deserialize<TAggregateId>(String, Byte[]) Declaration public IDomainEvent<TAggregateId> Deserialize<TAggregateId>(string type, byte[] data) where TAggregateId : IAggregateId Parameters Type Name Description System.String type System.Byte [] data Returns Type Description IDomainEvent <TAggregateId> Type Parameters Name Description TAggregateId | Improve this Doc View Source Deserialize<TAggregateId>(String, String) Declaration public IDomainEvent<TAggregateId> Deserialize<TAggregateId>(string type, string data) where TAggregateId : IAggregateId Parameters Type Name Description System.String type System.String data Returns Type Description IDomainEvent <TAggregateId> Type Parameters Name Description TAggregateId Implements IEventDeserializer"
  },
  "api/Aviant.DDD.Application.UseCases.html": {
    "href": "api/Aviant.DDD.Application.UseCases.html",
    "title": "Namespace Aviant.DDD.Application.UseCases | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Application.UseCases Classes UseCase<TUseCaseOutput> UseCase<TUseCaseInput, TUseCaseOutput> UseCase<TUseCaseInput, TUseCaseOutput, TDbContext> UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId> UseCaseBase<TUseCaseOutput> UseCaseInput UseCaseInput<TInput, TValidator> Interfaces IUseCase<TUseCaseOutput> IUseCaseInput IUseCaseOutput"
  },
  "api/Aviant.DDD.Application.UseCases.IUseCase-1.html": {
    "href": "api/Aviant.DDD.Application.UseCases.IUseCase-1.html",
    "title": "Interface IUseCase<TUseCaseOutput> | Aviant DDD Library Documentation",
    "keywords": "Interface IUseCase<TUseCaseOutput> Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public interface IUseCase<in TUseCaseOutput> where TUseCaseOutput : class, IUseCaseOutput Type Parameters Name Description TUseCaseOutput Methods | Improve this Doc View Source SetOutput(TUseCaseOutput) Declaration void SetOutput(TUseCaseOutput output) Parameters Type Name Description TUseCaseOutput output"
  },
  "api/Aviant.DDD.Application.UseCases.IUseCaseInput.html": {
    "href": "api/Aviant.DDD.Application.UseCases.IUseCaseInput.html",
    "title": "Interface IUseCaseInput | Aviant DDD Library Documentation",
    "keywords": "Interface IUseCaseInput Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public interface IUseCaseInput Methods | Improve this Doc View Source ValidateAsync(CancellationToken) Declaration Task ValidateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Aviant.DDD.Application.UseCases.IUseCaseOutput.html": {
    "href": "api/Aviant.DDD.Application.UseCases.IUseCaseOutput.html",
    "title": "Interface IUseCaseOutput | Aviant DDD Library Documentation",
    "keywords": "Interface IUseCaseOutput Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public interface IUseCaseOutput"
  },
  "api/Aviant.DDD.Application.UseCases.UseCase-1.html": {
    "href": "api/Aviant.DDD.Application.UseCases.UseCase-1.html",
    "title": "Class UseCase<TUseCaseOutput> | Aviant DDD Library Documentation",
    "keywords": "Class UseCase<TUseCaseOutput> Inheritance System.Object UseCaseBase <TUseCaseOutput> UseCase<TUseCaseOutput> Implements IUseCase <TUseCaseOutput> Inherited Members UseCaseBase<TUseCaseOutput>.Output UseCaseBase<TUseCaseOutput>.Orchestrator UseCaseBase<TUseCaseOutput>.SetOutput(TUseCaseOutput) Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public abstract class UseCase<TUseCaseOutput> : UseCaseBase<TUseCaseOutput>, IUseCase<TUseCaseOutput>, IUseCaseExecute where TUseCaseOutput : class, IUseCaseOutput Type Parameters Name Description TUseCaseOutput Methods | Improve this Doc View Source ExecuteAsync(CancellationToken) Declaration public abstract Task ExecuteAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements IUseCase<TUseCaseOutput>"
  },
  "api/Aviant.DDD.Application.UseCases.UseCase-2.html": {
    "href": "api/Aviant.DDD.Application.UseCases.UseCase-2.html",
    "title": "Class UseCase<TUseCaseInput, TUseCaseOutput> | Aviant DDD Library Documentation",
    "keywords": "Class UseCase<TUseCaseInput, TUseCaseOutput> Inheritance System.Object UseCaseBase <TUseCaseOutput> UseCase<TUseCaseInput, TUseCaseOutput> UseCase<TUseCaseInput, TUseCaseOutput, TDbContext> UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId> Implements IUseCase <TUseCaseOutput> Inherited Members UseCaseBase<TUseCaseOutput>.Output UseCaseBase<TUseCaseOutput>.Orchestrator UseCaseBase<TUseCaseOutput>.SetOutput(TUseCaseOutput) Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public abstract class UseCase<TUseCaseInput, TUseCaseOutput> : UseCaseBase<TUseCaseOutput>, IUseCase<TUseCaseOutput>, IUseCaseExecute<TUseCaseInput> where TUseCaseInput : class, IUseCaseInput where TUseCaseOutput : class, IUseCaseOutput Type Parameters Name Description TUseCaseInput TUseCaseOutput Methods | Improve this Doc View Source ExecuteAsync(TUseCaseInput, CancellationToken) Declaration public abstract Task ExecuteAsync(TUseCaseInput input, CancellationToken cancellationToken = null) Parameters Type Name Description TUseCaseInput input CancellationToken cancellationToken Returns Type Description Task Implements IUseCase<TUseCaseOutput>"
  },
  "api/Aviant.DDD.Application.UseCases.UseCase-3.html": {
    "href": "api/Aviant.DDD.Application.UseCases.UseCase-3.html",
    "title": "Class UseCase<TUseCaseInput, TUseCaseOutput, TDbContext> | Aviant DDD Library Documentation",
    "keywords": "Class UseCase<TUseCaseInput, TUseCaseOutput, TDbContext> Inheritance System.Object UseCaseBase <TUseCaseOutput> UseCase <TUseCaseInput, TUseCaseOutput> UseCase<TUseCaseInput, TUseCaseOutput, TDbContext> Implements IUseCase <TUseCaseOutput> Inherited Members UseCase<TUseCaseInput, TUseCaseOutput>.ExecuteAsync(TUseCaseInput, CancellationToken) UseCaseBase<TUseCaseOutput>.Output UseCaseBase<TUseCaseOutput>.SetOutput(TUseCaseOutput) Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public abstract class UseCase<TUseCaseInput, TUseCaseOutput, TDbContext> : UseCase<TUseCaseInput, TUseCaseOutput>, IUseCase<TUseCaseOutput>, IUseCaseExecute<TUseCaseInput> where TUseCaseInput : class, IUseCaseInput where TUseCaseOutput : class, IUseCaseOutput where TDbContext : IDbContextWrite Type Parameters Name Description TUseCaseInput TUseCaseOutput TDbContext Properties | Improve this Doc View Source Orchestrator Declaration protected IOrchestrator<TDbContext> Orchestrator { get; } Property Value Type Description IOrchestrator <TDbContext> Implements IUseCase<TUseCaseOutput>"
  },
  "api/Aviant.DDD.Application.UseCases.UseCase-4.html": {
    "href": "api/Aviant.DDD.Application.UseCases.UseCase-4.html",
    "title": "Class UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Class UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId> Inheritance System.Object UseCaseBase <TUseCaseOutput> UseCase <TUseCaseInput, TUseCaseOutput> UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId> Implements IUseCase <TUseCaseOutput> Inherited Members UseCase<TUseCaseInput, TUseCaseOutput>.ExecuteAsync(TUseCaseInput, CancellationToken) UseCaseBase<TUseCaseOutput>.Output UseCaseBase<TUseCaseOutput>.SetOutput(TUseCaseOutput) Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public abstract class UseCase<TUseCaseInput, TUseCaseOutput, TAggregate, TAggregateId> : UseCase<TUseCaseInput, TUseCaseOutput>, IUseCase<TUseCaseOutput>, IUseCaseExecute<TUseCaseInput> where TUseCaseInput : class, IUseCaseInput where TUseCaseOutput : class, IUseCaseOutput where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TUseCaseInput TUseCaseOutput TAggregate TAggregateId Properties | Improve this Doc View Source Orchestrator Declaration protected IOrchestrator<TAggregate, TAggregateId> Orchestrator { get; } Property Value Type Description IOrchestrator <TAggregate, TAggregateId> Implements IUseCase<TUseCaseOutput>"
  },
  "api/Aviant.DDD.Application.UseCases.UseCaseBase-1.html": {
    "href": "api/Aviant.DDD.Application.UseCases.UseCaseBase-1.html",
    "title": "Class UseCaseBase<TUseCaseOutput> | Aviant DDD Library Documentation",
    "keywords": "Class UseCaseBase<TUseCaseOutput> Inheritance System.Object UseCaseBase<TUseCaseOutput> UseCase<TUseCaseOutput> UseCase<TUseCaseInput, TUseCaseOutput> Implements IUseCase <TUseCaseOutput> Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public abstract class UseCaseBase<TUseCaseOutput> : object, IUseCase<TUseCaseOutput> where TUseCaseOutput : class, IUseCaseOutput Type Parameters Name Description TUseCaseOutput Fields | Improve this Doc View Source Output Declaration protected TUseCaseOutput Output Field Value Type Description TUseCaseOutput Properties | Improve this Doc View Source Orchestrator Declaration protected IOrchestrator Orchestrator { get; } Property Value Type Description IOrchestrator Methods | Improve this Doc View Source SetOutput(TUseCaseOutput) Declaration public void SetOutput(TUseCaseOutput output) Parameters Type Name Description TUseCaseOutput output Implements IUseCase<TUseCaseOutput>"
  },
  "api/Aviant.DDD.Application.UseCases.UseCaseInput.html": {
    "href": "api/Aviant.DDD.Application.UseCases.UseCaseInput.html",
    "title": "Class UseCaseInput | Aviant DDD Library Documentation",
    "keywords": "Class UseCaseInput Inheritance System.Object UseCaseInput UseCaseInput<TInput, TValidator> Implements IUseCaseInput Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public abstract class UseCaseInput : object, IUseCaseInput Properties | Improve this Doc View Source ValidationResult Declaration public ValidationResult ValidationResult { get; protected set; } Property Value Type Description ValidationResult Methods | Improve this Doc View Source ValidateAsync(CancellationToken) Declaration public virtual Task ValidateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements IUseCaseInput"
  },
  "api/Aviant.DDD.Application.UseCases.UseCaseInput-2.html": {
    "href": "api/Aviant.DDD.Application.UseCases.UseCaseInput-2.html",
    "title": "Class UseCaseInput<TInput, TValidator> | Aviant DDD Library Documentation",
    "keywords": "Class UseCaseInput<TInput, TValidator> Inheritance System.Object UseCaseInput UseCaseInput<TInput, TValidator> Implements IUseCaseInput Inherited Members UseCaseInput.ValidationResult UseCaseInput.ValidateAsync(CancellationToken) Namespace : Aviant.DDD.Application.UseCases Assembly : Aviant.DDD.Application.dll Syntax public abstract class UseCaseInput<TInput, TValidator> : UseCaseInput, IUseCaseInput where TInput : class, IUseCaseInput where TValidator : IValidator<TInput> Type Parameters Name Description TInput TValidator Methods | Improve this Doc View Source UseDefaultValidation(TInput, CancellationToken) Declaration protected Task UseDefaultValidation(TInput input, CancellationToken cancellationToken = null) Parameters Type Name Description TInput input CancellationToken cancellationToken Returns Type Description Task Implements IUseCaseInput"
  },
  "api/Aviant.DDD.Core.Aggregates.Aggregate-2.html": {
    "href": "api/Aviant.DDD.Core.Aggregates.Aggregate-2.html",
    "title": "Class Aggregate<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Class Aggregate<TAggregate, TAggregateId> Inheritance System.Object Entity <TAggregateId> Aggregate<TAggregate, TAggregateId> Implements IAggregate <TAggregateId> IEntity <TAggregateId> Inherited Members Entity<TAggregateId>.Id Entity<TAggregateId>.IsTransient() Entity<TAggregateId>.ValidateAsync(CancellationToken) Entity<TAggregateId>.Equals(Nullable<Object>) Entity<TAggregateId>.GetHashCode() Namespace : Aviant.DDD.Core.Aggregates Assembly : Aviant.DDD.Core.dll Syntax public abstract class Aggregate<TAggregate, TAggregateId> : Entity<TAggregateId>, IAggregate<TAggregateId>, IEntity<TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Constructors | Improve this Doc View Source Aggregate() Declaration protected Aggregate() | Improve this Doc View Source Aggregate(TAggregateId) Declaration protected Aggregate(TAggregateId aggregateId) Parameters Type Name Description TAggregateId aggregateId Properties | Improve this Doc View Source Events Declaration public IReadOnlyCollection<IDomainEvent<TAggregateId>> Events { get; } Property Value Type Description IReadOnlyCollection < IDomainEvent <TAggregateId>> | Improve this Doc View Source Version Declaration public long Version { get; } Property Value Type Description System.Int64 Methods | Improve this Doc View Source AddEvent(IDomainEvent<TAggregateId>) Declaration protected void AddEvent(IDomainEvent<TAggregateId> event) Parameters Type Name Description IDomainEvent <TAggregateId> event | Improve this Doc View Source Apply(IDomainEvent<TAggregateId>) Declaration protected abstract void Apply(IDomainEvent<TAggregateId> event) Parameters Type Name Description IDomainEvent <TAggregateId> event | Improve this Doc View Source ClearEvents() Declaration public void ClearEvents() | Improve this Doc View Source Create(IEnumerable<IDomainEvent<TAggregateId>>) Declaration public static TAggregate Create(IEnumerable<IDomainEvent<TAggregateId>> events) Parameters Type Name Description IEnumerable < IDomainEvent <TAggregateId>> events Returns Type Description TAggregate Implements IAggregate<TAggregateId> IEntity<TKey>"
  },
  "api/Aviant.DDD.Core.Aggregates.AggregateId-1.html": {
    "href": "api/Aviant.DDD.Core.Aggregates.AggregateId-1.html",
    "title": "Class AggregateId<TKey> | Aviant DDD Library Documentation",
    "keywords": "Class AggregateId<TKey> Inheritance System.Object AggregateId<TKey> Implements IAggregateId Namespace : Aviant.DDD.Core.Aggregates Assembly : Aviant.DDD.Core.dll Syntax public abstract class AggregateId<TKey> : object, IAggregateId<TKey>, IAggregateId Type Parameters Name Description TKey Constructors | Improve this Doc View Source AggregateId(TKey) Declaration protected AggregateId(TKey key) Parameters Type Name Description TKey key Properties | Improve this Doc View Source Key Declaration public TKey Key { get; } Property Value Type Description TKey Methods | Improve this Doc View Source Serialize() Declaration public virtual byte[] Serialize() Returns Type Description System.Byte [] | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IAggregateId"
  },
  "api/Aviant.DDD.Core.Aggregates.html": {
    "href": "api/Aviant.DDD.Core.Aggregates.html",
    "title": "Namespace Aviant.DDD.Core.Aggregates | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.Aggregates Classes Aggregate<TAggregate, TAggregateId> AggregateId<TKey> Interfaces IAggregate<TAggregateId> IAggregateId"
  },
  "api/Aviant.DDD.Core.Aggregates.IAggregate-1.html": {
    "href": "api/Aviant.DDD.Core.Aggregates.IAggregate-1.html",
    "title": "Interface IAggregate<TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Interface IAggregate<TAggregateId> Inherited Members IEntity<TAggregateId>.Id IEntity<TAggregateId>.IsTransient() IEntity<TAggregateId>.ValidateAsync(CancellationToken) Namespace : Aviant.DDD.Core.Aggregates Assembly : Aviant.DDD.Core.dll Syntax public interface IAggregate<out TAggregateId> : IEntity<TAggregateId> where TAggregateId : IAggregateId Type Parameters Name Description TAggregateId Properties | Improve this Doc View Source Events Declaration IReadOnlyCollection<IDomainEvent<TAggregateId>> Events { get; } Property Value Type Description IReadOnlyCollection < IDomainEvent <TAggregateId>> | Improve this Doc View Source Version Declaration long Version { get; } Property Value Type Description System.Int64 Methods | Improve this Doc View Source ClearEvents() Declaration void ClearEvents()"
  },
  "api/Aviant.DDD.Core.Aggregates.IAggregateId.html": {
    "href": "api/Aviant.DDD.Core.Aggregates.IAggregateId.html",
    "title": "Interface IAggregateId | Aviant DDD Library Documentation",
    "keywords": "Interface IAggregateId Namespace : Aviant.DDD.Core.Aggregates Assembly : Aviant.DDD.Core.dll Syntax public interface IAggregateId Methods | Improve this Doc View Source Serialize() Declaration byte[] Serialize() Returns Type Description System.Byte []"
  },
  "api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html": {
    "href": "api/Aviant.DDD.Core.DomainEvents.DomainEvent-2.html",
    "title": "Class DomainEvent<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Class DomainEvent<TAggregate, TAggregateId> Inheritance System.Object DomainEvent<TAggregate, TAggregateId> Implements IDomainEvent <TAggregateId> Namespace : Aviant.DDD.Core.DomainEvents Assembly : Aviant.DDD.Core.dll Syntax public abstract class DomainEvent<TAggregate, TAggregateId> : object, IDomainEvent<TAggregateId> where TAggregate : IAggregate<TAggregateId> where TAggregateId : IAggregateId Type Parameters Name Description TAggregate TAggregateId Constructors | Improve this Doc View Source DomainEvent() Declaration protected DomainEvent() | Improve this Doc View Source DomainEvent(TAggregate) Declaration protected DomainEvent(TAggregate aggregate) Parameters Type Name Description TAggregate aggregate Properties | Improve this Doc View Source AggregateId Declaration public TAggregateId AggregateId { get; } Property Value Type Description TAggregateId | Improve this Doc View Source AggregateVersion Declaration public long AggregateVersion { get; } Property Value Type Description System.Int64 Implements IDomainEvent<TAggregateId>"
  },
  "api/Aviant.DDD.Core.DomainEvents.DomainEventHandler-1.html": {
    "href": "api/Aviant.DDD.Core.DomainEvents.DomainEventHandler-1.html",
    "title": "Class DomainEventHandler<TDomainEvent> | Aviant DDD Library Documentation",
    "keywords": "Class DomainEventHandler<TDomainEvent> Inheritance System.Object DomainEventHandler<TDomainEvent> Implements INotificationHandler < EventReceived <TDomainEvent>> IRetry Namespace : Aviant.DDD.Core.DomainEvents Assembly : Aviant.DDD.Core.dll Syntax public abstract class DomainEventHandler<TDomainEvent> : object, IDomainEventHandler<TDomainEvent>, INotificationHandler<EventReceived<TDomainEvent>>, IRetry Type Parameters Name Description TDomainEvent Methods | Improve this Doc View Source Handle(EventReceived<TDomainEvent>, CancellationToken) Declaration public abstract Task Handle(EventReceived<TDomainEvent> event, CancellationToken cancellationToken) Parameters Type Name Description EventReceived <TDomainEvent> event CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source RetryPolicy() Declaration public virtual IAsyncPolicy RetryPolicy() Returns Type Description IAsyncPolicy Implements INotificationHandler<> IRetry"
  },
  "api/Aviant.DDD.Core.DomainEvents.html": {
    "href": "api/Aviant.DDD.Core.DomainEvents.html",
    "title": "Namespace Aviant.DDD.Core.DomainEvents | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.DomainEvents Classes DomainEvent<TAggregate, TAggregateId> DomainEventHandler<TDomainEvent> Interfaces IDomainEvent<TAggregateId>"
  },
  "api/Aviant.DDD.Core.DomainEvents.IDomainEvent-1.html": {
    "href": "api/Aviant.DDD.Core.DomainEvents.IDomainEvent-1.html",
    "title": "Interface IDomainEvent<TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Interface IDomainEvent<TAggregateId> Namespace : Aviant.DDD.Core.DomainEvents Assembly : Aviant.DDD.Core.dll Syntax public interface IDomainEvent<out TAggregateId> where TAggregateId : IAggregateId Type Parameters Name Description TAggregateId Properties | Improve this Doc View Source AggregateId Declaration TAggregateId AggregateId { get; } Property Value Type Description TAggregateId | Improve this Doc View Source AggregateVersion Declaration long AggregateVersion { get; } Property Value Type Description System.Int64"
  },
  "api/Aviant.DDD.Core.Entities.Entity-1.html": {
    "href": "api/Aviant.DDD.Core.Entities.Entity-1.html",
    "title": "Class Entity<TKey> | Aviant DDD Library Documentation",
    "keywords": "Class Entity<TKey> Inheritance System.Object Entity<TKey> Aggregate<TAggregate, TAggregateId> Implements IEntity <TKey> Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public abstract class Entity<TKey> : object, IEntity<TKey> Type Parameters Name Description TKey Constructors | Improve this Doc View Source Entity() Declaration protected Entity() | Improve this Doc View Source Entity(TKey) Declaration protected Entity(TKey id) Parameters Type Name Description TKey id Properties | Improve this Doc View Source Id Declaration public TKey Id { get; set; } Property Value Type Description TKey Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source IsTransient() Declaration public bool IsTransient() Returns Type Description System.Boolean | Improve this Doc View Source ValidateAsync(CancellationToken) Declaration public virtual Task<bool> ValidateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > Operators | Improve this Doc View Source Equality(Entity<TKey>, Entity<TKey>) Declaration public static bool operator ==(Entity<TKey> left, Entity<TKey> right) Parameters Type Name Description Entity <TKey> left Entity <TKey> right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Entity<TKey>, Entity<TKey>) Declaration public static bool operator !=(Entity<TKey> left, Entity<TKey> right) Parameters Type Name Description Entity <TKey> left Entity <TKey> right Returns Type Description System.Boolean Implements IEntity<TKey>"
  },
  "api/Aviant.DDD.Core.Entities.html": {
    "href": "api/Aviant.DDD.Core.Entities.html",
    "title": "Namespace Aviant.DDD.Core.Entities | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.Entities Classes Entity<TKey> Interfaces IActivationAudited IAuditedEntity ICreationAudited IDeletionAudited IEntity<TKey> Defines interface for base entity type. All entities in the system must implement this interface. IHasActivationStatus IHasCreationTime IHasDeletionTime IHasModificationTime IModificationAudited ISoftDelete"
  },
  "api/Aviant.DDD.Core.Entities.IActivationAudited.html": {
    "href": "api/Aviant.DDD.Core.Entities.IActivationAudited.html",
    "title": "Interface IActivationAudited | Aviant DDD Library Documentation",
    "keywords": "Interface IActivationAudited Inherited Members IHasActivationStatus.IsActive Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IActivationAudited : IHasActivationStatus, IAuditedEntity Properties | Improve this Doc View Source ActivationStatusModifiedBy Declaration Guid? ActivationStatusModifiedBy { get; set; } Property Value Type Description System.Nullable < Guid >"
  },
  "api/Aviant.DDD.Core.Entities.IAuditedEntity.html": {
    "href": "api/Aviant.DDD.Core.Entities.IAuditedEntity.html",
    "title": "Interface IAuditedEntity | Aviant DDD Library Documentation",
    "keywords": "Interface IAuditedEntity Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IAuditedEntity"
  },
  "api/Aviant.DDD.Core.Entities.ICreationAudited.html": {
    "href": "api/Aviant.DDD.Core.Entities.ICreationAudited.html",
    "title": "Interface ICreationAudited | Aviant DDD Library Documentation",
    "keywords": "Interface ICreationAudited Inherited Members IHasCreationTime.Created Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface ICreationAudited : IHasCreationTime, IAuditedEntity Properties | Improve this Doc View Source CreatedBy Declaration Guid CreatedBy { get; set; } Property Value Type Description Guid"
  },
  "api/Aviant.DDD.Core.Entities.IDeletionAudited.html": {
    "href": "api/Aviant.DDD.Core.Entities.IDeletionAudited.html",
    "title": "Interface IDeletionAudited | Aviant DDD Library Documentation",
    "keywords": "Interface IDeletionAudited Inherited Members IHasDeletionTime.Deleted Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IDeletionAudited : IHasDeletionTime, IAuditedEntity Properties | Improve this Doc View Source DeletedBy Declaration Guid? DeletedBy { get; set; } Property Value Type Description System.Nullable < Guid >"
  },
  "api/Aviant.DDD.Core.Entities.IEntity-1.html": {
    "href": "api/Aviant.DDD.Core.Entities.IEntity-1.html",
    "title": "Interface IEntity<TKey> | Aviant DDD Library Documentation",
    "keywords": "Interface IEntity<TKey> Defines interface for base entity type. All entities in the system must implement this interface. Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IEntity<out TKey> Type Parameters Name Description TKey Type of the primary key of the entity Properties | Improve this Doc View Source Id Unique identifier for this entity. Declaration TKey Id { get; } Property Value Type Description TKey Methods | Improve this Doc View Source IsTransient() Checks if this entity is transient (not persisted to database and it has not an Id ). Declaration bool IsTransient() Returns Type Description System.Boolean True, if this entity is transient | Improve this Doc View Source ValidateAsync(CancellationToken) Run validations against the entity Declaration Task<bool> ValidateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean >"
  },
  "api/Aviant.DDD.Core.Entities.IHasActivationStatus.html": {
    "href": "api/Aviant.DDD.Core.Entities.IHasActivationStatus.html",
    "title": "Interface IHasActivationStatus | Aviant DDD Library Documentation",
    "keywords": "Interface IHasActivationStatus Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IHasActivationStatus : IAuditedEntity Properties | Improve this Doc View Source IsActive Declaration bool IsActive { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Aviant.DDD.Core.Entities.IHasCreationTime.html": {
    "href": "api/Aviant.DDD.Core.Entities.IHasCreationTime.html",
    "title": "Interface IHasCreationTime | Aviant DDD Library Documentation",
    "keywords": "Interface IHasCreationTime Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IHasCreationTime : IAuditedEntity Properties | Improve this Doc View Source Created Declaration DateTime Created { get; set; } Property Value Type Description DateTime"
  },
  "api/Aviant.DDD.Core.Entities.IHasDeletionTime.html": {
    "href": "api/Aviant.DDD.Core.Entities.IHasDeletionTime.html",
    "title": "Interface IHasDeletionTime | Aviant DDD Library Documentation",
    "keywords": "Interface IHasDeletionTime Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IHasDeletionTime : IAuditedEntity Properties | Improve this Doc View Source Deleted Declaration DateTime? Deleted { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/Aviant.DDD.Core.Entities.IHasModificationTime.html": {
    "href": "api/Aviant.DDD.Core.Entities.IHasModificationTime.html",
    "title": "Interface IHasModificationTime | Aviant DDD Library Documentation",
    "keywords": "Interface IHasModificationTime Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IHasModificationTime : IAuditedEntity Properties | Improve this Doc View Source LastModified Declaration DateTime? LastModified { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/Aviant.DDD.Core.Entities.IModificationAudited.html": {
    "href": "api/Aviant.DDD.Core.Entities.IModificationAudited.html",
    "title": "Interface IModificationAudited | Aviant DDD Library Documentation",
    "keywords": "Interface IModificationAudited Inherited Members IHasModificationTime.LastModified Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface IModificationAudited : IHasModificationTime, IAuditedEntity Properties | Improve this Doc View Source LastModifiedBy Declaration Guid? LastModifiedBy { get; set; } Property Value Type Description System.Nullable < Guid >"
  },
  "api/Aviant.DDD.Core.Entities.ISoftDelete.html": {
    "href": "api/Aviant.DDD.Core.Entities.ISoftDelete.html",
    "title": "Interface ISoftDelete | Aviant DDD Library Documentation",
    "keywords": "Interface ISoftDelete Namespace : Aviant.DDD.Core.Entities Assembly : Aviant.DDD.Core.dll Syntax public interface ISoftDelete Properties | Improve this Doc View Source IsDeleted Declaration bool IsDeleted { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Aviant.DDD.Core.Enums.html": {
    "href": "api/Aviant.DDD.Core.Enums.html",
    "title": "Namespace Aviant.DDD.Core.Enums | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.Enums Enums PriorityLevel State"
  },
  "api/Aviant.DDD.Core.Enums.PriorityLevel.html": {
    "href": "api/Aviant.DDD.Core.Enums.PriorityLevel.html",
    "title": "Enum PriorityLevel | Aviant DDD Library Documentation",
    "keywords": "Enum PriorityLevel Namespace : Aviant.DDD.Core.Enums Assembly : Aviant.DDD.Core.dll Syntax public enum PriorityLevel : byte Fields Name Description High Low Medium None"
  },
  "api/Aviant.DDD.Core.Enums.State.html": {
    "href": "api/Aviant.DDD.Core.Enums.State.html",
    "title": "Enum State | Aviant DDD Library Documentation",
    "keywords": "Enum State Namespace : Aviant.DDD.Core.Enums Assembly : Aviant.DDD.Core.dll Syntax public enum State : byte Fields Name Description Active Passive Paused"
  },
  "api/Aviant.DDD.Core.EventBus.EventReceived-1.html": {
    "href": "api/Aviant.DDD.Core.EventBus.EventReceived-1.html",
    "title": "Class EventReceived<TDomainEvent> | Aviant DDD Library Documentation",
    "keywords": "Class EventReceived<TDomainEvent> Inheritance System.Object EventReceived<TDomainEvent> Namespace : Aviant.DDD.Core.EventBus Assembly : Aviant.DDD.Core.dll Syntax public sealed class EventReceived<TDomainEvent> : INotification Type Parameters Name Description TDomainEvent Constructors | Improve this Doc View Source EventReceived(TDomainEvent) Declaration public EventReceived(TDomainEvent event) Parameters Type Name Description TDomainEvent event Properties | Improve this Doc View Source Event Declaration public TDomainEvent Event { get; } Property Value Type Description TDomainEvent"
  },
  "api/Aviant.DDD.Core.EventBus.EventReceivedHandlerAsync-1.html": {
    "href": "api/Aviant.DDD.Core.EventBus.EventReceivedHandlerAsync-1.html",
    "title": "Delegate EventReceivedHandlerAsync<TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Delegate EventReceivedHandlerAsync<TAggregateId> Namespace : Aviant.DDD.Core.EventBus Assembly : Aviant.DDD.Core.dll Syntax public delegate Task EventReceivedHandlerAsync<in TAggregateId>(object sender, IDomainEvent<TAggregateId> event, CancellationToken cancellationToken = null) where TAggregateId : IAggregateId; Parameters Type Name Description System.Object sender IDomainEvent <TAggregateId> event CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description TAggregateId"
  },
  "api/Aviant.DDD.Core.EventBus.html": {
    "href": "api/Aviant.DDD.Core.EventBus.html",
    "title": "Namespace Aviant.DDD.Core.EventBus | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.EventBus Classes EventReceived<TDomainEvent> Interfaces IEventConsumer IEventConsumer<TAggregate, TAggregateId, TDeserializer> IEventConsumerFactory IEventProducer<TAggregate, TAggregateId> Delegates EventReceivedHandlerAsync<TAggregateId>"
  },
  "api/Aviant.DDD.Core.EventBus.IEventConsumer.html": {
    "href": "api/Aviant.DDD.Core.EventBus.IEventConsumer.html",
    "title": "Interface IEventConsumer | Aviant DDD Library Documentation",
    "keywords": "Interface IEventConsumer Namespace : Aviant.DDD.Core.EventBus Assembly : Aviant.DDD.Core.dll Syntax public interface IEventConsumer Methods | Improve this Doc View Source ConsumeAsync(CancellationToken) Declaration Task ConsumeAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Aviant.DDD.Core.EventBus.IEventConsumer-3.html": {
    "href": "api/Aviant.DDD.Core.EventBus.IEventConsumer-3.html",
    "title": "Interface IEventConsumer<TAggregate, TAggregateId, TDeserializer> | Aviant DDD Library Documentation",
    "keywords": "Interface IEventConsumer<TAggregate, TAggregateId, TDeserializer> Inherited Members IEventConsumer.ConsumeAsync(CancellationToken) Namespace : Aviant.DDD.Core.EventBus Assembly : Aviant.DDD.Core.dll Syntax public interface IEventConsumer<TAggregate, out TAggregateId, TDeserializer> : IEventConsumer where TAggregate : IAggregate<TAggregateId> where TAggregateId : IAggregateId Type Parameters Name Description TAggregate TAggregateId TDeserializer Events | Improve this Doc View Source EventReceived Declaration event EventReceivedHandlerAsync<TAggregateId> EventReceived Event Type Type Description EventReceivedHandlerAsync <TAggregateId>"
  },
  "api/Aviant.DDD.Core.EventBus.IEventConsumerFactory.html": {
    "href": "api/Aviant.DDD.Core.EventBus.IEventConsumerFactory.html",
    "title": "Interface IEventConsumerFactory | Aviant DDD Library Documentation",
    "keywords": "Interface IEventConsumerFactory Namespace : Aviant.DDD.Core.EventBus Assembly : Aviant.DDD.Core.dll Syntax public interface IEventConsumerFactory Methods | Improve this Doc View Source Build<TAggregate, TAggregateId, TDeserializer>() Declaration IEventConsumer Build<TAggregate, TAggregateId, TDeserializer>() where TAggregate : IAggregate<TAggregateId> where TAggregateId : IAggregateId Returns Type Description IEventConsumer Type Parameters Name Description TAggregate TAggregateId TDeserializer"
  },
  "api/Aviant.DDD.Core.EventBus.IEventProducer-2.html": {
    "href": "api/Aviant.DDD.Core.EventBus.IEventProducer-2.html",
    "title": "Interface IEventProducer<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Interface IEventProducer<TAggregate, TAggregateId> Namespace : Aviant.DDD.Core.EventBus Assembly : Aviant.DDD.Core.dll Syntax public interface IEventProducer<in TAggregate, in TAggregateId> : IDisposable where TAggregate : IAggregate<TAggregateId> where TAggregateId : IAggregateId Type Parameters Name Description TAggregate TAggregateId Methods | Improve this Doc View Source DispatchAsync(TAggregate, CancellationToken) Declaration Task DispatchAsync(TAggregate aggregate, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregate aggregate CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Aviant.DDD.Core.Exceptions.CoreException.html": {
    "href": "api/Aviant.DDD.Core.Exceptions.CoreException.html",
    "title": "Class CoreException | Aviant DDD Library Documentation",
    "keywords": "Class CoreException Inheritance System.Object CoreException ApplicationException EntityNotFoundException Namespace : Aviant.DDD.Core.Exceptions Assembly : Aviant.DDD.Core.dll Syntax public class CoreException : Exception Constructors | Improve this Doc View Source CoreException() Declaration public CoreException() | Improve this Doc View Source CoreException(SerializationInfo, StreamingContext) Declaration protected CoreException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source CoreException(String) Declaration public CoreException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source CoreException(String, Exception) Declaration public CoreException(string message, Exception inner) Parameters Type Name Description System.String message Exception inner | Improve this Doc View Source CoreException(String, Int32, Nullable<Int32>, Nullable<Exception>) Declaration public CoreException(string message, int errorCode, int? familyCode = null, Exception? inner = null) Parameters Type Name Description System.String message System.Int32 errorCode System.Nullable < System.Int32 > familyCode { familyCode ∈ R ∣ familyCode >= 0 } System.Nullable < Exception > inner Properties | Improve this Doc View Source ErrorCode Declaration public int ErrorCode { get; protected set; } Property Value Type Description System.Int32 | Improve this Doc View Source ExceptionId Declaration public Guid ExceptionId { get; protected set; } Property Value Type Description Guid | Improve this Doc View Source ExceptionName Declaration public string ExceptionName { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source FamilyCode Declaration public int FamilyCode { get; protected set; } Property Value Type Description System.Int32 | Improve this Doc View Source Occurred Declaration public DateTime Occurred { get; protected set; } Property Value Type Description DateTime Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context"
  },
  "api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html": {
    "href": "api/Aviant.DDD.Core.Exceptions.EntityNotFoundException.html",
    "title": "Class EntityNotFoundException | Aviant DDD Library Documentation",
    "keywords": "Class EntityNotFoundException This exception is thrown if an entity excepted to be found but not found. Inheritance System.Object CoreException EntityNotFoundException Inherited Members CoreException.ErrorCode CoreException.FamilyCode CoreException.Occurred CoreException.ExceptionId CoreException.ExceptionName CoreException.GetObjectData(SerializationInfo, StreamingContext) Namespace : Aviant.DDD.Core.Exceptions Assembly : Aviant.DDD.Core.dll Syntax public sealed class EntityNotFoundException : CoreException Constructors | Improve this Doc View Source EntityNotFoundException() Creates a new EntityNotFoundException object. Declaration public EntityNotFoundException() | Improve this Doc View Source EntityNotFoundException(Nullable<Type>, Nullable<Object>, Exception) Creates a new EntityNotFoundException object. Declaration public EntityNotFoundException(Type? entityType, object? id, Exception innerException = null) Parameters Type Name Description System.Nullable < Type > entityType System.Nullable < System.Object > id Exception innerException | Improve this Doc View Source EntityNotFoundException(String) Creates a new EntityNotFoundException object. Declaration public EntityNotFoundException(string message) Parameters Type Name Description System.String message Exception message | Improve this Doc View Source EntityNotFoundException(String, Exception) Creates a new EntityNotFoundException object. Declaration public EntityNotFoundException(string message, Exception innerException) Parameters Type Name Description System.String message Exception message Exception innerException Inner exception Properties | Improve this Doc View Source EntityType Type of the entity. Declaration public Type? EntityType { get; set; } Property Value Type Description System.Nullable < Type > | Improve this Doc View Source Id Id of the Entity. Declaration public object? Id { get; set; } Property Value Type Description System.Nullable < System.Object >"
  },
  "api/Aviant.DDD.Core.Exceptions.html": {
    "href": "api/Aviant.DDD.Core.Exceptions.html",
    "title": "Namespace Aviant.DDD.Core.Exceptions | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.Exceptions Classes CoreException EntityNotFoundException This exception is thrown if an entity excepted to be found but not found."
  },
  "api/Aviant.DDD.Core.Messages.html": {
    "href": "api/Aviant.DDD.Core.Messages.html",
    "title": "Namespace Aviant.DDD.Core.Messages | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.Messages Classes Messages Interfaces IMessages"
  },
  "api/Aviant.DDD.Core.Messages.IMessages.html": {
    "href": "api/Aviant.DDD.Core.Messages.IMessages.html",
    "title": "Interface IMessages | Aviant DDD Library Documentation",
    "keywords": "Interface IMessages Namespace : Aviant.DDD.Core.Messages Assembly : Aviant.DDD.Core.dll Syntax public interface IMessages Methods | Improve this Doc View Source AddMessage(String) Declaration void AddMessage(string message) Parameters Type Name Description System.String message | Improve this Doc View Source CleanMessages() Declaration void CleanMessages() | Improve this Doc View Source GetAll() Declaration List<string> GetAll() Returns Type Description List < System.String > | Improve this Doc View Source HasMessages() Declaration bool HasMessages() Returns Type Description System.Boolean"
  },
  "api/Aviant.DDD.Core.Messages.Messages.html": {
    "href": "api/Aviant.DDD.Core.Messages.Messages.html",
    "title": "Class Messages | Aviant DDD Library Documentation",
    "keywords": "Class Messages Inheritance System.Object Messages Implements IMessages Namespace : Aviant.DDD.Core.Messages Assembly : Aviant.DDD.Core.dll Syntax public sealed class Messages : object, IMessages Methods | Improve this Doc View Source AddMessage(String) Declaration public void AddMessage(string message) Parameters Type Name Description System.String message | Improve this Doc View Source CleanMessages() Declaration public void CleanMessages() | Improve this Doc View Source GetAll() Declaration public List<string> GetAll() Returns Type Description List < System.String > | Improve this Doc View Source HasMessages() Declaration public bool HasMessages() Returns Type Description System.Boolean Implements IMessages"
  },
  "api/Aviant.DDD.Core.Persistence.html": {
    "href": "api/Aviant.DDD.Core.Persistence.html",
    "title": "Namespace Aviant.DDD.Core.Persistence | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.Persistence Interfaces IEventsRepository<TAggregate, TAggregateId> IRepositoryRead<TEntity, TPrimaryKey> This interface is implemented by all read repositories to ensure implementation of fixed methods. IRepositoryWrite<TEntity, TPrimaryKey> This interface is implemented by all write repositories to ensure implementation of fixed methods."
  },
  "api/Aviant.DDD.Core.Persistence.IEventsRepository-2.html": {
    "href": "api/Aviant.DDD.Core.Persistence.IEventsRepository-2.html",
    "title": "Interface IEventsRepository<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Interface IEventsRepository<TAggregate, TAggregateId> Namespace : Aviant.DDD.Core.Persistence Assembly : Aviant.DDD.Core.dll Syntax public interface IEventsRepository<TAggregate, in TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Methods | Improve this Doc View Source AppendAsync(TAggregate, CancellationToken) Declaration Task AppendAsync(TAggregate aggregate, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregate aggregate CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source RehydrateAsync(TAggregateId, CancellationToken) Declaration Task<TAggregate> RehydrateAsync(TAggregateId aggregateId, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregateId aggregateId CancellationToken cancellationToken Returns Type Description Task <TAggregate>"
  },
  "api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html": {
    "href": "api/Aviant.DDD.Core.Persistence.IRepositoryRead-2.html",
    "title": "Interface IRepositoryRead<TEntity, TPrimaryKey> | Aviant DDD Library Documentation",
    "keywords": "Interface IRepositoryRead<TEntity, TPrimaryKey> This interface is implemented by all read repositories to ensure implementation of fixed methods. Namespace : Aviant.DDD.Core.Persistence Assembly : Aviant.DDD.Core.dll Syntax public interface IRepositoryRead<TEntity, in TPrimaryKey> : IDisposable where TEntity : Entity<TPrimaryKey> Type Parameters Name Description TEntity Main Entity type this repository works on TPrimaryKey Primary key type of the entity Methods | Improve this Doc View Source AllAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Determines whether all the elements of a sequence satisfy a condition. Declaration ValueTask<bool> AllAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Predicate to filter entities CancellationToken cancellationToken Returns Type Description ValueTask < System.Boolean > True if there are any founds, false otherwise. | Improve this Doc View Source AnyAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Determines whether any element of a sequence satisfies a condition. Declaration ValueTask<bool> AnyAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Predicate to filter entities CancellationToken cancellationToken Returns Type Description ValueTask < System.Boolean > True if there are any founds, false otherwise. | Improve this Doc View Source Count() Gets count of all entities in this repository. Declaration int Count() Returns Type Description System.Int32 Count of entities | Improve this Doc View Source Count(Expression<Func<TEntity, Boolean>>) Gets count of all entities in this repository based on given predicate . Declaration int Count(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A method to filter count Returns Type Description System.Int32 Count of entities | Improve this Doc View Source CountAsync(CancellationToken) Gets count of all entities in this repository. Declaration ValueTask<int> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < System.Int32 > Count of entities | Improve this Doc View Source CountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Gets count of all entities in this repository based on given predicate . Declaration ValueTask<int> CountAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A method to filter count CancellationToken cancellationToken Returns Type Description ValueTask < System.Int32 > Count of entities | Improve this Doc View Source FindBy(Expression<Func<TEntity, Boolean>>) Gets an entity with given predicate. Declaration IQueryable<TEntity> FindBy(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Predicate to filter entities Returns Type Description IQueryable <TEntity> IQueryable to be used to select entities from database | Improve this Doc View Source FindByIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) Gets an entity with given predicate and retrieves entities from entire table. Declaration IQueryable<TEntity> FindByIncluding(Expression<Func<TEntity, bool>> predicate, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Predicate to filter entities Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description IQueryable <TEntity> IQueryable to be used to select entities from database | Improve this Doc View Source FirstOrDefault(TPrimaryKey) Gets an entity with given primary key or null if not found. Declaration TEntity FirstOrDefault(TPrimaryKey id) Parameters Type Name Description TPrimaryKey id Primary key of the entity to get Returns Type Description TEntity Entity or null | Improve this Doc View Source FirstOrDefault(Expression<Func<TEntity, Boolean>>) Gets an entity with given given predicate or null if not found. Declaration TEntity FirstOrDefault(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Predicate to filter entities Returns Type Description TEntity | Improve this Doc View Source FirstOrDefaultAsync(TPrimaryKey, CancellationToken) Gets an entity with given primary key or null if not found. Declaration ValueTask<TEntity> FirstOrDefaultAsync(TPrimaryKey id, CancellationToken cancellationToken = null) Parameters Type Name Description TPrimaryKey id Primary key of the entity to get CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> Entity or null | Improve this Doc View Source FirstOrDefaultAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Gets an entity with given given predicate or null if not found. Declaration ValueTask<TEntity> FirstOrDefaultAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Predicate to filter entities CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> | Improve this Doc View Source FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, Object>>[]) Gets an entity with given primary key and retrieves entities from entire table. Declaration TEntity FirstOrDefaultIncluding(TPrimaryKey id, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description TPrimaryKey id Primary key of the entity to get Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description TEntity IQueryable to be used to select entities from database | Improve this Doc View Source FirstOrDefaultIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) Gets an entity with given predicate and retrieves entities from entire table. Declaration TEntity FirstOrDefaultIncluding(Expression<Func<TEntity, bool>> predicate, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Predicate to filter entities Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description TEntity IQueryable to be used to select entities from database | Improve this Doc View Source FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, Object>>[]) Gets an entity with given primary key and retrieves entities from entire table. Declaration ValueTask<TEntity> FirstOrDefaultIncludingAsync(TPrimaryKey id, CancellationToken cancellationToken = null, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description TPrimaryKey id Primary key of the entity to get CancellationToken cancellationToken Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description ValueTask <TEntity> IQueryable to be used to select entities from database | Improve this Doc View Source FirstOrDefaultIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) Gets an entity with given predicate and retrieves entities from entire table. Declaration ValueTask<TEntity> FirstOrDefaultIncludingAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Predicate to filter entities CancellationToken cancellationToken Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description ValueTask <TEntity> IQueryable to be used to select entities from database | Improve this Doc View Source Get(TPrimaryKey) Gets an entity with given primary key. Declaration TEntity Get(TPrimaryKey id) Parameters Type Name Description TPrimaryKey id Primary key of the entity to get Returns Type Description TEntity Entity | Improve this Doc View Source GetAll() Used to get a IQueryable that is used to retrieve entities from entire table. Declaration IQueryable<TEntity> GetAll() Returns Type Description IQueryable <TEntity> IQueryable to be used to select entities from database | Improve this Doc View Source GetAllIncluding(Expression<Func<TEntity, Object>>[]) Used to get a IQueryable that is used to retrieve entities from entire table. One or more Declaration IQueryable<TEntity> GetAllIncluding(params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description IQueryable <TEntity> IQueryable to be used to select entities from database | Improve this Doc View Source GetAllList() Used to get all entities. Declaration List<TEntity> GetAllList() Returns Type Description List <TEntity> List of all entities | Improve this Doc View Source GetAllList(Expression<Func<TEntity, Boolean>>) Used to get all entities based on given predicate . Declaration List<TEntity> GetAllList(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A condition to filter entities Returns Type Description List <TEntity> List of all entities | Improve this Doc View Source GetAllListAsync(CancellationToken) Used to get all entities. Declaration ValueTask<List<TEntity>> GetAllListAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < List <TEntity>> List of all entities | Improve this Doc View Source GetAllListAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Used to get all entities based on given predicate . Declaration ValueTask<List<TEntity>> GetAllListAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A condition to filter entities CancellationToken cancellationToken Returns Type Description ValueTask < List <TEntity>> List of all entities | Improve this Doc View Source GetAllListIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) Used to get a IQueryable that is used to retrieve all entities from entire table based on given predicate . Declaration TEntity GetAllListIncluding(Expression<Func<TEntity, bool>> predicate, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A condition to filter entities Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description TEntity List of all entities | Improve this Doc View Source GetAllListIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) Used to get a IQueryable that is used to retrieve all entities from entire table based on given predicate . Declaration ValueTask<TEntity> GetAllListIncludingAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A condition to filter entities CancellationToken cancellationToken Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description ValueTask <TEntity> List of all entities | Improve this Doc View Source GetAsync(TPrimaryKey, CancellationToken) Gets an entity with given primary key. Declaration ValueTask<TEntity> GetAsync(TPrimaryKey id, CancellationToken cancellationToken = null) Parameters Type Name Description TPrimaryKey id Primary key of the entity to get CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> Entity | Improve this Doc View Source GetSingleAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Gets exactly one entity with given predicate. Throws exception if no entity or more than one entity. Declaration ValueTask<TEntity> GetSingleAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Entity CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> | Improve this Doc View Source GetSingleIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) Gets exactly one entity with given predicate and retrieves entities from entire table. Throws exception if no entity or more than one entity. Declaration TEntity GetSingleIncluding(Expression<Func<TEntity, bool>> predicate, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Entity Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description TEntity IQueryable to be used to select entities from database | Improve this Doc View Source GetSingleIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) Gets exactly one entity with given predicate and retrieves entities from entire table. Throws exception if no entity or more than one entity. Declaration ValueTask<TEntity> GetSingleIncludingAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Entity CancellationToken cancellationToken Expression < Func <TEntity, System.Object >>[] propertySelectors A list of include expressions. Returns Type Description ValueTask <TEntity> IQueryable to be used to select entities from database | Improve this Doc View Source LongCount() Gets count of all entities in this repository (use if expected return value is greater than . Declaration long LongCount() Returns Type Description System.Int64 Count of entities | Improve this Doc View Source LongCount(Expression<Func<TEntity, Boolean>>) Gets count of all entities in this repository based on given predicate (use this overload if expected return value is greater than ). Declaration long LongCount(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A method to filter count Returns Type Description System.Int64 Count of entities | Improve this Doc View Source LongCountAsync(CancellationToken) Gets count of all entities in this repository (use if expected return value is greater than . Declaration ValueTask<long> LongCountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < System.Int64 > Count of entities | Improve this Doc View Source LongCountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Gets count of all entities in this repository based on given predicate (use this overload if expected return value is greater than ). Declaration ValueTask<long> LongCountAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A method to filter count CancellationToken cancellationToken Returns Type Description ValueTask < System.Int64 > Count of entities | Improve this Doc View Source Single(Expression<Func<TEntity, Boolean>>) Gets exactly one entity with given predicate. Throws exception if no entity or more than one entity. Declaration TEntity Single(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Entity Returns Type Description TEntity"
  },
  "api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html": {
    "href": "api/Aviant.DDD.Core.Persistence.IRepositoryWrite-2.html",
    "title": "Interface IRepositoryWrite<TEntity, TPrimaryKey> | Aviant DDD Library Documentation",
    "keywords": "Interface IRepositoryWrite<TEntity, TPrimaryKey> This interface is implemented by all write repositories to ensure implementation of fixed methods. Namespace : Aviant.DDD.Core.Persistence Assembly : Aviant.DDD.Core.dll Syntax public interface IRepositoryWrite<TEntity, TPrimaryKey> : IDisposable where TEntity : Entity<TPrimaryKey> Type Parameters Name Description TEntity Main Entity type this repository works on TPrimaryKey Primary key type of the entity Methods | Improve this Doc View Source Delete(TEntity) Deletes an entity. Declaration void Delete(TEntity entity) Parameters Type Name Description TEntity entity Entity to be deleted | Improve this Doc View Source Delete(TPrimaryKey) Deletes an entity by primary key. Declaration void Delete(TPrimaryKey id) Parameters Type Name Description TPrimaryKey id Primary key of the entity | Improve this Doc View Source Delete(Expression<Func<TEntity, Boolean>>) Deletes many entities by function. Notice that: All entities fits to given predicate are retrieved and deleted. This may cause major performance problems if there are too many entities with given predicate. Declaration void Delete(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A condition to filter entities | Improve this Doc View Source DeleteAsync(TEntity, CancellationToken) Deletes an entity. Declaration Task DeleteAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity Entity to be deleted CancellationToken cancellationToken CancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(TPrimaryKey, CancellationToken) Deletes an entity by primary key. Declaration Task DeleteAsync(TPrimaryKey id, CancellationToken cancellationToken = null) Parameters Type Name Description TPrimaryKey id Primary key of the entity CancellationToken cancellationToken CancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Deletes many entities by function. Notice that: All entities fits to given predicate are retrieved and deleted. This may cause major performance problems if there are too many entities with given predicate. Declaration Task DeleteAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate A condition to filter entities CancellationToken cancellationToken CancellationToken Returns Type Description Task | Improve this Doc View Source Insert(TEntity) Inserts a new entity. Declaration TEntity Insert(TEntity entity) Parameters Type Name Description TEntity entity Inserted entity Returns Type Description TEntity | Improve this Doc View Source InsertAndGetId(TEntity) Inserts a new entity and gets it's Id. It may require to save current unit of work to be able to retrieve id. Declaration TPrimaryKey InsertAndGetId(TEntity entity) Parameters Type Name Description TEntity entity Entity Returns Type Description TPrimaryKey Id of the entity | Improve this Doc View Source InsertAndGetIdAsync(TEntity, CancellationToken) Inserts a new entity and gets it's Id. It may require to save current unit of work to be able to retrieve id. Declaration Task<TPrimaryKey> InsertAndGetIdAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity Entity CancellationToken cancellationToken CancellationToken Returns Type Description Task <TPrimaryKey> Id of the entity | Improve this Doc View Source InsertAsync(TEntity, CancellationToken) Inserts a new entity. Declaration Task<TEntity> InsertAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity Inserted entity CancellationToken cancellationToken CancellationToken Returns Type Description Task <TEntity> | Improve this Doc View Source InsertOrUpdate(TEntity) Inserts or updates given entity depending on Id's value. Declaration TEntity InsertOrUpdate(TEntity entity) Parameters Type Name Description TEntity entity Entity Returns Type Description TEntity | Improve this Doc View Source InsertOrUpdateAndGetId(TEntity) Inserts or updates given entity depending on Id's value. Also returns Id of the entity. It may require to save current unit of work to be able to retrieve id. Declaration TPrimaryKey InsertOrUpdateAndGetId(TEntity entity) Parameters Type Name Description TEntity entity Entity Returns Type Description TPrimaryKey Id of the entity | Improve this Doc View Source InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken) Inserts or updates given entity depending on Id's value. Also returns Id of the entity. It may require to save current unit of work to be able to retrieve id. Declaration Task<TPrimaryKey> InsertOrUpdateAndGetIdAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity Entity CancellationToken cancellationToken CancellationToken Returns Type Description Task <TPrimaryKey> Id of the entity | Improve this Doc View Source InsertOrUpdateAsync(TEntity, CancellationToken) Inserts or updates given entity depending on Id's value. Declaration Task<TEntity> InsertOrUpdateAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity Entity CancellationToken cancellationToken CancellationToken Returns Type Description Task <TEntity> | Improve this Doc View Source Update(TEntity) Updates an existing entity. Declaration TEntity Update(TEntity entity) Parameters Type Name Description TEntity entity Entity Returns Type Description TEntity | Improve this Doc View Source Update(TPrimaryKey, Action<TEntity>) Updates an existing entity. Declaration TEntity Update(TPrimaryKey id, Action<TEntity> updateAction) Parameters Type Name Description TPrimaryKey id Id of the entity Action <TEntity> updateAction Action that can be used to change values of the entity Returns Type Description TEntity Updated entity | Improve this Doc View Source UpdateAsync(TEntity, CancellationToken) Updates an existing entity. Declaration Task<TEntity> UpdateAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity Entity CancellationToken cancellationToken CancellationToken Returns Type Description Task <TEntity> | Improve this Doc View Source UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken) Updates an existing entity. Declaration Task<TEntity> UpdateAsync(TPrimaryKey id, Func<TEntity, Task> updateAction, CancellationToken cancellationToken = null) Parameters Type Name Description TPrimaryKey id Id of the entity Func <TEntity, Task > updateAction Action that can be used to change values of the entity CancellationToken cancellationToken CancellationToken Returns Type Description Task <TEntity> Updated entity"
  },
  "api/Aviant.DDD.Core.Services.html": {
    "href": "api/Aviant.DDD.Core.Services.html",
    "title": "Namespace Aviant.DDD.Core.Services | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.Services Classes ServiceLocator Interfaces IEventDeserializer IEventsService<TAggregate, TAggregateId> IRetry IServiceContainer"
  },
  "api/Aviant.DDD.Core.Services.IEventDeserializer.html": {
    "href": "api/Aviant.DDD.Core.Services.IEventDeserializer.html",
    "title": "Interface IEventDeserializer | Aviant DDD Library Documentation",
    "keywords": "Interface IEventDeserializer Namespace : Aviant.DDD.Core.Services Assembly : Aviant.DDD.Core.dll Syntax public interface IEventDeserializer Methods | Improve this Doc View Source Deserialize<TAggregateId>(String, Byte[]) Declaration IDomainEvent<TAggregateId> Deserialize<TAggregateId>(string type, byte[] data) where TAggregateId : IAggregateId Parameters Type Name Description System.String type System.Byte [] data Returns Type Description IDomainEvent <TAggregateId> Type Parameters Name Description TAggregateId | Improve this Doc View Source Deserialize<TAggregateId>(String, String) Declaration IDomainEvent<TAggregateId> Deserialize<TAggregateId>(string type, string data) where TAggregateId : IAggregateId Parameters Type Name Description System.String type System.String data Returns Type Description IDomainEvent <TAggregateId> Type Parameters Name Description TAggregateId"
  },
  "api/Aviant.DDD.Core.Services.IEventsService-2.html": {
    "href": "api/Aviant.DDD.Core.Services.IEventsService-2.html",
    "title": "Interface IEventsService<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Interface IEventsService<TAggregate, TAggregateId> Namespace : Aviant.DDD.Core.Services Assembly : Aviant.DDD.Core.dll Syntax public interface IEventsService<TAggregate, in TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Methods | Improve this Doc View Source PersistAsync(TAggregate, CancellationToken) Declaration Task PersistAsync(TAggregate aggregate, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregate aggregate CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source RehydrateAsync(TAggregateId, CancellationToken) Declaration Task<TAggregate> RehydrateAsync(TAggregateId key, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregateId key CancellationToken cancellationToken Returns Type Description Task <TAggregate>"
  },
  "api/Aviant.DDD.Core.Services.IRetry.html": {
    "href": "api/Aviant.DDD.Core.Services.IRetry.html",
    "title": "Interface IRetry | Aviant DDD Library Documentation",
    "keywords": "Interface IRetry Namespace : Aviant.DDD.Core.Services Assembly : Aviant.DDD.Core.dll Syntax public interface IRetry Methods | Improve this Doc View Source RetryPolicy() Declaration IAsyncPolicy RetryPolicy() Returns Type Description IAsyncPolicy"
  },
  "api/Aviant.DDD.Core.Services.IServiceContainer.html": {
    "href": "api/Aviant.DDD.Core.Services.IServiceContainer.html",
    "title": "Interface IServiceContainer | Aviant DDD Library Documentation",
    "keywords": "Interface IServiceContainer Namespace : Aviant.DDD.Core.Services Assembly : Aviant.DDD.Core.dll Syntax public interface IServiceContainer Methods | Improve this Doc View Source GetRequiredService(Type) Declaration object GetRequiredService(Type type) Parameters Type Name Description Type type Returns Type Description System.Object | Improve this Doc View Source GetRequiredService<T>(Type) Declaration T GetRequiredService<T>(Type type) Parameters Type Name Description Type type Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetService(Type) Declaration object GetService(Type type) Parameters Type Name Description Type type Returns Type Description System.Object | Improve this Doc View Source GetService<T>(Type) Declaration T GetService<T>(Type type) Parameters Type Name Description Type type Returns Type Description T Type Parameters Name Description T"
  },
  "api/Aviant.DDD.Core.Services.ServiceLocator.html": {
    "href": "api/Aviant.DDD.Core.Services.ServiceLocator.html",
    "title": "Class ServiceLocator | Aviant DDD Library Documentation",
    "keywords": "Class ServiceLocator Inheritance System.Object ServiceLocator Namespace : Aviant.DDD.Core.Services Assembly : Aviant.DDD.Core.dll Syntax public static class ServiceLocator : object Properties | Improve this Doc View Source ServiceContainer Declaration public static IServiceContainer ServiceContainer { get; } Property Value Type Description IServiceContainer Methods | Improve this Doc View Source Initialise(IServiceProvider) Declaration public static void Initialise(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider"
  },
  "api/Aviant.DDD.Core.TransferObjects.Dto.html": {
    "href": "api/Aviant.DDD.Core.TransferObjects.Dto.html",
    "title": "Class Dto | Aviant DDD Library Documentation",
    "keywords": "Class Dto Inheritance System.Object TransferObject Dto Inherited Members TransferObject.ToJson() TransferObject.ToJson(Formatting) TransferObject.ToJson(JsonSerializerSettings) TransferObject.ToJson(Formatting, JsonSerializerSettings) Namespace : Aviant.DDD.Core.TransferObjects Assembly : Aviant.DDD.Core.dll Syntax public abstract class Dto : TransferObject, IDto, ITransferObject"
  },
  "api/Aviant.DDD.Core.TransferObjects.Eto.html": {
    "href": "api/Aviant.DDD.Core.TransferObjects.Eto.html",
    "title": "Class Eto | Aviant DDD Library Documentation",
    "keywords": "Class Eto Inheritance System.Object TransferObject Eto Inherited Members TransferObject.ToJson() TransferObject.ToJson(Formatting) TransferObject.ToJson(JsonSerializerSettings) TransferObject.ToJson(Formatting, JsonSerializerSettings) Namespace : Aviant.DDD.Core.TransferObjects Assembly : Aviant.DDD.Core.dll Syntax public abstract class Eto : TransferObject, IEto, ITransferObject"
  },
  "api/Aviant.DDD.Core.TransferObjects.html": {
    "href": "api/Aviant.DDD.Core.TransferObjects.html",
    "title": "Namespace Aviant.DDD.Core.TransferObjects | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.TransferObjects Classes Dto Eto TransferObject"
  },
  "api/Aviant.DDD.Core.TransferObjects.TransferObject.html": {
    "href": "api/Aviant.DDD.Core.TransferObjects.TransferObject.html",
    "title": "Class TransferObject | Aviant DDD Library Documentation",
    "keywords": "Class TransferObject Inheritance System.Object TransferObject Dto Eto Namespace : Aviant.DDD.Core.TransferObjects Assembly : Aviant.DDD.Core.dll Syntax public abstract class TransferObject : object, ITransferObject Methods | Improve this Doc View Source ToJson() Declaration public string ToJson() Returns Type Description System.String | Improve this Doc View Source ToJson(Formatting) Declaration public string ToJson(Formatting formatting) Parameters Type Name Description Formatting formatting Returns Type Description System.String | Improve this Doc View Source ToJson(Formatting, JsonSerializerSettings) Declaration public string ToJson(Formatting formatting, JsonSerializerSettings settings) Parameters Type Name Description Formatting formatting JsonSerializerSettings settings Returns Type Description System.String | Improve this Doc View Source ToJson(JsonSerializerSettings) Declaration public string ToJson(JsonSerializerSettings settings) Parameters Type Name Description JsonSerializerSettings settings Returns Type Description System.String"
  },
  "api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html": {
    "href": "api/Aviant.DDD.Core.Validators.AssertionsConcernValidator.html",
    "title": "Class AssertionsConcernValidator | Aviant DDD Library Documentation",
    "keywords": "Class AssertionsConcernValidator Inheritance System.Object AssertionsConcernValidator Namespace : Aviant.DDD.Core.Validators Assembly : Aviant.DDD.Core.dll Syntax public static class AssertionsConcernValidator : object Methods | Improve this Doc View Source HasLengthEqual(String, Int32, String) Declaration public static Func<bool> HasLengthEqual(string value, int length, string notification) Parameters Type Name Description System.String value System.Int32 length System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source HasMinimumLength(String, Int32, String) Declaration public static Func<bool> HasMinimumLength(string value, int minLength, string notification) Parameters Type Name Description System.String value System.Int32 minLength System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source HasNotifications() Declaration public static bool HasNotifications() Returns Type Description System.Boolean | Improve this Doc View Source IsDateEqual(DateTime, DateTime, String) Declaration public static Func<bool> IsDateEqual(DateTime left, DateTime right, string notification) Parameters Type Name Description DateTime left DateTime right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsEqual(Int32, Int32, String) Declaration public static Func<bool> IsEqual(int left, int right, string notification) Parameters Type Name Description System.Int32 left System.Int32 right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsEqual(String, String, String) Declaration public static Func<bool> IsEqual(string left, string right, string notification) Parameters Type Name Description System.String left System.String right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsGreaterThan(Nullable<DateTime>, DateTime, String) Declaration public static Func<bool> IsGreaterThan(DateTime? left, DateTime right, string notification) Parameters Type Name Description System.Nullable < DateTime > left DateTime right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsGreaterThan(Nullable<Decimal>, Decimal, String) Declaration public static Func<bool> IsGreaterThan(decimal? left, decimal right, string notification) Parameters Type Name Description System.Nullable < System.Decimal > left System.Decimal right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsGreaterThan(Nullable<Int32>, Int32, String) Declaration public static Func<bool> IsGreaterThan(int? left, int right, string notification) Parameters Type Name Description System.Nullable < System.Int32 > left System.Int32 right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsGreaterThanOrEqual(Nullable<DateTime>, DateTime, String) Declaration public static Func<bool> IsGreaterThanOrEqual(DateTime? left, DateTime right, string notification) Parameters Type Name Description System.Nullable < DateTime > left DateTime right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsGreaterThanOrEqual(Nullable<Decimal>, Decimal, String) Declaration public static Func<bool> IsGreaterThanOrEqual(decimal? left, decimal right, string notification) Parameters Type Name Description System.Nullable < System.Decimal > left System.Decimal right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsGreaterThanOrEqual(Nullable<Int32>, Int32, String) Declaration public static Func<bool> IsGreaterThanOrEqual(int? left, int right, string notification) Parameters Type Name Description System.Nullable < System.Int32 > left System.Int32 right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsGuidNotEmpty(Guid, String) Declaration public static Func<bool> IsGuidNotEmpty(Guid guid, string notification) Parameters Type Name Description Guid guid System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsGuidNotNull(Nullable<Guid>, String) Declaration public static Func<bool> IsGuidNotNull(Guid? guid, string notification) Parameters Type Name Description System.Nullable < Guid > guid System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsLowerThan(Nullable<DateTime>, DateTime, String) Declaration public static Func<bool> IsLowerThan(DateTime? left, DateTime right, string notification) Parameters Type Name Description System.Nullable < DateTime > left DateTime right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsLowerThan(Nullable<Decimal>, Decimal, String) Declaration public static Func<bool> IsLowerThan(decimal? left, decimal right, string notification) Parameters Type Name Description System.Nullable < System.Decimal > left System.Decimal right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsLowerThan(Nullable<Int32>, Int32, String) Declaration public static Func<bool> IsLowerThan(int? left, int right, string notification) Parameters Type Name Description System.Nullable < System.Int32 > left System.Int32 right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsLowerThanOrEqual(Nullable<DateTime>, DateTime, String) Declaration public static Func<bool> IsLowerThanOrEqual(DateTime? left, DateTime right, string notification) Parameters Type Name Description System.Nullable < DateTime > left DateTime right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsLowerThanOrEqual(Nullable<Decimal>, Decimal, String) Declaration public static Func<bool> IsLowerThanOrEqual(decimal? left, decimal right, string notification) Parameters Type Name Description System.Nullable < System.Decimal > left System.Decimal right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsLowerThanOrEqual(Nullable<Int32>, Int32, String) Declaration public static Func<bool> IsLowerThanOrEqual(int? left, int right, string notification) Parameters Type Name Description System.Nullable < System.Int32 > left System.Int32 right System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsNotNull(Nullable<Object>, String) Declaration public static Func<bool> IsNotNull(object? obj, string notification) Parameters Type Name Description System.Nullable < System.Object > obj System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsNull(Nullable<Object>, String) Declaration public static Func<bool> IsNull(object? obj, string notification) Parameters Type Name Description System.Nullable < System.Object > obj System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source IsSatisfiedBy(Func<Boolean>[]) Declaration public static bool IsSatisfiedBy(params Func<bool>[] asserts) Parameters Type Name Description Func < System.Boolean >[] asserts Returns Type Description System.Boolean | Improve this Doc View Source IsStringNotNullOrWhiteSpace(String, String) Declaration public static Func<bool> IsStringNotNullOrWhiteSpace(string value, string notification) Parameters Type Name Description System.String value System.String notification Returns Type Description Func < System.Boolean > | Improve this Doc View Source ValidateGuidFromString(String, String, String, String) Declaration public static Func<bool> ValidateGuidFromString(string guid, string stringIsEmptyMessage, string guidIsEmptyMessage, string guidIsInvalidMessage) Parameters Type Name Description System.String guid System.String stringIsEmptyMessage System.String guidIsEmptyMessage System.String guidIsInvalidMessage Returns Type Description Func < System.Boolean >"
  },
  "api/Aviant.DDD.Core.Validators.html": {
    "href": "api/Aviant.DDD.Core.Validators.html",
    "title": "Namespace Aviant.DDD.Core.Validators | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.Validators Classes AssertionsConcernValidator"
  },
  "api/Aviant.DDD.Core.ValueObjects.html": {
    "href": "api/Aviant.DDD.Core.ValueObjects.html",
    "title": "Namespace Aviant.DDD.Core.ValueObjects | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Core.ValueObjects Classes ValueObject"
  },
  "api/Aviant.DDD.Core.ValueObjects.ValueObject.html": {
    "href": "api/Aviant.DDD.Core.ValueObjects.ValueObject.html",
    "title": "Class ValueObject | Aviant DDD Library Documentation",
    "keywords": "Class ValueObject Inheritance System.Object ValueObject Implements IEquatable < ValueObject > Namespace : Aviant.DDD.Core.ValueObjects Assembly : Aviant.DDD.Core.dll Syntax public abstract class ValueObject : object, IValueObject<ValueObject>, IEquatable<ValueObject> Methods | Improve this Doc View Source Equals(ValueObject) Declaration public virtual bool Equals(ValueObject other) Parameters Type Name Description ValueObject other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source HashValue(Int32, Nullable<Object>) Declaration public int HashValue(int seed, object? value) Parameters Type Name Description System.Int32 seed System.Nullable < System.Object > value Returns Type Description System.Int32 Operators | Improve this Doc View Source Equality(ValueObject, ValueObject) Declaration public static bool operator ==(ValueObject left, ValueObject right) Parameters Type Name Description ValueObject left ValueObject right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(ValueObject, ValueObject) Declaration public static bool operator !=(ValueObject left, ValueObject right) Parameters Type Name Description ValueObject left ValueObject right Returns Type Description System.Boolean Implements IEquatable<>"
  },
  "api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html": {
    "href": "api/Aviant.DDD.Infrastructure.CrossCutting.DependencyInjectionRegistry.html",
    "title": "Class DependencyInjectionRegistry | Aviant DDD Library Documentation",
    "keywords": "Class DependencyInjectionRegistry Inheritance System.Object DependencyInjectionRegistry Namespace : Aviant.DDD.Infrastructure.CrossCutting Assembly : Aviant.DDD.Infrastructure.dll Syntax public static class DependencyInjectionRegistry : object Properties | Improve this Doc View Source ConfigurationBuilder Declaration public static IConfigurationBuilder? ConfigurationBuilder { get; set; } Property Value Type Description System.Nullable < IConfigurationBuilder > | Improve this Doc View Source ConfigurationWithDomains Declaration public static IConfiguration ConfigurationWithDomains { get; } Property Value Type Description IConfiguration | Improve this Doc View Source CurrentEnvironment Declaration public static IWebHostEnvironment? CurrentEnvironment { get; set; } Property Value Type Description System.Nullable < IWebHostEnvironment > | Improve this Doc View Source DefaultConfiguration Declaration public static IConfiguration DefaultConfiguration { get; } Property Value Type Description IConfiguration Methods | Improve this Doc View Source GetDomainConfiguration(String) Declaration public static IConfiguration GetDomainConfiguration(string domain) Parameters Type Name Description System.String domain Returns Type Description IConfiguration | Improve this Doc View Source SetConfiguration(IConfigurationBuilder) Declaration public static IConfiguration SetConfiguration(IConfigurationBuilder configuration) Parameters Type Name Description IConfigurationBuilder configuration Returns Type Description IConfiguration"
  },
  "api/Aviant.DDD.Infrastructure.CrossCutting.html": {
    "href": "api/Aviant.DDD.Infrastructure.CrossCutting.html",
    "title": "Namespace Aviant.DDD.Infrastructure.CrossCutting | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.CrossCutting Classes DependencyInjectionRegistry"
  },
  "api/Aviant.DDD.Infrastructure.Exceptions.html": {
    "href": "api/Aviant.DDD.Infrastructure.Exceptions.html",
    "title": "Namespace Aviant.DDD.Infrastructure.Exceptions | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.Exceptions Classes InfrastructureException"
  },
  "api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html": {
    "href": "api/Aviant.DDD.Infrastructure.Exceptions.InfrastructureException.html",
    "title": "Class InfrastructureException | Aviant DDD Library Documentation",
    "keywords": "Class InfrastructureException Inheritance System.Object InfrastructureException Namespace : Aviant.DDD.Infrastructure.Exceptions Assembly : Aviant.DDD.Infrastructure.dll Syntax public class InfrastructureException : CoreException Constructors | Improve this Doc View Source InfrastructureException() Declaration public InfrastructureException() | Improve this Doc View Source InfrastructureException(SerializationInfo, StreamingContext) Declaration protected InfrastructureException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InfrastructureException(String) Declaration public InfrastructureException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source InfrastructureException(String, Exception) Declaration public InfrastructureException(string message, Exception inner) Parameters Type Name Description System.String message Exception inner | Improve this Doc View Source InfrastructureException(String, Int32, Nullable<Int32>, Nullable<Exception>) Declaration public InfrastructureException(string message, int errorCode, int? familyCode = null, Exception? inner = null) Parameters Type Name Description System.String message System.Int32 errorCode System.Nullable < System.Int32 > familyCode System.Nullable < Exception > inner"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration-2.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Configurations.EntityConfiguration-2.html",
    "title": "Class EntityConfiguration<TEntity, T> | Aviant DDD Library Documentation",
    "keywords": "Class EntityConfiguration<TEntity, T> Inheritance System.Object EntityConfiguration<TEntity, T> Namespace : Aviant.DDD.Infrastructure.Persistence.Configurations Assembly : Aviant.DDD.Infrastructure.dll Syntax public class EntityConfiguration<TEntity, T> : IEntityTypeConfiguration<TEntity> where TEntity : class, IEntity<T> Type Parameters Name Description TEntity T Methods | Improve this Doc View Source Configure(EntityTypeBuilder<TEntity>) Declaration public virtual void Configure(EntityTypeBuilder<TEntity> builder) Parameters Type Name Description EntityTypeBuilder <TEntity> builder"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Configurations.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Configurations.html",
    "title": "Namespace Aviant.DDD.Infrastructure.Persistence.Configurations | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.Persistence.Configurations Classes EntityConfiguration<TEntity, T>"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-1.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-1.html",
    "title": "Class ApiAuthorizationDbContext<TUser> | Aviant DDD Library Documentation",
    "keywords": "Class ApiAuthorizationDbContext<TUser> Database abstraction for a combined Microsoft.EntityFrameworkCore.DbContext using ASP.NET Identity and Identity Server. Inheritance System.Object ApiAuthorizationDbContext <TUser, IdentityRole , System.String > ApiAuthorizationDbContext<TUser> Implements IPersistedGrantDbContext Inherited Members ApiAuthorizationDbContext<TUser, IdentityRole, String>.PersistedGrants ApiAuthorizationDbContext<TUser, IdentityRole, String>.DeviceFlowCodes ApiAuthorizationDbContext<TUser, IdentityRole, String>.OnModelCreating(ModelBuilder) Namespace : Aviant.DDD.Infrastructure.Persistence.Contexts Assembly : Aviant.DDD.Infrastructure.dll Syntax public class ApiAuthorizationDbContext<TUser> : ApiAuthorizationDbContext<TUser, IdentityRole, string>, IPersistedGrantDbContext where TUser : IdentityUser Type Parameters Name Description TUser Constructors | Improve this Doc View Source ApiAuthorizationDbContext(DbContextOptions, IOptions<OperationalStoreOptions>) Initializes a new instance of ApiAuthorizationDbContext<TUser> . Declaration public ApiAuthorizationDbContext(DbContextOptions options, IOptions<OperationalStoreOptions> operationalStoreOptions) Parameters Type Name Description DbContextOptions options The Microsoft.EntityFrameworkCore.DbContextOptions . IOptions < OperationalStoreOptions > operationalStoreOptions The Microsoft.Extensions.Options.IOptions`1 . Implements IPersistedGrantDbContext"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext-3.html",
    "title": "Class ApiAuthorizationDbContext<TUser, TRole, TKey> | Aviant DDD Library Documentation",
    "keywords": "Class ApiAuthorizationDbContext<TUser, TRole, TKey> Database abstraction for a combined Microsoft.EntityFrameworkCore.DbContext using ASP.NET Identity and Identity Server. Inheritance System.Object ApiAuthorizationDbContext<TUser, TRole, TKey> ApiAuthorizationDbContext<TUser> AuthorizationDbContextRead<TApplicationUser, TApplicationRole> AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole> Implements IPersistedGrantDbContext Namespace : Aviant.DDD.Infrastructure.Persistence.Contexts Assembly : Aviant.DDD.Infrastructure.dll Syntax public class ApiAuthorizationDbContext<TUser, TRole, TKey> : IdentityDbContext<TUser, TRole, TKey>, IPersistedGrantDbContext where TUser : IdentityUser<TKey> where TRole : IdentityRole<TKey> where TKey : IEquatable<TKey> Type Parameters Name Description TUser TRole TKey Key of the IdentityUser entity Constructors | Improve this Doc View Source ApiAuthorizationDbContext(DbContextOptions, IOptions<OperationalStoreOptions>) Initializes a new instance of ApiAuthorizationDbContext<TUser, TRole, TKey> . Declaration public ApiAuthorizationDbContext(DbContextOptions options, IOptions<OperationalStoreOptions> operationalStoreOptions) Parameters Type Name Description DbContextOptions options The Microsoft.EntityFrameworkCore.DbContextOptions . IOptions < OperationalStoreOptions > operationalStoreOptions The Microsoft.Extensions.Options.IOptions`1 . Properties | Improve this Doc View Source DeviceFlowCodes Gets or sets the Microsoft.EntityFrameworkCore.DbSet`1 . Declaration public DbSet<DeviceFlowCodes>? DeviceFlowCodes { get; set; } Property Value Type Description System.Nullable < DbSet < DeviceFlowCodes >> | Improve this Doc View Source PersistedGrants Gets or sets the Microsoft.EntityFrameworkCore.DbSet`1 . Declaration public DbSet<PersistedGrant>? PersistedGrants { get; set; } Property Value Type Description System.Nullable < DbSet < PersistedGrant >> Methods | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Implements IPersistedGrantDbContext"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextRead-2.html",
    "title": "Class AuthorizationDbContextRead<TApplicationUser, TApplicationRole> | Aviant DDD Library Documentation",
    "keywords": "Class AuthorizationDbContextRead<TApplicationUser, TApplicationRole> Inheritance System.Object ApiAuthorizationDbContext <TApplicationUser, TApplicationRole, Guid > AuthorizationDbContextRead<TApplicationUser, TApplicationRole> Implements IPersistedGrantDbContext IDbContextRead IDisposable Inherited Members ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>.PersistedGrants ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>.DeviceFlowCodes ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>.OnModelCreating(ModelBuilder) Namespace : Aviant.DDD.Infrastructure.Persistence.Contexts Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class AuthorizationDbContextRead<TApplicationUser, TApplicationRole> : ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>, IPersistedGrantDbContext, IDbContextRead, IDisposable, IDbContextReadImplementation where TApplicationUser : ApplicationUser where TApplicationRole : ApplicationRole Type Parameters Name Description TApplicationUser TApplicationRole Constructors | Improve this Doc View Source AuthorizationDbContextRead(DbContextOptions, IOptions<OperationalStoreOptions>) Declaration protected AuthorizationDbContextRead(DbContextOptions options, IOptions<OperationalStoreOptions> operationalStoreOptions) Parameters Type Name Description DbContextOptions options IOptions < OperationalStoreOptions > operationalStoreOptions Methods | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>.OnModelCreating(ModelBuilder) | Improve this Doc View Source SaveChanges() Declaration public override int SaveChanges() Returns Type Description System.Int32 | Improve this Doc View Source SaveChanges(Boolean) Declaration public override int SaveChanges(bool acceptAllChangesOnSuccess) Parameters Type Name Description System.Boolean acceptAllChangesOnSuccess Returns Type Description System.Int32 | Improve this Doc View Source SaveChangesAsync(CancellationToken) Declaration public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source SaveChangesAsync(Boolean, CancellationToken) Declaration public override Task<int> SaveChangesAsync(bool acceptAllChangesOnSuccess, CancellationToken cancellationToken = null) Parameters Type Name Description System.Boolean acceptAllChangesOnSuccess CancellationToken cancellationToken Returns Type Description Task < System.Int32 > Implements IPersistedGrantDbContext IDbContextRead IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Contexts.AuthorizationDbContextWrite-3.html",
    "title": "Class AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole> | Aviant DDD Library Documentation",
    "keywords": "Class AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole> Inheritance System.Object ApiAuthorizationDbContext <TApplicationUser, TApplicationRole, Guid > AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole> Implements IPersistedGrantDbContext IDbContextWrite IDisposable Inherited Members ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>.PersistedGrants ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>.DeviceFlowCodes ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>.OnModelCreating(ModelBuilder) Namespace : Aviant.DDD.Infrastructure.Persistence.Contexts Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole> : ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>, IPersistedGrantDbContext, IDbContextWrite, IDisposable, IAuditableImplementation<TDbContext>, IDbContextWriteImplementation<TDbContext> where TDbContext : class, IDbContextWrite where TApplicationUser : ApplicationUser where TApplicationRole : ApplicationRole Type Parameters Name Description TDbContext TApplicationUser TApplicationRole Constructors | Improve this Doc View Source AuthorizationDbContextWrite(DbContextOptions, IOptions<OperationalStoreOptions>) Declaration protected AuthorizationDbContextWrite(DbContextOptions options, IOptions<OperationalStoreOptions> operationalStoreOptions) Parameters Type Name Description DbContextOptions options IOptions < OperationalStoreOptions > operationalStoreOptions Methods | Improve this Doc View Source AddConfigurationAssemblyFromEntity<TEntity, TKey>(EntityConfiguration<TEntity, TKey>) Declaration public static void AddConfigurationAssemblyFromEntity<TEntity, TKey>(EntityConfiguration<TEntity, TKey> entityConfiguration) where TEntity : Entity<TKey> Parameters Type Name Description EntityConfiguration <TEntity, TKey> entityConfiguration Type Parameters Name Description TEntity TKey | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Overrides Aviant.DDD.Infrastructure.Persistence.Contexts.ApiAuthorizationDbContext<TApplicationUser, TApplicationRole, Guid>.OnModelCreating(ModelBuilder) | Improve this Doc View Source SaveChangesAsync(CancellationToken) Declaration public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 > Implements IPersistedGrantDbContext IDbContextWrite IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextRead.html",
    "title": "Class DbContextRead | Aviant DDD Library Documentation",
    "keywords": "Class DbContextRead Inheritance System.Object DbContextRead Implements IDbContextRead IDisposable Namespace : Aviant.DDD.Infrastructure.Persistence.Contexts Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class DbContextRead : DbContext, IDbContextRead, IDisposable, IDbContextReadImplementation Constructors | Improve this Doc View Source DbContextRead(DbContextOptions) Declaration protected DbContextRead(DbContextOptions options) Parameters Type Name Description DbContextOptions options Methods | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder | Improve this Doc View Source SaveChanges() Declaration public override int SaveChanges() Returns Type Description System.Int32 | Improve this Doc View Source SaveChanges(Boolean) Declaration public override int SaveChanges(bool acceptAllChangesOnSuccess) Parameters Type Name Description System.Boolean acceptAllChangesOnSuccess Returns Type Description System.Int32 | Improve this Doc View Source SaveChangesAsync(CancellationToken) Declaration public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source SaveChangesAsync(Boolean, CancellationToken) Declaration public override Task<int> SaveChangesAsync(bool acceptAllChangesOnSuccess, CancellationToken cancellationToken = null) Parameters Type Name Description System.Boolean acceptAllChangesOnSuccess CancellationToken cancellationToken Returns Type Description Task < System.Int32 > Implements IDbContextRead IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Contexts.DbContextWrite-1.html",
    "title": "Class DbContextWrite<TDbContext> | Aviant DDD Library Documentation",
    "keywords": "Class DbContextWrite<TDbContext> Inheritance System.Object DbContextWrite<TDbContext> Implements IDbContextWrite IDisposable Namespace : Aviant.DDD.Infrastructure.Persistence.Contexts Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class DbContextWrite<TDbContext> : DbContext, IDbContextWrite, IDisposable, IAuditableImplementation<TDbContext>, IDbContextWriteImplementation<TDbContext> where TDbContext : class, IDbContextWrite Type Parameters Name Description TDbContext Constructors | Improve this Doc View Source DbContextWrite(DbContextOptions) Declaration protected DbContextWrite(DbContextOptions options) Parameters Type Name Description DbContextOptions options Methods | Improve this Doc View Source AddConfigurationAssemblyFromEntity<TEntity, TKey>(EntityConfiguration<TEntity, TKey>) Declaration public static void AddConfigurationAssemblyFromEntity<TEntity, TKey>(EntityConfiguration<TEntity, TKey> entityConfiguration) where TEntity : Entity<TKey> Parameters Type Name Description EntityConfiguration <TEntity, TKey> entityConfiguration Type Parameters Name Description TEntity TKey | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder | Improve this Doc View Source SaveChangesAsync(CancellationToken) Declaration public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 > Implements IDbContextWrite IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Contexts.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Contexts.html",
    "title": "Namespace Aviant.DDD.Infrastructure.Persistence.Contexts | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.Persistence.Contexts Classes ApiAuthorizationDbContext<TUser> Database abstraction for a combined Microsoft.EntityFrameworkCore.DbContext using ASP.NET Identity and Identity Server. ApiAuthorizationDbContext<TUser, TRole, TKey> Database abstraction for a combined Microsoft.EntityFrameworkCore.DbContext using ASP.NET Identity and Identity Server. AuthorizationDbContextRead<TApplicationUser, TApplicationRole> AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole> DbContextRead DbContextWrite<TDbContext>"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreConnectionWrapper.html",
    "title": "Class EventStoreConnectionWrapper | Aviant DDD Library Documentation",
    "keywords": "Class EventStoreConnectionWrapper Inheritance System.Object EventStoreConnectionWrapper Implements IEventStoreConnectionWrapper IDisposable Namespace : Aviant.DDD.Infrastructure.Persistence.EventStore Assembly : Aviant.DDD.Infrastructure.dll Syntax public sealed class EventStoreConnectionWrapper : object, IEventStoreConnectionWrapper, IDisposable Constructors | Improve this Doc View Source EventStoreConnectionWrapper(Uri, ILogger<EventStoreConnectionWrapper>) Declaration public EventStoreConnectionWrapper(Uri connectionString, ILogger<EventStoreConnectionWrapper> logger) Parameters Type Name Description Uri connectionString ILogger < EventStoreConnectionWrapper > logger Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetConnectionAsync(CancellationToken) Declaration public Task<IEventStoreConnection> GetConnectionAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEventStoreConnection > Implements IEventStoreConnectionWrapper IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.EventStore.EventStoreExtensionRegistry.html",
    "title": "Class EventStoreExtensionRegistry | Aviant DDD Library Documentation",
    "keywords": "Class EventStoreExtensionRegistry Inheritance System.Object EventStoreExtensionRegistry Namespace : Aviant.DDD.Infrastructure.Persistence.EventStore Assembly : Aviant.DDD.Infrastructure.dll Syntax public static class EventStoreExtensionRegistry : object Methods | Improve this Doc View Source AddEventsRepository<TAggregate, TAggregateId>(IServiceCollection) Declaration public static IServiceCollection AddEventsRepository<TAggregate, TAggregateId>(this IServiceCollection services) where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection Type Parameters Name Description TAggregate TAggregateId | Improve this Doc View Source AddEventsService<TAggregate, TAggregateId>(IServiceCollection) Declaration public static IServiceCollection AddEventsService<TAggregate, TAggregateId>(this IServiceCollection services) where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection Type Parameters Name Description TAggregate TAggregateId"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.EventStore.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.EventStore.html",
    "title": "Namespace Aviant.DDD.Infrastructure.Persistence.EventStore | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.Persistence.EventStore Classes EventStoreConnectionWrapper EventStoreExtensionRegistry Interfaces IEventStoreConnectionWrapper"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.EventStore.IEventStoreConnectionWrapper.html",
    "title": "Interface IEventStoreConnectionWrapper | Aviant DDD Library Documentation",
    "keywords": "Interface IEventStoreConnectionWrapper Namespace : Aviant.DDD.Infrastructure.Persistence.EventStore Assembly : Aviant.DDD.Infrastructure.dll Syntax public interface IEventStoreConnectionWrapper Methods | Improve this Doc View Source GetConnectionAsync(CancellationToken) Declaration Task<IEventStoreConnection> GetConnectionAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IEventStoreConnection >"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.html",
    "title": "Namespace Aviant.DDD.Infrastructure.Persistence | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.Persistence Classes UnitOfWork<TDbContext> UnitOfWork<TAggregate, TAggregateId>"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.ConsumerStoppedHandler.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.ConsumerStoppedHandler.html",
    "title": "Delegate EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStoppedHandler | Aviant DDD Library Documentation",
    "keywords": "Delegate EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStoppedHandler Namespace : Aviant.DDD.Infrastructure.Persistence.Kafka Assembly : Aviant.DDD.Infrastructure.dll Syntax public delegate void ConsumerStoppedHandler(object sender); Parameters Type Name Description System.Object sender"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.ExceptionThrownHandler.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.ExceptionThrownHandler.html",
    "title": "Delegate EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrownHandler | Aviant DDD Library Documentation",
    "keywords": "Delegate EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrownHandler Namespace : Aviant.DDD.Infrastructure.Persistence.Kafka Assembly : Aviant.DDD.Infrastructure.dll Syntax public delegate void ExceptionThrownHandler(object sender, Exception e); Parameters Type Name Description System.Object sender Exception e"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumer-3.html",
    "title": "Class EventConsumer<TAggregate, TAggregateId, TDeserializer> | Aviant DDD Library Documentation",
    "keywords": "Class EventConsumer<TAggregate, TAggregateId, TDeserializer> Inheritance System.Object EventConsumer<TAggregate, TAggregateId, TDeserializer> Implements IEventConsumer <TAggregate, TAggregateId, TDeserializer> Namespace : Aviant.DDD.Infrastructure.Persistence.Kafka Assembly : Aviant.DDD.Infrastructure.dll Syntax public sealed class EventConsumer<TAggregate, TAggregateId, TDeserializer> : IDisposable, IEventConsumer<TAggregate, TAggregateId, TDeserializer> where TAggregate : IAggregate<TAggregateId> where TAggregateId : class, IAggregateId where TDeserializer : class, IDeserializer<TAggregateId>, new() Type Parameters Name Description TAggregate TAggregateId TDeserializer Constructors | Improve this Doc View Source EventConsumer(IEventDeserializer, EventConsumerConfig, ILogger<EventConsumer<TAggregate, TAggregateId, TDeserializer>>) Declaration public EventConsumer(IEventDeserializer eventDeserializer, EventConsumerConfig config, ILogger<EventConsumer<TAggregate, TAggregateId, TDeserializer>> logger) Parameters Type Name Description IEventDeserializer eventDeserializer EventConsumerConfig config ILogger < EventConsumer <TAggregate, TAggregateId, TDeserializer>> logger Methods | Improve this Doc View Source ConsumeAsync(CancellationToken) Declaration public Task ConsumeAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Dispose() Declaration public void Dispose() Events | Improve this Doc View Source ConsumerStopped Declaration public event EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStoppedHandler ConsumerStopped Event Type Type Description EventConsumer.ConsumerStoppedHandler <> | Improve this Doc View Source EventReceived Declaration public event EventReceivedHandlerAsync<TAggregateId> EventReceived Event Type Type Description EventReceivedHandlerAsync <TAggregateId> | Improve this Doc View Source ExceptionThrown Declaration public event EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrownHandler ExceptionThrown Event Type Type Description EventConsumer.ExceptionThrownHandler <> Implements IEventConsumer<, , >"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Kafka.EventConsumerConfig.html",
    "title": "Class EventConsumerConfig | Aviant DDD Library Documentation",
    "keywords": "Class EventConsumerConfig Inheritance System.Object EventConsumerConfig Namespace : Aviant.DDD.Infrastructure.Persistence.Kafka Assembly : Aviant.DDD.Infrastructure.dll Syntax public sealed class EventConsumerConfig : object Constructors | Improve this Doc View Source EventConsumerConfig(String, String, String) Declaration public EventConsumerConfig(string kafkaConnectionString, string topicBaseName, string consumerGroup) Parameters Type Name Description System.String kafkaConnectionString System.String topicBaseName System.String consumerGroup"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Kafka.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Kafka.html",
    "title": "Namespace Aviant.DDD.Infrastructure.Persistence.Kafka | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.Persistence.Kafka Classes EventConsumer<TAggregate, TAggregateId, TDeserializer> EventConsumerConfig KafkaExtensionRegistry Delegates EventConsumer<TAggregate, TAggregateId, TDeserializer>.ConsumerStoppedHandler EventConsumer<TAggregate, TAggregateId, TDeserializer>.ExceptionThrownHandler"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Kafka.KafkaExtensionRegistry.html",
    "title": "Class KafkaExtensionRegistry | Aviant DDD Library Documentation",
    "keywords": "Class KafkaExtensionRegistry Inheritance System.Object KafkaExtensionRegistry Namespace : Aviant.DDD.Infrastructure.Persistence.Kafka Assembly : Aviant.DDD.Infrastructure.dll Syntax public static class KafkaExtensionRegistry : object Methods | Improve this Doc View Source AddKafkaEventProducer<TAggregate, TAggregateId>(IServiceCollection, EventConsumerConfig) Declaration public static IServiceCollection AddKafkaEventProducer<TAggregate, TAggregateId>(this IServiceCollection services, EventConsumerConfig configuration) where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Parameters Type Name Description IServiceCollection services EventConsumerConfig configuration Returns Type Description IServiceCollection Type Parameters Name Description TAggregate TAggregateId"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Repository.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Repository.html",
    "title": "Namespace Aviant.DDD.Infrastructure.Persistence.Repository | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.Persistence.Repository Classes RepositoryRead<TDbContext, TEntity, TPrimaryKey> RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> RepositoryReadBase<TDbContext, TEntity, TPrimaryKey> RepositoryWrite<TDbContext, TEntity, TPrimaryKey> RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-3.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-3.html",
    "title": "Class RepositoryRead<TDbContext, TEntity, TPrimaryKey> | Aviant DDD Library Documentation",
    "keywords": "Class RepositoryRead<TDbContext, TEntity, TPrimaryKey> Inheritance System.Object RepositoryReadBase <TDbContext, TEntity, TPrimaryKey> RepositoryRead<TDbContext, TEntity, TPrimaryKey> Implements IDisposable Inherited Members RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose(Boolean) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAll() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllIncluding(Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindBy(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindByIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync(CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Get(TPrimaryKey) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAsync(TPrimaryKey, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Single(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault(TPrimaryKey) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(TPrimaryKey, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AnyAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AllAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync(CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync(CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Namespace : Aviant.DDD.Infrastructure.Persistence.Repository Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class RepositoryRead<TDbContext, TEntity, TPrimaryKey> : RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>, IRepositoryImplementation<TEntity, TPrimaryKey>, IDisposable where TDbContext : DbContextRead where TEntity : Entity<TPrimaryKey> Type Parameters Name Description TDbContext TEntity TPrimaryKey Constructors | Improve this Doc View Source RepositoryRead(TDbContext) Declaration protected RepositoryRead(TDbContext context) Parameters Type Name Description TDbContext context Implements IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-5.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryRead-5.html",
    "title": "Class RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> | Aviant DDD Library Documentation",
    "keywords": "Class RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> Inheritance System.Object RepositoryReadBase <TDbContext, TEntity, TPrimaryKey> RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> Implements IDisposable Inherited Members RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Dispose(Boolean) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAll() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllIncluding(Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindBy(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FindByIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllList(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync(CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAllListIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Get(TPrimaryKey) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetAsync(TPrimaryKey, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Single(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.GetSingleIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault(TPrimaryKey) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefault(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(TPrimaryKey, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.FirstOrDefaultIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AnyAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.AllAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.Count(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync(CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.CountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount() RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCount(Expression<Func<TEntity, Boolean>>) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync(CancellationToken) RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>.LongCountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Namespace : Aviant.DDD.Infrastructure.Persistence.Repository Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> : RepositoryReadBase<TDbContext, TEntity, TPrimaryKey>, IRepositoryImplementation<TEntity, TPrimaryKey>, IDisposable where TDbContext : AuthorizationDbContextRead<TApplicationUser, TApplicationRole> where TApplicationUser : ApplicationUser where TApplicationRole : ApplicationRole where TEntity : Entity<TPrimaryKey> Type Parameters Name Description TDbContext TApplicationUser TApplicationRole TEntity TPrimaryKey Constructors | Improve this Doc View Source RepositoryRead(TDbContext) Declaration protected RepositoryRead(TDbContext context) Parameters Type Name Description TDbContext context Implements IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryReadBase-3.html",
    "title": "Class RepositoryReadBase<TDbContext, TEntity, TPrimaryKey> | Aviant DDD Library Documentation",
    "keywords": "Class RepositoryReadBase<TDbContext, TEntity, TPrimaryKey> Inheritance System.Object RepositoryReadBase<TDbContext, TEntity, TPrimaryKey> RepositoryRead<TDbContext, TEntity, TPrimaryKey> RepositoryRead<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> Implements IDisposable Namespace : Aviant.DDD.Infrastructure.Persistence.Repository Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class RepositoryReadBase<TDbContext, TEntity, TPrimaryKey> : IRepositoryRead<TEntity, TPrimaryKey>, IRepositoryImplementation<TEntity, TPrimaryKey>, IDisposable where TDbContext : DbContext where TEntity : Entity<TPrimaryKey> Type Parameters Name Description TDbContext TEntity TPrimaryKey Constructors | Improve this Doc View Source RepositoryReadBase(TDbContext) Declaration protected RepositoryReadBase(TDbContext dbContext) Parameters Type Name Description TDbContext dbContext Methods | Improve this Doc View Source AllAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual ValueTask<bool> AllAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description ValueTask < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual ValueTask<bool> AnyAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description ValueTask < System.Boolean > | Improve this Doc View Source Count() Declaration public virtual int Count() Returns Type Description System.Int32 | Improve this Doc View Source Count(Expression<Func<TEntity, Boolean>>) Declaration public virtual int Count(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Returns Type Description System.Int32 | Improve this Doc View Source CountAsync(CancellationToken) Declaration public virtual ValueTask<int> CountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < System.Int32 > | Improve this Doc View Source CountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual ValueTask<int> CountAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description ValueTask < System.Int32 > | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source FindBy(Expression<Func<TEntity, Boolean>>) Declaration public virtual IQueryable<TEntity> FindBy(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Returns Type Description IQueryable <TEntity> | Improve this Doc View Source FindByIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) Declaration public virtual IQueryable<TEntity> FindByIncluding(Expression<Func<TEntity, bool>> predicate, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description IQueryable <TEntity> | Improve this Doc View Source FirstOrDefault(TPrimaryKey) Declaration public virtual TEntity FirstOrDefault(TPrimaryKey id) Parameters Type Name Description TPrimaryKey id Returns Type Description TEntity | Improve this Doc View Source FirstOrDefault(Expression<Func<TEntity, Boolean>>) Declaration public virtual TEntity FirstOrDefault(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Returns Type Description TEntity | Improve this Doc View Source FirstOrDefaultAsync(TPrimaryKey, CancellationToken) Declaration public virtual ValueTask<TEntity> FirstOrDefaultAsync(TPrimaryKey id, CancellationToken cancellationToken = null) Parameters Type Name Description TPrimaryKey id CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> | Improve this Doc View Source FirstOrDefaultAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual ValueTask<TEntity> FirstOrDefaultAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> | Improve this Doc View Source FirstOrDefaultIncluding(TPrimaryKey, Expression<Func<TEntity, Object>>[]) Declaration public virtual TEntity FirstOrDefaultIncluding(TPrimaryKey id, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description TPrimaryKey id Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description TEntity | Improve this Doc View Source FirstOrDefaultIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) Declaration public virtual TEntity FirstOrDefaultIncluding(Expression<Func<TEntity, bool>> predicate, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description TEntity | Improve this Doc View Source FirstOrDefaultIncludingAsync(TPrimaryKey, CancellationToken, Expression<Func<TEntity, Object>>[]) Declaration public virtual ValueTask<TEntity> FirstOrDefaultIncludingAsync(TPrimaryKey id, CancellationToken cancellationToken = null, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description TPrimaryKey id CancellationToken cancellationToken Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description ValueTask <TEntity> | Improve this Doc View Source FirstOrDefaultIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) Declaration public virtual ValueTask<TEntity> FirstOrDefaultIncludingAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description ValueTask <TEntity> | Improve this Doc View Source Get(TPrimaryKey) Declaration public virtual TEntity Get(TPrimaryKey id) Parameters Type Name Description TPrimaryKey id Returns Type Description TEntity | Improve this Doc View Source GetAll() Declaration public virtual IQueryable<TEntity> GetAll() Returns Type Description IQueryable <TEntity> | Improve this Doc View Source GetAllIncluding(Expression<Func<TEntity, Object>>[]) Declaration public virtual IQueryable<TEntity> GetAllIncluding(params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description IQueryable <TEntity> | Improve this Doc View Source GetAllList() Declaration public virtual List<TEntity> GetAllList() Returns Type Description List <TEntity> | Improve this Doc View Source GetAllList(Expression<Func<TEntity, Boolean>>) Declaration public virtual List<TEntity> GetAllList(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Returns Type Description List <TEntity> | Improve this Doc View Source GetAllListAsync(CancellationToken) Declaration public virtual ValueTask<List<TEntity>> GetAllListAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < List <TEntity>> | Improve this Doc View Source GetAllListAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual ValueTask<List<TEntity>> GetAllListAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description ValueTask < List <TEntity>> | Improve this Doc View Source GetAllListIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) Declaration public virtual TEntity GetAllListIncluding(Expression<Func<TEntity, bool>> predicate, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description TEntity | Improve this Doc View Source GetAllListIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) Declaration public virtual ValueTask<TEntity> GetAllListIncludingAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description ValueTask <TEntity> | Improve this Doc View Source GetAsync(TPrimaryKey, CancellationToken) Declaration public virtual ValueTask<TEntity> GetAsync(TPrimaryKey id, CancellationToken cancellationToken = null) Parameters Type Name Description TPrimaryKey id CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> | Improve this Doc View Source GetSingleAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual ValueTask<TEntity> GetSingleAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description ValueTask <TEntity> | Improve this Doc View Source GetSingleIncluding(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>[]) Declaration public virtual TEntity GetSingleIncluding(Expression<Func<TEntity, bool>> predicate, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description TEntity | Improve this Doc View Source GetSingleIncludingAsync(Expression<Func<TEntity, Boolean>>, CancellationToken, Expression<Func<TEntity, Object>>[]) Declaration public virtual ValueTask<TEntity> GetSingleIncludingAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null, params Expression<Func<TEntity, object>>[] propertySelectors) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Expression < Func <TEntity, System.Object >>[] propertySelectors Returns Type Description ValueTask <TEntity> | Improve this Doc View Source LongCount() Declaration public virtual long LongCount() Returns Type Description System.Int64 | Improve this Doc View Source LongCount(Expression<Func<TEntity, Boolean>>) Declaration public virtual long LongCount(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Returns Type Description System.Int64 | Improve this Doc View Source LongCountAsync(CancellationToken) Declaration public virtual ValueTask<long> LongCountAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask < System.Int64 > | Improve this Doc View Source LongCountAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual ValueTask<long> LongCountAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description ValueTask < System.Int64 > | Improve this Doc View Source Single(Expression<Func<TEntity, Boolean>>) Declaration public virtual TEntity Single(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate Returns Type Description TEntity Implements IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-3.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-3.html",
    "title": "Class RepositoryWrite<TDbContext, TEntity, TPrimaryKey> | Aviant DDD Library Documentation",
    "keywords": "Class RepositoryWrite<TDbContext, TEntity, TPrimaryKey> Inheritance System.Object RepositoryWriteBase <TDbContext, TEntity, TPrimaryKey> RepositoryWrite<TDbContext, TEntity, TPrimaryKey> Implements IDisposable Inherited Members RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose() RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose(Boolean) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Insert(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetId(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetIdAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdate(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetId(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update(TPrimaryKey, Action<TEntity>) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(TPrimaryKey) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(Expression<Func<TEntity, Boolean>>) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TPrimaryKey, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Namespace : Aviant.DDD.Infrastructure.Persistence.Repository Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class RepositoryWrite<TDbContext, TEntity, TPrimaryKey> : RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>, IRepositoryImplementation<TEntity, TPrimaryKey>, IDisposable where TDbContext : DbContextWrite<TDbContext> where TEntity : Entity<TPrimaryKey> Type Parameters Name Description TDbContext TEntity TPrimaryKey Constructors | Improve this Doc View Source RepositoryWrite(TDbContext) Declaration protected RepositoryWrite(TDbContext context) Parameters Type Name Description TDbContext context Implements IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-5.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWrite-5.html",
    "title": "Class RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> | Aviant DDD Library Documentation",
    "keywords": "Class RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> Inheritance System.Object RepositoryWriteBase <TDbContext, TEntity, TPrimaryKey> RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> Implements IDisposable Inherited Members RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose() RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Dispose(Boolean) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Insert(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetId(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertAndGetIdAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdate(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetId(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Update(TPrimaryKey, Action<TEntity>) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(TEntity) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(TPrimaryKey) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.Delete(Expression<Func<TEntity, Boolean>>) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TEntity, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(TPrimaryKey, CancellationToken) RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Namespace : Aviant.DDD.Infrastructure.Persistence.Repository Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> : RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey>, IRepositoryImplementation<TEntity, TPrimaryKey>, IDisposable where TDbContext : AuthorizationDbContextWrite<TDbContext, TApplicationUser, TApplicationRole> where TApplicationUser : ApplicationUser where TApplicationRole : ApplicationRole where TEntity : Entity<TPrimaryKey> Type Parameters Name Description TDbContext TApplicationUser TApplicationRole TEntity TPrimaryKey Constructors | Improve this Doc View Source RepositoryWrite(TDbContext) Declaration protected RepositoryWrite(TDbContext context) Parameters Type Name Description TDbContext context Implements IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.Repository.RepositoryWriteBase-3.html",
    "title": "Class RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey> | Aviant DDD Library Documentation",
    "keywords": "Class RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey> Inheritance System.Object RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey> RepositoryWrite<TDbContext, TEntity, TPrimaryKey> RepositoryWrite<TDbContext, TApplicationUser, TApplicationRole, TEntity, TPrimaryKey> Implements IDisposable Namespace : Aviant.DDD.Infrastructure.Persistence.Repository Assembly : Aviant.DDD.Infrastructure.dll Syntax public abstract class RepositoryWriteBase<TDbContext, TEntity, TPrimaryKey> : IRepositoryWrite<TEntity, TPrimaryKey>, IRepositoryImplementation<TEntity, TPrimaryKey>, IDisposable where TDbContext : DbContext where TEntity : Entity<TPrimaryKey> Type Parameters Name Description TDbContext TEntity TPrimaryKey Constructors | Improve this Doc View Source RepositoryWriteBase(TDbContext) Declaration protected RepositoryWriteBase(TDbContext dbContext) Parameters Type Name Description TDbContext dbContext Methods | Improve this Doc View Source Delete(TEntity) Declaration public virtual void Delete(TEntity entity) Parameters Type Name Description TEntity entity | Improve this Doc View Source Delete(TPrimaryKey) Declaration public virtual void Delete(TPrimaryKey id) Parameters Type Name Description TPrimaryKey id | Improve this Doc View Source Delete(Expression<Func<TEntity, Boolean>>) Declaration public virtual void Delete(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate | Improve this Doc View Source DeleteAsync(TEntity, CancellationToken) Declaration public virtual Task DeleteAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(TPrimaryKey, CancellationToken) Declaration public virtual Task DeleteAsync(TPrimaryKey id, CancellationToken cancellationToken = null) Parameters Type Name Description TPrimaryKey id CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual Task DeleteAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source Insert(TEntity) Declaration public virtual TEntity Insert(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity | Improve this Doc View Source InsertAndGetId(TEntity) Declaration public virtual TPrimaryKey InsertAndGetId(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TPrimaryKey | Improve this Doc View Source InsertAndGetIdAsync(TEntity, CancellationToken) Declaration public virtual Task<TPrimaryKey> InsertAndGetIdAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task <TPrimaryKey> | Improve this Doc View Source InsertAsync(TEntity, CancellationToken) Declaration public virtual Task<TEntity> InsertAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task <TEntity> | Improve this Doc View Source InsertOrUpdate(TEntity) Declaration public virtual TEntity InsertOrUpdate(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity | Improve this Doc View Source InsertOrUpdateAndGetId(TEntity) Declaration public virtual TPrimaryKey InsertOrUpdateAndGetId(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TPrimaryKey | Improve this Doc View Source InsertOrUpdateAndGetIdAsync(TEntity, CancellationToken) Declaration public virtual Task<TPrimaryKey> InsertOrUpdateAndGetIdAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task <TPrimaryKey> | Improve this Doc View Source InsertOrUpdateAsync(TEntity, CancellationToken) Declaration public virtual Task<TEntity> InsertOrUpdateAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task <TEntity> | Improve this Doc View Source Update(TEntity) Declaration public virtual TEntity Update(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity | Improve this Doc View Source Update(TPrimaryKey, Action<TEntity>) Declaration public virtual TEntity Update(TPrimaryKey id, Action<TEntity> updateAction) Parameters Type Name Description TPrimaryKey id Action <TEntity> updateAction Returns Type Description TEntity | Improve this Doc View Source UpdateAsync(TEntity, CancellationToken) Declaration public virtual Task<TEntity> UpdateAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task <TEntity> | Improve this Doc View Source UpdateAsync(TPrimaryKey, Func<TEntity, Task>, CancellationToken) Declaration public virtual Task<TEntity> UpdateAsync(TPrimaryKey id, Func<TEntity, Task> updateAction, CancellationToken cancellationToken = null) Parameters Type Name Description TPrimaryKey id Func <TEntity, Task > updateAction CancellationToken cancellationToken Returns Type Description Task <TEntity> Implements IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-1.html",
    "title": "Class UnitOfWork<TDbContext> | Aviant DDD Library Documentation",
    "keywords": "Class UnitOfWork<TDbContext> Inheritance System.Object UnitOfWork<TDbContext> Implements IUnitOfWork <TDbContext> IDisposable Namespace : Aviant.DDD.Infrastructure.Persistence Assembly : Aviant.DDD.Infrastructure.dll Syntax public sealed class UnitOfWork<TDbContext> : object, IUnitOfWork<TDbContext>, IDisposable where TDbContext : IDbContextWrite Type Parameters Name Description TDbContext Constructors | Improve this Doc View Source UnitOfWork(TDbContext) Declaration public UnitOfWork(TDbContext context) Parameters Type Name Description TDbContext context Methods | Improve this Doc View Source CommitAsync(CancellationToken) Declaration public Task<int> CommitAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IUnitOfWork<TDbContext> IDisposable"
  },
  "api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-2.html": {
    "href": "api/Aviant.DDD.Infrastructure.Persistence.UnitOfWork-2.html",
    "title": "Class UnitOfWork<TAggregate, TAggregateId> | Aviant DDD Library Documentation",
    "keywords": "Class UnitOfWork<TAggregate, TAggregateId> Inheritance System.Object UnitOfWork<TAggregate, TAggregateId> Implements IUnitOfWork <TAggregate, TAggregateId> Namespace : Aviant.DDD.Infrastructure.Persistence Assembly : Aviant.DDD.Infrastructure.dll Syntax public sealed class UnitOfWork<TAggregate, TAggregateId> : object, IUnitOfWork<TAggregate, TAggregateId> where TAggregate : class, IAggregate<TAggregateId> where TAggregateId : class, IAggregateId Type Parameters Name Description TAggregate TAggregateId Constructors | Improve this Doc View Source UnitOfWork(IEventsService<TAggregate, TAggregateId>) Declaration public UnitOfWork(IEventsService<TAggregate, TAggregateId> eventsService) Parameters Type Name Description IEventsService <TAggregate, TAggregateId> eventsService Methods | Improve this Doc View Source CommitAsync(TAggregate, CancellationToken) Declaration public Task<bool> CommitAsync(TAggregate aggregate, CancellationToken cancellationToken = null) Parameters Type Name Description TAggregate aggregate CancellationToken cancellationToken Returns Type Description Task < System.Boolean > Implements IUnitOfWork<TAggregate, TAggregateId>"
  },
  "api/Aviant.DDD.Infrastructure.Services.CsvFileBuilder-2.html": {
    "href": "api/Aviant.DDD.Infrastructure.Services.CsvFileBuilder-2.html",
    "title": "Class CsvFileBuilder<TRecrod, TMap> | Aviant DDD Library Documentation",
    "keywords": "Class CsvFileBuilder<TRecrod, TMap> Inheritance System.Object CsvFileBuilder<TRecrod, TMap> Implements ICsvFileBuilder <TRecrod> Namespace : Aviant.DDD.Infrastructure.Services Assembly : Aviant.DDD.Infrastructure.dll Syntax public sealed class CsvFileBuilder<TRecrod, TMap> : object, ICsvFileBuilder<TRecrod> where TRecrod : class where TMap : ClassMap<TRecrod> Type Parameters Name Description TRecrod TMap Methods | Improve this Doc View Source BuildTodoItemsFile(IEnumerable<TRecrod>) Declaration public byte[] BuildTodoItemsFile(IEnumerable<TRecrod> records) Parameters Type Name Description IEnumerable <TRecrod> records Returns Type Description System.Byte [] Implements ICsvFileBuilder<TRecord>"
  },
  "api/Aviant.DDD.Infrastructure.Services.DateTimeService.html": {
    "href": "api/Aviant.DDD.Infrastructure.Services.DateTimeService.html",
    "title": "Class DateTimeService | Aviant DDD Library Documentation",
    "keywords": "Class DateTimeService Inheritance System.Object DateTimeService Implements IDateTimeService Namespace : Aviant.DDD.Infrastructure.Services Assembly : Aviant.DDD.Infrastructure.dll Syntax public sealed class DateTimeService : object, IDateTimeService Methods | Improve this Doc View Source Now(Boolean) Declaration public DateTime Now(bool utc = false) Parameters Type Name Description System.Boolean utc Returns Type Description DateTime Implements IDateTimeService"
  },
  "api/Aviant.DDD.Infrastructure.Services.EmailService.html": {
    "href": "api/Aviant.DDD.Infrastructure.Services.EmailService.html",
    "title": "Class EmailService | Aviant DDD Library Documentation",
    "keywords": "Class EmailService Inheritance System.Object EmailService Implements IEmailService Namespace : Aviant.DDD.Infrastructure.Services Assembly : Aviant.DDD.Infrastructure.dll Syntax public class EmailService : object, IEmailService Constructors | Improve this Doc View Source EmailService(String, String, String, String, ISmtpClientFactory, MimeMessage, SmtpClient) Declaration public EmailService(string senderName, string senderEmail, string receiverName, string receiverEmail, ISmtpClientFactory smtpClientFactory, MimeMessage message, SmtpClient smtpClient) Parameters Type Name Description System.String senderName System.String senderEmail System.String receiverName System.String receiverEmail ISmtpClientFactory smtpClientFactory MimeMessage message SmtpClient smtpClient Methods | Improve this Doc View Source From(String, String) Declaration public IEmailService From(string name, string address) Parameters Type Name Description System.String name System.String address Returns Type Description IEmailService | Improve this Doc View Source FromServer() Declaration public IEmailService FromServer() Returns Type Description IEmailService | Improve this Doc View Source Message() Declaration public IEmailService Message() Returns Type Description IEmailService | Improve this Doc View Source Send() Declaration public bool Send() Returns Type Description System.Boolean | Improve this Doc View Source SendAsync(CancellationToken) Declaration public Task<bool> SendAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.Boolean > | Improve this Doc View Source To(String, String) Declaration public IEmailService To(string name, string address) Parameters Type Name Description System.String name System.String address Returns Type Description IEmailService | Improve this Doc View Source ToServer() Declaration public IEmailService ToServer() Returns Type Description IEmailService | Improve this Doc View Source WithBodyHtml(String) Declaration public IEmailService WithBodyHtml(string body) Parameters Type Name Description System.String body Returns Type Description IEmailService | Improve this Doc View Source WithBodyPlain(String) Declaration public IEmailService WithBodyPlain(string body) Parameters Type Name Description System.String body Returns Type Description IEmailService | Improve this Doc View Source WithSubject(String) Declaration public IEmailService WithSubject(string subject) Parameters Type Name Description System.String subject Returns Type Description IEmailService Implements IEmailService"
  },
  "api/Aviant.DDD.Infrastructure.Services.html": {
    "href": "api/Aviant.DDD.Infrastructure.Services.html",
    "title": "Namespace Aviant.DDD.Infrastructure.Services | Aviant DDD Library Documentation",
    "keywords": "Namespace Aviant.DDD.Infrastructure.Services Classes CsvFileBuilder<TRecrod, TMap> DateTimeService EmailService SmtpClientFactory Interfaces ISmtpClientFactory"
  },
  "api/Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.html": {
    "href": "api/Aviant.DDD.Infrastructure.Services.ISmtpClientFactory.html",
    "title": "Interface ISmtpClientFactory | Aviant DDD Library Documentation",
    "keywords": "Interface ISmtpClientFactory Namespace : Aviant.DDD.Infrastructure.Services Assembly : Aviant.DDD.Infrastructure.dll Syntax public interface ISmtpClientFactory Methods | Improve this Doc View Source GetSmtpClient() Declaration SmtpClient GetSmtpClient() Returns Type Description SmtpClient"
  },
  "api/Aviant.DDD.Infrastructure.Services.SmtpClientFactory.html": {
    "href": "api/Aviant.DDD.Infrastructure.Services.SmtpClientFactory.html",
    "title": "Class SmtpClientFactory | Aviant DDD Library Documentation",
    "keywords": "Class SmtpClientFactory Inheritance System.Object SmtpClientFactory Implements ISmtpClientFactory Namespace : Aviant.DDD.Infrastructure.Services Assembly : Aviant.DDD.Infrastructure.dll Syntax public class SmtpClientFactory : object, ISmtpClientFactory Constructors | Improve this Doc View Source SmtpClientFactory(String, Int32, Boolean, String, String) Declaration public SmtpClientFactory(string address, int port, bool useSsl, string username, string password) Parameters Type Name Description System.String address System.Int32 port System.Boolean useSsl System.String username System.String password Methods | Improve this Doc View Source GetSmtpClient() Declaration public SmtpClient GetSmtpClient() Returns Type Description SmtpClient Implements ISmtpClientFactory"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Aviant DDD Library Documentation",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "articles/about.html": {
    "href": "articles/about.html",
    "title": "About title | Aviant DDD Library Documentation",
    "keywords": "About title"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Aviant DDD Library Documentation",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Aviant DDD Library Documentation",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}